(()=>{var Qp=Object.create;var ta=Object.defineProperty;var _p=Object.getOwnPropertyDescriptor;var $p=Object.getOwnPropertyNames;var em=Object.getPrototypeOf,tm=Object.prototype.hasOwnProperty;var B=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),rm=(t,e)=>{for(var r in e)ta(t,r,{get:e[r],enumerable:!0})},nm=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of $p(e))!tm.call(t,i)&&i!==r&&ta(t,i,{get:()=>e[i],enumerable:!(n=_p(e,i))||n.enumerable});return t};var vn=(t,e,r)=>(r=t!=null?Qp(em(t)):{},nm(e||!t||!t.__esModule?ta(r,"default",{value:t,enumerable:!0}):r,t));var ra=B((p3,ju)=>{"use strict";ju.exports=function(e,r){return function(){for(var i=new Array(arguments.length),o=0;o<i.length;o++)i[o]=arguments[o];return e.apply(r,i)}}});var at=B((m3,Uu)=>{"use strict";var im=ra(),ia=Object.prototype.toString,oa=function(t){return function(e){var r=ia.call(e);return t[r]||(t[r]=r.slice(8,-1).toLowerCase())}}(Object.create(null));function Yr(t){return t=t.toLowerCase(),function(r){return oa(r)===t}}function sa(t){return Array.isArray(t)}function Wi(t){return typeof t>"u"}function om(t){return t!==null&&!Wi(t)&&t.constructor!==null&&!Wi(t.constructor)&&typeof t.constructor.isBuffer=="function"&&t.constructor.isBuffer(t)}var Su=Yr("ArrayBuffer");function sm(t){var e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(t):e=t&&t.buffer&&Su(t.buffer),e}function am(t){return typeof t=="string"}function fm(t){return typeof t=="number"}function Bu(t){return t!==null&&typeof t=="object"}function Yi(t){if(oa(t)!=="object")return!1;var e=Object.getPrototypeOf(t);return e===null||e===Object.prototype}var um=Yr("Date"),cm=Yr("File"),lm=Yr("Blob"),hm=Yr("FileList");function aa(t){return ia.call(t)==="[object Function]"}function dm(t){return Bu(t)&&aa(t.pipe)}function pm(t){var e="[object FormData]";return t&&(typeof FormData=="function"&&t instanceof FormData||ia.call(t)===e||aa(t.toString)&&t.toString()===e)}var mm=Yr("URLSearchParams");function ym(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function vm(){return typeof navigator<"u"&&(navigator.product==="ReactNative"||navigator.product==="NativeScript"||navigator.product==="NS")?!1:typeof window<"u"&&typeof document<"u"}function fa(t,e){if(!(t===null||typeof t>"u"))if(typeof t!="object"&&(t=[t]),sa(t))for(var r=0,n=t.length;r<n;r++)e.call(null,t[r],r,t);else for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.call(null,t[i],i,t)}function na(){var t={};function e(i,o){Yi(t[o])&&Yi(i)?t[o]=na(t[o],i):Yi(i)?t[o]=na({},i):sa(i)?t[o]=i.slice():t[o]=i}for(var r=0,n=arguments.length;r<n;r++)fa(arguments[r],e);return t}function bm(t,e,r){return fa(e,function(i,o){r&&typeof i=="function"?t[o]=im(i,r):t[o]=i}),t}function gm(t){return t.charCodeAt(0)===65279&&(t=t.slice(1)),t}function wm(t,e,r,n){t.prototype=Object.create(e.prototype,n),t.prototype.constructor=t,r&&Object.assign(t.prototype,r)}function xm(t,e,r){var n,i,o,s={};e=e||{};do{for(n=Object.getOwnPropertyNames(t),i=n.length;i-- >0;)o=n[i],s[o]||(e[o]=t[o],s[o]=!0);t=Object.getPrototypeOf(t)}while(t&&(!r||r(t,e))&&t!==Object.prototype);return e}function Am(t,e,r){t=String(t),(r===void 0||r>t.length)&&(r=t.length),r-=e.length;var n=t.indexOf(e,r);return n!==-1&&n===r}function Pm(t){if(!t)return null;var e=t.length;if(Wi(e))return null;for(var r=new Array(e);e-- >0;)r[e]=t[e];return r}var Om=function(t){return function(e){return t&&e instanceof t}}(typeof Uint8Array<"u"&&Object.getPrototypeOf(Uint8Array));Uu.exports={isArray:sa,isArrayBuffer:Su,isBuffer:om,isFormData:pm,isArrayBufferView:sm,isString:am,isNumber:fm,isObject:Bu,isPlainObject:Yi,isUndefined:Wi,isDate:um,isFile:cm,isBlob:lm,isFunction:aa,isStream:dm,isURLSearchParams:mm,isStandardBrowserEnv:vm,forEach:fa,merge:na,extend:bm,trim:ym,stripBOM:gm,inherits:wm,toFlatObject:xm,kindOf:oa,kindOfTest:Yr,endsWith:Am,toArray:Pm,isTypedArray:Om,isFileList:hm}});var ua=B((y3,Fu)=>{"use strict";var bn=at();function Ru(t){return encodeURIComponent(t).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}Fu.exports=function(e,r,n){if(!r)return e;var i;if(n)i=n(r);else if(bn.isURLSearchParams(r))i=r.toString();else{var o=[];bn.forEach(r,function(d,m){d===null||typeof d>"u"||(bn.isArray(d)?m=m+"[]":d=[d],bn.forEach(d,function(A){bn.isDate(A)?A=A.toISOString():bn.isObject(A)&&(A=JSON.stringify(A)),o.push(Ru(m)+"="+Ru(A))}))}),i=o.join("&")}if(i){var s=e.indexOf("#");s!==-1&&(e=e.slice(0,s)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e}});var Xu=B((v3,Cu)=>{"use strict";var Em=at();function Ji(){this.handlers=[]}Ji.prototype.use=function(e,r,n){return this.handlers.push({fulfilled:e,rejected:r,synchronous:n?n.synchronous:!1,runWhen:n?n.runWhen:null}),this.handlers.length-1};Ji.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)};Ji.prototype.forEach=function(e){Em.forEach(this.handlers,function(n){n!==null&&e(n)})};Cu.exports=Ji});var Hu=B((b3,Du)=>{"use strict";var Tm=at();Du.exports=function(e,r){Tm.forEach(e,function(i,o){o!==r&&o.toUpperCase()===r.toUpperCase()&&(e[r]=i,delete e[o])})}});var Wr=B((g3,Vu)=>{"use strict";var Iu=at();function gn(t,e,r,n,i){Error.call(this),this.message=t,this.name="AxiosError",e&&(this.code=e),r&&(this.config=r),n&&(this.request=n),i&&(this.response=i)}Iu.inherits(gn,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var qu=gn.prototype,Zu={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach(function(t){Zu[t]={value:t}});Object.defineProperties(gn,Zu);Object.defineProperty(qu,"isAxiosError",{value:!0});gn.from=function(t,e,r,n,i,o){var s=Object.create(qu);return Iu.toFlatObject(t,s,function(d){return d!==Error.prototype}),gn.call(s,t.message,e,r,n,i),s.name=t.name,o&&Object.assign(s,o),s};Vu.exports=gn});var ca=B((w3,Gu)=>{"use strict";Gu.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}});var la=B((x3,Yu)=>{"use strict";var Dt=at();function Nm(t,e){e=e||new FormData;var r=[];function n(o){return o===null?"":Dt.isDate(o)?o.toISOString():Dt.isArrayBuffer(o)||Dt.isTypedArray(o)?typeof Blob=="function"?new Blob([o]):Buffer.from(o):o}function i(o,s){if(Dt.isPlainObject(o)||Dt.isArray(o)){if(r.indexOf(o)!==-1)throw Error("Circular reference detected in "+s);r.push(o),Dt.forEach(o,function(d,m){if(!Dt.isUndefined(d)){var y=s?s+"."+m:m,A;if(d&&!s&&typeof d=="object"){if(Dt.endsWith(m,"{}"))d=JSON.stringify(d);else if(Dt.endsWith(m,"[]")&&(A=Dt.toArray(d))){A.forEach(function(M){!Dt.isUndefined(M)&&e.append(y,n(M))});return}}i(d,y)}}),r.pop()}else e.append(s,n(o))}return i(t),e}Yu.exports=Nm});var Ju=B((A3,Wu)=>{"use strict";var ha=Wr();Wu.exports=function(e,r,n){var i=n.config.validateStatus;!n.status||!i||i(n.status)?e(n):r(new ha("Request failed with status code "+n.status,[ha.ERR_BAD_REQUEST,ha.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n))}});var Qu=B((P3,Ku)=>{"use strict";var Ki=at();Ku.exports=Ki.isStandardBrowserEnv()?function(){return{write:function(r,n,i,o,s,c){var d=[];d.push(r+"="+encodeURIComponent(n)),Ki.isNumber(i)&&d.push("expires="+new Date(i).toGMTString()),Ki.isString(o)&&d.push("path="+o),Ki.isString(s)&&d.push("domain="+s),c===!0&&d.push("secure"),document.cookie=d.join("; ")},read:function(r){var n=document.cookie.match(new RegExp("(^|;\\s*)("+r+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(r){this.write(r,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()});var $u=B((O3,_u)=>{"use strict";_u.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}});var tc=B((E3,ec)=>{"use strict";ec.exports=function(e,r){return r?e.replace(/\/+$/,"")+"/"+r.replace(/^\/+/,""):e}});var da=B((T3,rc)=>{"use strict";var Mm=$u(),km=tc();rc.exports=function(e,r){return e&&!Mm(r)?km(e,r):r}});var ic=B((N3,nc)=>{"use strict";var pa=at(),zm=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];nc.exports=function(e){var r={},n,i,o;return e&&pa.forEach(e.split(`
`),function(c){if(o=c.indexOf(":"),n=pa.trim(c.substr(0,o)).toLowerCase(),i=pa.trim(c.substr(o+1)),n){if(r[n]&&zm.indexOf(n)>=0)return;n==="set-cookie"?r[n]=(r[n]?r[n]:[]).concat([i]):r[n]=r[n]?r[n]+", "+i:i}}),r}});var ac=B((M3,sc)=>{"use strict";var oc=at();sc.exports=oc.isStandardBrowserEnv()?function(){var e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a"),n;function i(o){var s=o;return e&&(r.setAttribute("href",s),s=r.href),r.setAttribute("href",s),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:r.pathname.charAt(0)==="/"?r.pathname:"/"+r.pathname}}return n=i(window.location.href),function(s){var c=oc.isString(s)?i(s):s;return c.protocol===n.protocol&&c.host===n.host}}():function(){return function(){return!0}}()});var li=B((k3,uc)=>{"use strict";var ma=Wr(),Lm=at();function fc(t){ma.call(this,t??"canceled",ma.ERR_CANCELED),this.name="CanceledError"}Lm.inherits(fc,ma,{__CANCEL__:!0});uc.exports=fc});var lc=B((z3,cc)=>{"use strict";cc.exports=function(e){var r=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return r&&r[1]||""}});var ya=B((L3,hc)=>{"use strict";var hi=at(),jm=Ju(),Sm=Qu(),Bm=ua(),Um=da(),Rm=ic(),Fm=ac(),Cm=ca(),ir=Wr(),Xm=li(),Dm=lc();hc.exports=function(e){return new Promise(function(n,i){var o=e.data,s=e.headers,c=e.responseType,d;function m(){e.cancelToken&&e.cancelToken.unsubscribe(d),e.signal&&e.signal.removeEventListener("abort",d)}hi.isFormData(o)&&hi.isStandardBrowserEnv()&&delete s["Content-Type"];var y=new XMLHttpRequest;if(e.auth){var A=e.auth.username||"",M=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";s.Authorization="Basic "+btoa(A+":"+M)}var N=Um(e.baseURL,e.url);y.open(e.method.toUpperCase(),Bm(N,e.params,e.paramsSerializer),!0),y.timeout=e.timeout;function L(){if(y){var K="getAllResponseHeaders"in y?Rm(y.getAllResponseHeaders()):null,Q=!c||c==="text"||c==="json"?y.responseText:y.response,_={data:Q,status:y.status,statusText:y.statusText,headers:K,config:e,request:y};jm(function(fe){n(fe),m()},function(fe){i(fe),m()},_),y=null}}if("onloadend"in y?y.onloadend=L:y.onreadystatechange=function(){!y||y.readyState!==4||y.status===0&&!(y.responseURL&&y.responseURL.indexOf("file:")===0)||setTimeout(L)},y.onabort=function(){y&&(i(new ir("Request aborted",ir.ECONNABORTED,e,y)),y=null)},y.onerror=function(){i(new ir("Network Error",ir.ERR_NETWORK,e,y,y)),y=null},y.ontimeout=function(){var Q=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",_=e.transitional||Cm;e.timeoutErrorMessage&&(Q=e.timeoutErrorMessage),i(new ir(Q,_.clarifyTimeoutError?ir.ETIMEDOUT:ir.ECONNABORTED,e,y)),y=null},hi.isStandardBrowserEnv()){var S=(e.withCredentials||Fm(N))&&e.xsrfCookieName?Sm.read(e.xsrfCookieName):void 0;S&&(s[e.xsrfHeaderName]=S)}"setRequestHeader"in y&&hi.forEach(s,function(Q,_){typeof o>"u"&&_.toLowerCase()==="content-type"?delete s[_]:y.setRequestHeader(_,Q)}),hi.isUndefined(e.withCredentials)||(y.withCredentials=!!e.withCredentials),c&&c!=="json"&&(y.responseType=e.responseType),typeof e.onDownloadProgress=="function"&&y.addEventListener("progress",e.onDownloadProgress),typeof e.onUploadProgress=="function"&&y.upload&&y.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(d=function(K){y&&(i(!K||K&&K.type?new Xm:K),y.abort(),y=null)},e.cancelToken&&e.cancelToken.subscribe(d),e.signal&&(e.signal.aborted?d():e.signal.addEventListener("abort",d))),o||(o=null);var H=Dm(N);if(H&&["http","https","file"].indexOf(H)===-1){i(new ir("Unsupported protocol "+H+":",ir.ERR_BAD_REQUEST,e));return}y.send(o)})}});var pc=B((j3,dc)=>{dc.exports=null});var _i=B((S3,bc)=>{"use strict";var ft=at(),mc=Hu(),yc=Wr(),Hm=ca(),Im=la(),qm={"Content-Type":"application/x-www-form-urlencoded"};function vc(t,e){!ft.isUndefined(t)&&ft.isUndefined(t["Content-Type"])&&(t["Content-Type"]=e)}function Zm(){var t;return typeof XMLHttpRequest<"u"?t=ya():typeof process<"u"&&Object.prototype.toString.call(process)==="[object process]"&&(t=ya()),t}function Vm(t,e,r){if(ft.isString(t))try{return(e||JSON.parse)(t),ft.trim(t)}catch(n){if(n.name!=="SyntaxError")throw n}return(r||JSON.stringify)(t)}var Qi={transitional:Hm,adapter:Zm(),transformRequest:[function(e,r){if(mc(r,"Accept"),mc(r,"Content-Type"),ft.isFormData(e)||ft.isArrayBuffer(e)||ft.isBuffer(e)||ft.isStream(e)||ft.isFile(e)||ft.isBlob(e))return e;if(ft.isArrayBufferView(e))return e.buffer;if(ft.isURLSearchParams(e))return vc(r,"application/x-www-form-urlencoded;charset=utf-8"),e.toString();var n=ft.isObject(e),i=r&&r["Content-Type"],o;if((o=ft.isFileList(e))||n&&i==="multipart/form-data"){var s=this.env&&this.env.FormData;return Im(o?{"files[]":e}:e,s&&new s)}else if(n||i==="application/json")return vc(r,"application/json"),Vm(e);return e}],transformResponse:[function(e){var r=this.transitional||Qi.transitional,n=r&&r.silentJSONParsing,i=r&&r.forcedJSONParsing,o=!n&&this.responseType==="json";if(o||i&&ft.isString(e)&&e.length)try{return JSON.parse(e)}catch(s){if(o)throw s.name==="SyntaxError"?yc.from(s,yc.ERR_BAD_RESPONSE,this,null,this.response):s}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:pc()},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};ft.forEach(["delete","get","head"],function(e){Qi.headers[e]={}});ft.forEach(["post","put","patch"],function(e){Qi.headers[e]=ft.merge(qm)});bc.exports=Qi});var wc=B((B3,gc)=>{"use strict";var Gm=at(),Ym=_i();gc.exports=function(e,r,n){var i=this||Ym;return Gm.forEach(n,function(s){e=s.call(i,e,r)}),e}});var va=B((U3,xc)=>{"use strict";xc.exports=function(e){return!!(e&&e.__CANCEL__)}});var Oc=B((R3,Pc)=>{"use strict";var Ac=at(),ba=wc(),Wm=va(),Jm=_i(),Km=li();function ga(t){if(t.cancelToken&&t.cancelToken.throwIfRequested(),t.signal&&t.signal.aborted)throw new Km}Pc.exports=function(e){ga(e),e.headers=e.headers||{},e.data=ba.call(e,e.data,e.headers,e.transformRequest),e.headers=Ac.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),Ac.forEach(["delete","get","head","post","put","patch","common"],function(i){delete e.headers[i]});var r=e.adapter||Jm.adapter;return r(e).then(function(i){return ga(e),i.data=ba.call(e,i.data,i.headers,e.transformResponse),i},function(i){return Wm(i)||(ga(e),i&&i.response&&(i.response.data=ba.call(e,i.response.data,i.response.headers,e.transformResponse))),Promise.reject(i)})}});var wa=B((F3,Ec)=>{"use strict";var Nt=at();Ec.exports=function(e,r){r=r||{};var n={};function i(y,A){return Nt.isPlainObject(y)&&Nt.isPlainObject(A)?Nt.merge(y,A):Nt.isPlainObject(A)?Nt.merge({},A):Nt.isArray(A)?A.slice():A}function o(y){if(Nt.isUndefined(r[y])){if(!Nt.isUndefined(e[y]))return i(void 0,e[y])}else return i(e[y],r[y])}function s(y){if(!Nt.isUndefined(r[y]))return i(void 0,r[y])}function c(y){if(Nt.isUndefined(r[y])){if(!Nt.isUndefined(e[y]))return i(void 0,e[y])}else return i(void 0,r[y])}function d(y){if(y in r)return i(e[y],r[y]);if(y in e)return i(void 0,e[y])}var m={url:s,method:s,data:s,baseURL:c,transformRequest:c,transformResponse:c,paramsSerializer:c,timeout:c,timeoutMessage:c,withCredentials:c,adapter:c,responseType:c,xsrfCookieName:c,xsrfHeaderName:c,onUploadProgress:c,onDownloadProgress:c,decompress:c,maxContentLength:c,maxBodyLength:c,beforeRedirect:c,transport:c,httpAgent:c,httpsAgent:c,cancelToken:c,socketPath:c,responseEncoding:c,validateStatus:d};return Nt.forEach(Object.keys(e).concat(Object.keys(r)),function(A){var M=m[A]||o,N=M(A);Nt.isUndefined(N)&&M!==d||(n[A]=N)}),n}});var xa=B((C3,Tc)=>{Tc.exports={version:"0.27.2"}});var kc=B((X3,Mc)=>{"use strict";var Qm=xa().version,xr=Wr(),Aa={};["object","boolean","number","function","string","symbol"].forEach(function(t,e){Aa[t]=function(n){return typeof n===t||"a"+(e<1?"n ":" ")+t}});var Nc={};Aa.transitional=function(e,r,n){function i(o,s){return"[Axios v"+Qm+"] Transitional option '"+o+"'"+s+(n?". "+n:"")}return function(o,s,c){if(e===!1)throw new xr(i(s," has been removed"+(r?" in "+r:"")),xr.ERR_DEPRECATED);return r&&!Nc[s]&&(Nc[s]=!0,console.warn(i(s," has been deprecated since v"+r+" and will be removed in the near future"))),e?e(o,s,c):!0}};function _m(t,e,r){if(typeof t!="object")throw new xr("options must be an object",xr.ERR_BAD_OPTION_VALUE);for(var n=Object.keys(t),i=n.length;i-- >0;){var o=n[i],s=e[o];if(s){var c=t[o],d=c===void 0||s(c,o,t);if(d!==!0)throw new xr("option "+o+" must be "+d,xr.ERR_BAD_OPTION_VALUE);continue}if(r!==!0)throw new xr("Unknown option "+o,xr.ERR_BAD_OPTION)}}Mc.exports={assertOptions:_m,validators:Aa}});var Uc=B((D3,Bc)=>{"use strict";var jc=at(),$m=ua(),zc=Xu(),Lc=Oc(),$i=wa(),ey=da(),Sc=kc(),wn=Sc.validators;function xn(t){this.defaults=t,this.interceptors={request:new zc,response:new zc}}xn.prototype.request=function(e,r){typeof e=="string"?(r=r||{},r.url=e):r=e||{},r=$i(this.defaults,r),r.method?r.method=r.method.toLowerCase():this.defaults.method?r.method=this.defaults.method.toLowerCase():r.method="get";var n=r.transitional;n!==void 0&&Sc.assertOptions(n,{silentJSONParsing:wn.transitional(wn.boolean),forcedJSONParsing:wn.transitional(wn.boolean),clarifyTimeoutError:wn.transitional(wn.boolean)},!1);var i=[],o=!0;this.interceptors.request.forEach(function(N){typeof N.runWhen=="function"&&N.runWhen(r)===!1||(o=o&&N.synchronous,i.unshift(N.fulfilled,N.rejected))});var s=[];this.interceptors.response.forEach(function(N){s.push(N.fulfilled,N.rejected)});var c;if(!o){var d=[Lc,void 0];for(Array.prototype.unshift.apply(d,i),d=d.concat(s),c=Promise.resolve(r);d.length;)c=c.then(d.shift(),d.shift());return c}for(var m=r;i.length;){var y=i.shift(),A=i.shift();try{m=y(m)}catch(M){A(M);break}}try{c=Lc(m)}catch(M){return Promise.reject(M)}for(;s.length;)c=c.then(s.shift(),s.shift());return c};xn.prototype.getUri=function(e){e=$i(this.defaults,e);var r=ey(e.baseURL,e.url);return $m(r,e.params,e.paramsSerializer)};jc.forEach(["delete","get","head","options"],function(e){xn.prototype[e]=function(r,n){return this.request($i(n||{},{method:e,url:r,data:(n||{}).data}))}});jc.forEach(["post","put","patch"],function(e){function r(n){return function(o,s,c){return this.request($i(c||{},{method:e,headers:n?{"Content-Type":"multipart/form-data"}:{},url:o,data:s}))}}xn.prototype[e]=r(),xn.prototype[e+"Form"]=r(!0)});Bc.exports=xn});var Fc=B((H3,Rc)=>{"use strict";var ty=li();function An(t){if(typeof t!="function")throw new TypeError("executor must be a function.");var e;this.promise=new Promise(function(i){e=i});var r=this;this.promise.then(function(n){if(r._listeners){var i,o=r._listeners.length;for(i=0;i<o;i++)r._listeners[i](n);r._listeners=null}}),this.promise.then=function(n){var i,o=new Promise(function(s){r.subscribe(s),i=s}).then(n);return o.cancel=function(){r.unsubscribe(i)},o},t(function(i){r.reason||(r.reason=new ty(i),e(r.reason))})}An.prototype.throwIfRequested=function(){if(this.reason)throw this.reason};An.prototype.subscribe=function(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]};An.prototype.unsubscribe=function(e){if(this._listeners){var r=this._listeners.indexOf(e);r!==-1&&this._listeners.splice(r,1)}};An.source=function(){var e,r=new An(function(i){e=i});return{token:r,cancel:e}};Rc.exports=An});var Xc=B((I3,Cc)=>{"use strict";Cc.exports=function(e){return function(n){return e.apply(null,n)}}});var Hc=B((q3,Dc)=>{"use strict";var ry=at();Dc.exports=function(e){return ry.isObject(e)&&e.isAxiosError===!0}});var Zc=B((Z3,Pa)=>{"use strict";var Ic=at(),ny=ra(),eo=Uc(),iy=wa(),oy=_i();function qc(t){var e=new eo(t),r=ny(eo.prototype.request,e);return Ic.extend(r,eo.prototype,e),Ic.extend(r,e),r.create=function(i){return qc(iy(t,i))},r}var Ot=qc(oy);Ot.Axios=eo;Ot.CanceledError=li();Ot.CancelToken=Fc();Ot.isCancel=va();Ot.VERSION=xa().version;Ot.toFormData=la();Ot.AxiosError=Wr();Ot.Cancel=Ot.CanceledError;Ot.all=function(e){return Promise.all(e)};Ot.spread=Xc();Ot.isAxiosError=Hc();Pa.exports=Ot;Pa.exports.default=Ot});var Gc=B((V3,Vc)=>{Vc.exports=Zc()});var Yc=B(()=>{});var Jc=B((Wc,Oa)=>{(function(t,e){"use strict";function r(w,a){if(!w)throw new Error(a||"Assertion failed")}function n(w,a){w.super_=a;var u=function(){};u.prototype=a.prototype,w.prototype=new u,w.prototype.constructor=w}function i(w,a,u){if(i.isBN(w))return w;this.negative=0,this.words=null,this.length=0,this.red=null,w!==null&&((a==="le"||a==="be")&&(u=a,a=10),this._init(w||0,a||10,u||"be"))}typeof t=="object"?t.exports=i:e.BN=i,i.BN=i,i.wordSize=26;var o;try{typeof window<"u"&&typeof window.Buffer<"u"?o=window.Buffer:o=Yc().Buffer}catch{}i.isBN=function(a){return a instanceof i?!0:a!==null&&typeof a=="object"&&a.constructor.wordSize===i.wordSize&&Array.isArray(a.words)},i.max=function(a,u){return a.cmp(u)>0?a:u},i.min=function(a,u){return a.cmp(u)<0?a:u},i.prototype._init=function(a,u,h){if(typeof a=="number")return this._initNumber(a,u,h);if(typeof a=="object")return this._initArray(a,u,h);u==="hex"&&(u=16),r(u===(u|0)&&u>=2&&u<=36),a=a.toString().replace(/\s+/g,"");var p=0;a[0]==="-"&&(p++,this.negative=1),p<a.length&&(u===16?this._parseHex(a,p,h):(this._parseBase(a,u,p),h==="le"&&this._initArray(this.toArray(),u,h)))},i.prototype._initNumber=function(a,u,h){a<0&&(this.negative=1,a=-a),a<67108864?(this.words=[a&67108863],this.length=1):a<4503599627370496?(this.words=[a&67108863,a/67108864&67108863],this.length=2):(r(a<9007199254740992),this.words=[a&67108863,a/67108864&67108863,1],this.length=3),h==="le"&&this._initArray(this.toArray(),u,h)},i.prototype._initArray=function(a,u,h){if(r(typeof a.length=="number"),a.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(a.length/3),this.words=new Array(this.length);for(var p=0;p<this.length;p++)this.words[p]=0;var b,x,P=0;if(h==="be")for(p=a.length-1,b=0;p>=0;p-=3)x=a[p]|a[p-1]<<8|a[p-2]<<16,this.words[b]|=x<<P&67108863,this.words[b+1]=x>>>26-P&67108863,P+=24,P>=26&&(P-=26,b++);else if(h==="le")for(p=0,b=0;p<a.length;p+=3)x=a[p]|a[p+1]<<8|a[p+2]<<16,this.words[b]|=x<<P&67108863,this.words[b+1]=x>>>26-P&67108863,P+=24,P>=26&&(P-=26,b++);return this._strip()};function s(w,a){var u=w.charCodeAt(a);if(u>=48&&u<=57)return u-48;if(u>=65&&u<=70)return u-55;if(u>=97&&u<=102)return u-87;r(!1,"Invalid character in "+w)}function c(w,a,u){var h=s(w,u);return u-1>=a&&(h|=s(w,u-1)<<4),h}i.prototype._parseHex=function(a,u,h){this.length=Math.ceil((a.length-u)/6),this.words=new Array(this.length);for(var p=0;p<this.length;p++)this.words[p]=0;var b=0,x=0,P;if(h==="be")for(p=a.length-1;p>=u;p-=2)P=c(a,u,p)<<b,this.words[x]|=P&67108863,b>=18?(b-=18,x+=1,this.words[x]|=P>>>26):b+=8;else{var v=a.length-u;for(p=v%2===0?u+1:u;p<a.length;p+=2)P=c(a,u,p)<<b,this.words[x]|=P&67108863,b>=18?(b-=18,x+=1,this.words[x]|=P>>>26):b+=8}this._strip()};function d(w,a,u,h){for(var p=0,b=0,x=Math.min(w.length,u),P=a;P<x;P++){var v=w.charCodeAt(P)-48;p*=h,v>=49?b=v-49+10:v>=17?b=v-17+10:b=v,r(v>=0&&b<h,"Invalid character"),p+=b}return p}i.prototype._parseBase=function(a,u,h){this.words=[0],this.length=1;for(var p=0,b=1;b<=67108863;b*=u)p++;p--,b=b/u|0;for(var x=a.length-h,P=x%p,v=Math.min(x,x-P)+h,f=0,g=h;g<v;g+=p)f=d(a,g,g+p,u),this.imuln(b),this.words[0]+f<67108864?this.words[0]+=f:this._iaddn(f);if(P!==0){var F=1;for(f=d(a,g,a.length,u),g=0;g<P;g++)F*=u;this.imuln(F),this.words[0]+f<67108864?this.words[0]+=f:this._iaddn(f)}this._strip()},i.prototype.copy=function(a){a.words=new Array(this.length);for(var u=0;u<this.length;u++)a.words[u]=this.words[u];a.length=this.length,a.negative=this.negative,a.red=this.red};function m(w,a){w.words=a.words,w.length=a.length,w.negative=a.negative,w.red=a.red}if(i.prototype._move=function(a){m(a,this)},i.prototype.clone=function(){var a=new i(null);return this.copy(a),a},i.prototype._expand=function(a){for(;this.length<a;)this.words[this.length++]=0;return this},i.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{i.prototype[Symbol.for("nodejs.util.inspect.custom")]=y}catch{i.prototype.inspect=y}else i.prototype.inspect=y;function y(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var A=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],M=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],N=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];i.prototype.toString=function(a,u){a=a||10,u=u|0||1;var h;if(a===16||a==="hex"){h="";for(var p=0,b=0,x=0;x<this.length;x++){var P=this.words[x],v=((P<<p|b)&16777215).toString(16);b=P>>>24-p&16777215,p+=2,p>=26&&(p-=26,x--),b!==0||x!==this.length-1?h=A[6-v.length]+v+h:h=v+h}for(b!==0&&(h=b.toString(16)+h);h.length%u!==0;)h="0"+h;return this.negative!==0&&(h="-"+h),h}if(a===(a|0)&&a>=2&&a<=36){var f=M[a],g=N[a];h="";var F=this.clone();for(F.negative=0;!F.isZero();){var l=F.modrn(g).toString(a);F=F.idivn(g),F.isZero()?h=l+h:h=A[f-l.length]+l+h}for(this.isZero()&&(h="0"+h);h.length%u!==0;)h="0"+h;return this.negative!==0&&(h="-"+h),h}r(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var a=this.words[0];return this.length===2?a+=this.words[1]*67108864:this.length===3&&this.words[2]===1?a+=4503599627370496+this.words[1]*67108864:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-a:a},i.prototype.toJSON=function(){return this.toString(16,2)},o&&(i.prototype.toBuffer=function(a,u){return this.toArrayLike(o,a,u)}),i.prototype.toArray=function(a,u){return this.toArrayLike(Array,a,u)};var L=function(a,u){return a.allocUnsafe?a.allocUnsafe(u):new a(u)};i.prototype.toArrayLike=function(a,u,h){this._strip();var p=this.byteLength(),b=h||Math.max(1,p);r(p<=b,"byte array longer than desired length"),r(b>0,"Requested array length <= 0");var x=L(a,b),P=u==="le"?"LE":"BE";return this["_toArrayLike"+P](x,p),x},i.prototype._toArrayLikeLE=function(a,u){for(var h=0,p=0,b=0,x=0;b<this.length;b++){var P=this.words[b]<<x|p;a[h++]=P&255,h<a.length&&(a[h++]=P>>8&255),h<a.length&&(a[h++]=P>>16&255),x===6?(h<a.length&&(a[h++]=P>>24&255),p=0,x=0):(p=P>>>24,x+=2)}if(h<a.length)for(a[h++]=p;h<a.length;)a[h++]=0},i.prototype._toArrayLikeBE=function(a,u){for(var h=a.length-1,p=0,b=0,x=0;b<this.length;b++){var P=this.words[b]<<x|p;a[h--]=P&255,h>=0&&(a[h--]=P>>8&255),h>=0&&(a[h--]=P>>16&255),x===6?(h>=0&&(a[h--]=P>>24&255),p=0,x=0):(p=P>>>24,x+=2)}if(h>=0)for(a[h--]=p;h>=0;)a[h--]=0},Math.clz32?i.prototype._countBits=function(a){return 32-Math.clz32(a)}:i.prototype._countBits=function(a){var u=a,h=0;return u>=4096&&(h+=13,u>>>=13),u>=64&&(h+=7,u>>>=7),u>=8&&(h+=4,u>>>=4),u>=2&&(h+=2,u>>>=2),h+u},i.prototype._zeroBits=function(a){if(a===0)return 26;var u=a,h=0;return u&8191||(h+=13,u>>>=13),u&127||(h+=7,u>>>=7),u&15||(h+=4,u>>>=4),u&3||(h+=2,u>>>=2),u&1||h++,h},i.prototype.bitLength=function(){var a=this.words[this.length-1],u=this._countBits(a);return(this.length-1)*26+u};function S(w){for(var a=new Array(w.bitLength()),u=0;u<a.length;u++){var h=u/26|0,p=u%26;a[u]=w.words[h]>>>p&1}return a}i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var a=0,u=0;u<this.length;u++){var h=this._zeroBits(this.words[u]);if(a+=h,h!==26)break}return a},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(a){return this.negative!==0?this.abs().inotn(a).iaddn(1):this.clone()},i.prototype.fromTwos=function(a){return this.testn(a-1)?this.notn(a).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(a){for(;this.length<a.length;)this.words[this.length++]=0;for(var u=0;u<a.length;u++)this.words[u]=this.words[u]|a.words[u];return this._strip()},i.prototype.ior=function(a){return r((this.negative|a.negative)===0),this.iuor(a)},i.prototype.or=function(a){return this.length>a.length?this.clone().ior(a):a.clone().ior(this)},i.prototype.uor=function(a){return this.length>a.length?this.clone().iuor(a):a.clone().iuor(this)},i.prototype.iuand=function(a){var u;this.length>a.length?u=a:u=this;for(var h=0;h<u.length;h++)this.words[h]=this.words[h]&a.words[h];return this.length=u.length,this._strip()},i.prototype.iand=function(a){return r((this.negative|a.negative)===0),this.iuand(a)},i.prototype.and=function(a){return this.length>a.length?this.clone().iand(a):a.clone().iand(this)},i.prototype.uand=function(a){return this.length>a.length?this.clone().iuand(a):a.clone().iuand(this)},i.prototype.iuxor=function(a){var u,h;this.length>a.length?(u=this,h=a):(u=a,h=this);for(var p=0;p<h.length;p++)this.words[p]=u.words[p]^h.words[p];if(this!==u)for(;p<u.length;p++)this.words[p]=u.words[p];return this.length=u.length,this._strip()},i.prototype.ixor=function(a){return r((this.negative|a.negative)===0),this.iuxor(a)},i.prototype.xor=function(a){return this.length>a.length?this.clone().ixor(a):a.clone().ixor(this)},i.prototype.uxor=function(a){return this.length>a.length?this.clone().iuxor(a):a.clone().iuxor(this)},i.prototype.inotn=function(a){r(typeof a=="number"&&a>=0);var u=Math.ceil(a/26)|0,h=a%26;this._expand(u),h>0&&u--;for(var p=0;p<u;p++)this.words[p]=~this.words[p]&67108863;return h>0&&(this.words[p]=~this.words[p]&67108863>>26-h),this._strip()},i.prototype.notn=function(a){return this.clone().inotn(a)},i.prototype.setn=function(a,u){r(typeof a=="number"&&a>=0);var h=a/26|0,p=a%26;return this._expand(h+1),u?this.words[h]=this.words[h]|1<<p:this.words[h]=this.words[h]&~(1<<p),this._strip()},i.prototype.iadd=function(a){var u;if(this.negative!==0&&a.negative===0)return this.negative=0,u=this.isub(a),this.negative^=1,this._normSign();if(this.negative===0&&a.negative!==0)return a.negative=0,u=this.isub(a),a.negative=1,u._normSign();var h,p;this.length>a.length?(h=this,p=a):(h=a,p=this);for(var b=0,x=0;x<p.length;x++)u=(h.words[x]|0)+(p.words[x]|0)+b,this.words[x]=u&67108863,b=u>>>26;for(;b!==0&&x<h.length;x++)u=(h.words[x]|0)+b,this.words[x]=u&67108863,b=u>>>26;if(this.length=h.length,b!==0)this.words[this.length]=b,this.length++;else if(h!==this)for(;x<h.length;x++)this.words[x]=h.words[x];return this},i.prototype.add=function(a){var u;return a.negative!==0&&this.negative===0?(a.negative=0,u=this.sub(a),a.negative^=1,u):a.negative===0&&this.negative!==0?(this.negative=0,u=a.sub(this),this.negative=1,u):this.length>a.length?this.clone().iadd(a):a.clone().iadd(this)},i.prototype.isub=function(a){if(a.negative!==0){a.negative=0;var u=this.iadd(a);return a.negative=1,u._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(a),this.negative=1,this._normSign();var h=this.cmp(a);if(h===0)return this.negative=0,this.length=1,this.words[0]=0,this;var p,b;h>0?(p=this,b=a):(p=a,b=this);for(var x=0,P=0;P<b.length;P++)u=(p.words[P]|0)-(b.words[P]|0)+x,x=u>>26,this.words[P]=u&67108863;for(;x!==0&&P<p.length;P++)u=(p.words[P]|0)+x,x=u>>26,this.words[P]=u&67108863;if(x===0&&P<p.length&&p!==this)for(;P<p.length;P++)this.words[P]=p.words[P];return this.length=Math.max(this.length,P),p!==this&&(this.negative=1),this._strip()},i.prototype.sub=function(a){return this.clone().isub(a)};function H(w,a,u){u.negative=a.negative^w.negative;var h=w.length+a.length|0;u.length=h,h=h-1|0;var p=w.words[0]|0,b=a.words[0]|0,x=p*b,P=x&67108863,v=x/67108864|0;u.words[0]=P;for(var f=1;f<h;f++){for(var g=v>>>26,F=v&67108863,l=Math.min(f,a.length-1),E=Math.max(0,f-w.length+1);E<=l;E++){var T=f-E|0;p=w.words[T]|0,b=a.words[E]|0,x=p*b+F,g+=x/67108864|0,F=x&67108863}u.words[f]=F|0,v=g|0}return v!==0?u.words[f]=v|0:u.length--,u._strip()}var K=function(a,u,h){var p=a.words,b=u.words,x=h.words,P=0,v,f,g,F=p[0]|0,l=F&8191,E=F>>>13,T=p[1]|0,j=T&8191,R=T>>>13,G=p[2]|0,C=G&8191,X=G>>>13,Me=p[3]|0,Z=Me&8191,ne=Me>>>13,rr=p[4]|0,xe=rr&8191,Ae=rr>>>13,Xt=p[5]|0,Pe=Xt&8191,Oe=Xt>>>13,nr=p[6]|0,ve=nr&8191,O=nr>>>13,k=p[7]|0,z=k&8191,U=k>>>13,Y=p[8]|0,oe=Y&8191,V=Y>>>13,te=p[9]|0,D=te&8191,W=te>>>13,se=b[0]|0,he=se&8191,ge=se>>>13,Cr=b[1]|0,ke=Cr&8191,ze=Cr>>>13,Xr=b[2]|0,Le=Xr&8191,je=Xr>>>13,Dr=b[3]|0,Se=Dr&8191,Be=Dr>>>13,Hr=b[4]|0,Ue=Hr&8191,Re=Hr>>>13,Ir=b[5]|0,Fe=Ir&8191,Ce=Ir>>>13,qr=b[6]|0,Xe=qr&8191,De=qr>>>13,Zr=b[7]|0,He=Zr&8191,Ie=Zr>>>13,Vr=b[8]|0,qe=Vr&8191,Ze=Vr>>>13,Gr=b[9]|0,Ve=Gr&8191,Ge=Gr>>>13;h.negative=a.negative^u.negative,h.length=19,v=Math.imul(l,he),f=Math.imul(l,ge),f=f+Math.imul(E,he)|0,g=Math.imul(E,ge);var yr=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(yr>>>26)|0,yr&=67108863,v=Math.imul(j,he),f=Math.imul(j,ge),f=f+Math.imul(R,he)|0,g=Math.imul(R,ge),v=v+Math.imul(l,ke)|0,f=f+Math.imul(l,ze)|0,f=f+Math.imul(E,ke)|0,g=g+Math.imul(E,ze)|0;var vr=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(vr>>>26)|0,vr&=67108863,v=Math.imul(C,he),f=Math.imul(C,ge),f=f+Math.imul(X,he)|0,g=Math.imul(X,ge),v=v+Math.imul(j,ke)|0,f=f+Math.imul(j,ze)|0,f=f+Math.imul(R,ke)|0,g=g+Math.imul(R,ze)|0,v=v+Math.imul(l,Le)|0,f=f+Math.imul(l,je)|0,f=f+Math.imul(E,Le)|0,g=g+Math.imul(E,je)|0;var br=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(br>>>26)|0,br&=67108863,v=Math.imul(Z,he),f=Math.imul(Z,ge),f=f+Math.imul(ne,he)|0,g=Math.imul(ne,ge),v=v+Math.imul(C,ke)|0,f=f+Math.imul(C,ze)|0,f=f+Math.imul(X,ke)|0,g=g+Math.imul(X,ze)|0,v=v+Math.imul(j,Le)|0,f=f+Math.imul(j,je)|0,f=f+Math.imul(R,Le)|0,g=g+Math.imul(R,je)|0,v=v+Math.imul(l,Se)|0,f=f+Math.imul(l,Be)|0,f=f+Math.imul(E,Se)|0,g=g+Math.imul(E,Be)|0;var gr=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(gr>>>26)|0,gr&=67108863,v=Math.imul(xe,he),f=Math.imul(xe,ge),f=f+Math.imul(Ae,he)|0,g=Math.imul(Ae,ge),v=v+Math.imul(Z,ke)|0,f=f+Math.imul(Z,ze)|0,f=f+Math.imul(ne,ke)|0,g=g+Math.imul(ne,ze)|0,v=v+Math.imul(C,Le)|0,f=f+Math.imul(C,je)|0,f=f+Math.imul(X,Le)|0,g=g+Math.imul(X,je)|0,v=v+Math.imul(j,Se)|0,f=f+Math.imul(j,Be)|0,f=f+Math.imul(R,Se)|0,g=g+Math.imul(R,Be)|0,v=v+Math.imul(l,Ue)|0,f=f+Math.imul(l,Re)|0,f=f+Math.imul(E,Ue)|0,g=g+Math.imul(E,Re)|0;var wr=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(wr>>>26)|0,wr&=67108863,v=Math.imul(Pe,he),f=Math.imul(Pe,ge),f=f+Math.imul(Oe,he)|0,g=Math.imul(Oe,ge),v=v+Math.imul(xe,ke)|0,f=f+Math.imul(xe,ze)|0,f=f+Math.imul(Ae,ke)|0,g=g+Math.imul(Ae,ze)|0,v=v+Math.imul(Z,Le)|0,f=f+Math.imul(Z,je)|0,f=f+Math.imul(ne,Le)|0,g=g+Math.imul(ne,je)|0,v=v+Math.imul(C,Se)|0,f=f+Math.imul(C,Be)|0,f=f+Math.imul(X,Se)|0,g=g+Math.imul(X,Be)|0,v=v+Math.imul(j,Ue)|0,f=f+Math.imul(j,Re)|0,f=f+Math.imul(R,Ue)|0,g=g+Math.imul(R,Re)|0,v=v+Math.imul(l,Fe)|0,f=f+Math.imul(l,Ce)|0,f=f+Math.imul(E,Fe)|0,g=g+Math.imul(E,Ce)|0;var Hs=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Hs>>>26)|0,Hs&=67108863,v=Math.imul(ve,he),f=Math.imul(ve,ge),f=f+Math.imul(O,he)|0,g=Math.imul(O,ge),v=v+Math.imul(Pe,ke)|0,f=f+Math.imul(Pe,ze)|0,f=f+Math.imul(Oe,ke)|0,g=g+Math.imul(Oe,ze)|0,v=v+Math.imul(xe,Le)|0,f=f+Math.imul(xe,je)|0,f=f+Math.imul(Ae,Le)|0,g=g+Math.imul(Ae,je)|0,v=v+Math.imul(Z,Se)|0,f=f+Math.imul(Z,Be)|0,f=f+Math.imul(ne,Se)|0,g=g+Math.imul(ne,Be)|0,v=v+Math.imul(C,Ue)|0,f=f+Math.imul(C,Re)|0,f=f+Math.imul(X,Ue)|0,g=g+Math.imul(X,Re)|0,v=v+Math.imul(j,Fe)|0,f=f+Math.imul(j,Ce)|0,f=f+Math.imul(R,Fe)|0,g=g+Math.imul(R,Ce)|0,v=v+Math.imul(l,Xe)|0,f=f+Math.imul(l,De)|0,f=f+Math.imul(E,Xe)|0,g=g+Math.imul(E,De)|0;var Is=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Is>>>26)|0,Is&=67108863,v=Math.imul(z,he),f=Math.imul(z,ge),f=f+Math.imul(U,he)|0,g=Math.imul(U,ge),v=v+Math.imul(ve,ke)|0,f=f+Math.imul(ve,ze)|0,f=f+Math.imul(O,ke)|0,g=g+Math.imul(O,ze)|0,v=v+Math.imul(Pe,Le)|0,f=f+Math.imul(Pe,je)|0,f=f+Math.imul(Oe,Le)|0,g=g+Math.imul(Oe,je)|0,v=v+Math.imul(xe,Se)|0,f=f+Math.imul(xe,Be)|0,f=f+Math.imul(Ae,Se)|0,g=g+Math.imul(Ae,Be)|0,v=v+Math.imul(Z,Ue)|0,f=f+Math.imul(Z,Re)|0,f=f+Math.imul(ne,Ue)|0,g=g+Math.imul(ne,Re)|0,v=v+Math.imul(C,Fe)|0,f=f+Math.imul(C,Ce)|0,f=f+Math.imul(X,Fe)|0,g=g+Math.imul(X,Ce)|0,v=v+Math.imul(j,Xe)|0,f=f+Math.imul(j,De)|0,f=f+Math.imul(R,Xe)|0,g=g+Math.imul(R,De)|0,v=v+Math.imul(l,He)|0,f=f+Math.imul(l,Ie)|0,f=f+Math.imul(E,He)|0,g=g+Math.imul(E,Ie)|0;var qs=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(qs>>>26)|0,qs&=67108863,v=Math.imul(oe,he),f=Math.imul(oe,ge),f=f+Math.imul(V,he)|0,g=Math.imul(V,ge),v=v+Math.imul(z,ke)|0,f=f+Math.imul(z,ze)|0,f=f+Math.imul(U,ke)|0,g=g+Math.imul(U,ze)|0,v=v+Math.imul(ve,Le)|0,f=f+Math.imul(ve,je)|0,f=f+Math.imul(O,Le)|0,g=g+Math.imul(O,je)|0,v=v+Math.imul(Pe,Se)|0,f=f+Math.imul(Pe,Be)|0,f=f+Math.imul(Oe,Se)|0,g=g+Math.imul(Oe,Be)|0,v=v+Math.imul(xe,Ue)|0,f=f+Math.imul(xe,Re)|0,f=f+Math.imul(Ae,Ue)|0,g=g+Math.imul(Ae,Re)|0,v=v+Math.imul(Z,Fe)|0,f=f+Math.imul(Z,Ce)|0,f=f+Math.imul(ne,Fe)|0,g=g+Math.imul(ne,Ce)|0,v=v+Math.imul(C,Xe)|0,f=f+Math.imul(C,De)|0,f=f+Math.imul(X,Xe)|0,g=g+Math.imul(X,De)|0,v=v+Math.imul(j,He)|0,f=f+Math.imul(j,Ie)|0,f=f+Math.imul(R,He)|0,g=g+Math.imul(R,Ie)|0,v=v+Math.imul(l,qe)|0,f=f+Math.imul(l,Ze)|0,f=f+Math.imul(E,qe)|0,g=g+Math.imul(E,Ze)|0;var Zs=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Zs>>>26)|0,Zs&=67108863,v=Math.imul(D,he),f=Math.imul(D,ge),f=f+Math.imul(W,he)|0,g=Math.imul(W,ge),v=v+Math.imul(oe,ke)|0,f=f+Math.imul(oe,ze)|0,f=f+Math.imul(V,ke)|0,g=g+Math.imul(V,ze)|0,v=v+Math.imul(z,Le)|0,f=f+Math.imul(z,je)|0,f=f+Math.imul(U,Le)|0,g=g+Math.imul(U,je)|0,v=v+Math.imul(ve,Se)|0,f=f+Math.imul(ve,Be)|0,f=f+Math.imul(O,Se)|0,g=g+Math.imul(O,Be)|0,v=v+Math.imul(Pe,Ue)|0,f=f+Math.imul(Pe,Re)|0,f=f+Math.imul(Oe,Ue)|0,g=g+Math.imul(Oe,Re)|0,v=v+Math.imul(xe,Fe)|0,f=f+Math.imul(xe,Ce)|0,f=f+Math.imul(Ae,Fe)|0,g=g+Math.imul(Ae,Ce)|0,v=v+Math.imul(Z,Xe)|0,f=f+Math.imul(Z,De)|0,f=f+Math.imul(ne,Xe)|0,g=g+Math.imul(ne,De)|0,v=v+Math.imul(C,He)|0,f=f+Math.imul(C,Ie)|0,f=f+Math.imul(X,He)|0,g=g+Math.imul(X,Ie)|0,v=v+Math.imul(j,qe)|0,f=f+Math.imul(j,Ze)|0,f=f+Math.imul(R,qe)|0,g=g+Math.imul(R,Ze)|0,v=v+Math.imul(l,Ve)|0,f=f+Math.imul(l,Ge)|0,f=f+Math.imul(E,Ve)|0,g=g+Math.imul(E,Ge)|0;var Vs=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Vs>>>26)|0,Vs&=67108863,v=Math.imul(D,ke),f=Math.imul(D,ze),f=f+Math.imul(W,ke)|0,g=Math.imul(W,ze),v=v+Math.imul(oe,Le)|0,f=f+Math.imul(oe,je)|0,f=f+Math.imul(V,Le)|0,g=g+Math.imul(V,je)|0,v=v+Math.imul(z,Se)|0,f=f+Math.imul(z,Be)|0,f=f+Math.imul(U,Se)|0,g=g+Math.imul(U,Be)|0,v=v+Math.imul(ve,Ue)|0,f=f+Math.imul(ve,Re)|0,f=f+Math.imul(O,Ue)|0,g=g+Math.imul(O,Re)|0,v=v+Math.imul(Pe,Fe)|0,f=f+Math.imul(Pe,Ce)|0,f=f+Math.imul(Oe,Fe)|0,g=g+Math.imul(Oe,Ce)|0,v=v+Math.imul(xe,Xe)|0,f=f+Math.imul(xe,De)|0,f=f+Math.imul(Ae,Xe)|0,g=g+Math.imul(Ae,De)|0,v=v+Math.imul(Z,He)|0,f=f+Math.imul(Z,Ie)|0,f=f+Math.imul(ne,He)|0,g=g+Math.imul(ne,Ie)|0,v=v+Math.imul(C,qe)|0,f=f+Math.imul(C,Ze)|0,f=f+Math.imul(X,qe)|0,g=g+Math.imul(X,Ze)|0,v=v+Math.imul(j,Ve)|0,f=f+Math.imul(j,Ge)|0,f=f+Math.imul(R,Ve)|0,g=g+Math.imul(R,Ge)|0;var Gs=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Gs>>>26)|0,Gs&=67108863,v=Math.imul(D,Le),f=Math.imul(D,je),f=f+Math.imul(W,Le)|0,g=Math.imul(W,je),v=v+Math.imul(oe,Se)|0,f=f+Math.imul(oe,Be)|0,f=f+Math.imul(V,Se)|0,g=g+Math.imul(V,Be)|0,v=v+Math.imul(z,Ue)|0,f=f+Math.imul(z,Re)|0,f=f+Math.imul(U,Ue)|0,g=g+Math.imul(U,Re)|0,v=v+Math.imul(ve,Fe)|0,f=f+Math.imul(ve,Ce)|0,f=f+Math.imul(O,Fe)|0,g=g+Math.imul(O,Ce)|0,v=v+Math.imul(Pe,Xe)|0,f=f+Math.imul(Pe,De)|0,f=f+Math.imul(Oe,Xe)|0,g=g+Math.imul(Oe,De)|0,v=v+Math.imul(xe,He)|0,f=f+Math.imul(xe,Ie)|0,f=f+Math.imul(Ae,He)|0,g=g+Math.imul(Ae,Ie)|0,v=v+Math.imul(Z,qe)|0,f=f+Math.imul(Z,Ze)|0,f=f+Math.imul(ne,qe)|0,g=g+Math.imul(ne,Ze)|0,v=v+Math.imul(C,Ve)|0,f=f+Math.imul(C,Ge)|0,f=f+Math.imul(X,Ve)|0,g=g+Math.imul(X,Ge)|0;var Ys=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Ys>>>26)|0,Ys&=67108863,v=Math.imul(D,Se),f=Math.imul(D,Be),f=f+Math.imul(W,Se)|0,g=Math.imul(W,Be),v=v+Math.imul(oe,Ue)|0,f=f+Math.imul(oe,Re)|0,f=f+Math.imul(V,Ue)|0,g=g+Math.imul(V,Re)|0,v=v+Math.imul(z,Fe)|0,f=f+Math.imul(z,Ce)|0,f=f+Math.imul(U,Fe)|0,g=g+Math.imul(U,Ce)|0,v=v+Math.imul(ve,Xe)|0,f=f+Math.imul(ve,De)|0,f=f+Math.imul(O,Xe)|0,g=g+Math.imul(O,De)|0,v=v+Math.imul(Pe,He)|0,f=f+Math.imul(Pe,Ie)|0,f=f+Math.imul(Oe,He)|0,g=g+Math.imul(Oe,Ie)|0,v=v+Math.imul(xe,qe)|0,f=f+Math.imul(xe,Ze)|0,f=f+Math.imul(Ae,qe)|0,g=g+Math.imul(Ae,Ze)|0,v=v+Math.imul(Z,Ve)|0,f=f+Math.imul(Z,Ge)|0,f=f+Math.imul(ne,Ve)|0,g=g+Math.imul(ne,Ge)|0;var Ws=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Ws>>>26)|0,Ws&=67108863,v=Math.imul(D,Ue),f=Math.imul(D,Re),f=f+Math.imul(W,Ue)|0,g=Math.imul(W,Re),v=v+Math.imul(oe,Fe)|0,f=f+Math.imul(oe,Ce)|0,f=f+Math.imul(V,Fe)|0,g=g+Math.imul(V,Ce)|0,v=v+Math.imul(z,Xe)|0,f=f+Math.imul(z,De)|0,f=f+Math.imul(U,Xe)|0,g=g+Math.imul(U,De)|0,v=v+Math.imul(ve,He)|0,f=f+Math.imul(ve,Ie)|0,f=f+Math.imul(O,He)|0,g=g+Math.imul(O,Ie)|0,v=v+Math.imul(Pe,qe)|0,f=f+Math.imul(Pe,Ze)|0,f=f+Math.imul(Oe,qe)|0,g=g+Math.imul(Oe,Ze)|0,v=v+Math.imul(xe,Ve)|0,f=f+Math.imul(xe,Ge)|0,f=f+Math.imul(Ae,Ve)|0,g=g+Math.imul(Ae,Ge)|0;var Js=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Js>>>26)|0,Js&=67108863,v=Math.imul(D,Fe),f=Math.imul(D,Ce),f=f+Math.imul(W,Fe)|0,g=Math.imul(W,Ce),v=v+Math.imul(oe,Xe)|0,f=f+Math.imul(oe,De)|0,f=f+Math.imul(V,Xe)|0,g=g+Math.imul(V,De)|0,v=v+Math.imul(z,He)|0,f=f+Math.imul(z,Ie)|0,f=f+Math.imul(U,He)|0,g=g+Math.imul(U,Ie)|0,v=v+Math.imul(ve,qe)|0,f=f+Math.imul(ve,Ze)|0,f=f+Math.imul(O,qe)|0,g=g+Math.imul(O,Ze)|0,v=v+Math.imul(Pe,Ve)|0,f=f+Math.imul(Pe,Ge)|0,f=f+Math.imul(Oe,Ve)|0,g=g+Math.imul(Oe,Ge)|0;var Ks=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Ks>>>26)|0,Ks&=67108863,v=Math.imul(D,Xe),f=Math.imul(D,De),f=f+Math.imul(W,Xe)|0,g=Math.imul(W,De),v=v+Math.imul(oe,He)|0,f=f+Math.imul(oe,Ie)|0,f=f+Math.imul(V,He)|0,g=g+Math.imul(V,Ie)|0,v=v+Math.imul(z,qe)|0,f=f+Math.imul(z,Ze)|0,f=f+Math.imul(U,qe)|0,g=g+Math.imul(U,Ze)|0,v=v+Math.imul(ve,Ve)|0,f=f+Math.imul(ve,Ge)|0,f=f+Math.imul(O,Ve)|0,g=g+Math.imul(O,Ge)|0;var Qs=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(Qs>>>26)|0,Qs&=67108863,v=Math.imul(D,He),f=Math.imul(D,Ie),f=f+Math.imul(W,He)|0,g=Math.imul(W,Ie),v=v+Math.imul(oe,qe)|0,f=f+Math.imul(oe,Ze)|0,f=f+Math.imul(V,qe)|0,g=g+Math.imul(V,Ze)|0,v=v+Math.imul(z,Ve)|0,f=f+Math.imul(z,Ge)|0,f=f+Math.imul(U,Ve)|0,g=g+Math.imul(U,Ge)|0;var _s=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+(_s>>>26)|0,_s&=67108863,v=Math.imul(D,qe),f=Math.imul(D,Ze),f=f+Math.imul(W,qe)|0,g=Math.imul(W,Ze),v=v+Math.imul(oe,Ve)|0,f=f+Math.imul(oe,Ge)|0,f=f+Math.imul(V,Ve)|0,g=g+Math.imul(V,Ge)|0;var $s=(P+v|0)+((f&8191)<<13)|0;P=(g+(f>>>13)|0)+($s>>>26)|0,$s&=67108863,v=Math.imul(D,Ve),f=Math.imul(D,Ge),f=f+Math.imul(W,Ve)|0,g=Math.imul(W,Ge);var ea=(P+v|0)+((f&8191)<<13)|0;return P=(g+(f>>>13)|0)+(ea>>>26)|0,ea&=67108863,x[0]=yr,x[1]=vr,x[2]=br,x[3]=gr,x[4]=wr,x[5]=Hs,x[6]=Is,x[7]=qs,x[8]=Zs,x[9]=Vs,x[10]=Gs,x[11]=Ys,x[12]=Ws,x[13]=Js,x[14]=Ks,x[15]=Qs,x[16]=_s,x[17]=$s,x[18]=ea,P!==0&&(x[19]=P,h.length++),h};Math.imul||(K=H);function Q(w,a,u){u.negative=a.negative^w.negative,u.length=w.length+a.length;for(var h=0,p=0,b=0;b<u.length-1;b++){var x=p;p=0;for(var P=h&67108863,v=Math.min(b,a.length-1),f=Math.max(0,b-w.length+1);f<=v;f++){var g=b-f,F=w.words[g]|0,l=a.words[f]|0,E=F*l,T=E&67108863;x=x+(E/67108864|0)|0,T=T+P|0,P=T&67108863,x=x+(T>>>26)|0,p+=x>>>26,x&=67108863}u.words[b]=P,h=x,x=p}return h!==0?u.words[b]=h:u.length--,u._strip()}function _(w,a,u){return Q(w,a,u)}i.prototype.mulTo=function(a,u){var h,p=this.length+a.length;return this.length===10&&a.length===10?h=K(this,a,u):p<63?h=H(this,a,u):p<1024?h=Q(this,a,u):h=_(this,a,u),h};function re(w,a){this.x=w,this.y=a}re.prototype.makeRBT=function(a){for(var u=new Array(a),h=i.prototype._countBits(a)-1,p=0;p<a;p++)u[p]=this.revBin(p,h,a);return u},re.prototype.revBin=function(a,u,h){if(a===0||a===h-1)return a;for(var p=0,b=0;b<u;b++)p|=(a&1)<<u-b-1,a>>=1;return p},re.prototype.permute=function(a,u,h,p,b,x){for(var P=0;P<x;P++)p[P]=u[a[P]],b[P]=h[a[P]]},re.prototype.transform=function(a,u,h,p,b,x){this.permute(x,a,u,h,p,b);for(var P=1;P<b;P<<=1)for(var v=P<<1,f=Math.cos(2*Math.PI/v),g=Math.sin(2*Math.PI/v),F=0;F<b;F+=v)for(var l=f,E=g,T=0;T<P;T++){var j=h[F+T],R=p[F+T],G=h[F+T+P],C=p[F+T+P],X=l*G-E*C;C=l*C+E*G,G=X,h[F+T]=j+G,p[F+T]=R+C,h[F+T+P]=j-G,p[F+T+P]=R-C,T!==v&&(X=f*l-g*E,E=f*E+g*l,l=X)}},re.prototype.guessLen13b=function(a,u){var h=Math.max(u,a)|1,p=h&1,b=0;for(h=h/2|0;h;h=h>>>1)b++;return 1<<b+1+p},re.prototype.conjugate=function(a,u,h){if(!(h<=1))for(var p=0;p<h/2;p++){var b=a[p];a[p]=a[h-p-1],a[h-p-1]=b,b=u[p],u[p]=-u[h-p-1],u[h-p-1]=-b}},re.prototype.normalize13b=function(a,u){for(var h=0,p=0;p<u/2;p++){var b=Math.round(a[2*p+1]/u)*8192+Math.round(a[2*p]/u)+h;a[p]=b&67108863,b<67108864?h=0:h=b/67108864|0}return a},re.prototype.convert13b=function(a,u,h,p){for(var b=0,x=0;x<u;x++)b=b+(a[x]|0),h[2*x]=b&8191,b=b>>>13,h[2*x+1]=b&8191,b=b>>>13;for(x=2*u;x<p;++x)h[x]=0;r(b===0),r((b&-8192)===0)},re.prototype.stub=function(a){for(var u=new Array(a),h=0;h<a;h++)u[h]=0;return u},re.prototype.mulp=function(a,u,h){var p=2*this.guessLen13b(a.length,u.length),b=this.makeRBT(p),x=this.stub(p),P=new Array(p),v=new Array(p),f=new Array(p),g=new Array(p),F=new Array(p),l=new Array(p),E=h.words;E.length=p,this.convert13b(a.words,a.length,P,p),this.convert13b(u.words,u.length,g,p),this.transform(P,x,v,f,p,b),this.transform(g,x,F,l,p,b);for(var T=0;T<p;T++){var j=v[T]*F[T]-f[T]*l[T];f[T]=v[T]*l[T]+f[T]*F[T],v[T]=j}return this.conjugate(v,f,p),this.transform(v,f,E,x,p,b),this.conjugate(E,x,p),this.normalize13b(E,p),h.negative=a.negative^u.negative,h.length=a.length+u.length,h._strip()},i.prototype.mul=function(a){var u=new i(null);return u.words=new Array(this.length+a.length),this.mulTo(a,u)},i.prototype.mulf=function(a){var u=new i(null);return u.words=new Array(this.length+a.length),_(this,a,u)},i.prototype.imul=function(a){return this.clone().mulTo(a,this)},i.prototype.imuln=function(a){var u=a<0;u&&(a=-a),r(typeof a=="number"),r(a<67108864);for(var h=0,p=0;p<this.length;p++){var b=(this.words[p]|0)*a,x=(b&67108863)+(h&67108863);h>>=26,h+=b/67108864|0,h+=x>>>26,this.words[p]=x&67108863}return h!==0&&(this.words[p]=h,this.length++),u?this.ineg():this},i.prototype.muln=function(a){return this.clone().imuln(a)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(a){var u=S(a);if(u.length===0)return new i(1);for(var h=this,p=0;p<u.length&&u[p]===0;p++,h=h.sqr());if(++p<u.length)for(var b=h.sqr();p<u.length;p++,b=b.sqr())u[p]!==0&&(h=h.mul(b));return h},i.prototype.iushln=function(a){r(typeof a=="number"&&a>=0);var u=a%26,h=(a-u)/26,p=67108863>>>26-u<<26-u,b;if(u!==0){var x=0;for(b=0;b<this.length;b++){var P=this.words[b]&p,v=(this.words[b]|0)-P<<u;this.words[b]=v|x,x=P>>>26-u}x&&(this.words[b]=x,this.length++)}if(h!==0){for(b=this.length-1;b>=0;b--)this.words[b+h]=this.words[b];for(b=0;b<h;b++)this.words[b]=0;this.length+=h}return this._strip()},i.prototype.ishln=function(a){return r(this.negative===0),this.iushln(a)},i.prototype.iushrn=function(a,u,h){r(typeof a=="number"&&a>=0);var p;u?p=(u-u%26)/26:p=0;var b=a%26,x=Math.min((a-b)/26,this.length),P=67108863^67108863>>>b<<b,v=h;if(p-=x,p=Math.max(0,p),v){for(var f=0;f<x;f++)v.words[f]=this.words[f];v.length=x}if(x!==0)if(this.length>x)for(this.length-=x,f=0;f<this.length;f++)this.words[f]=this.words[f+x];else this.words[0]=0,this.length=1;var g=0;for(f=this.length-1;f>=0&&(g!==0||f>=p);f--){var F=this.words[f]|0;this.words[f]=g<<26-b|F>>>b,g=F&P}return v&&g!==0&&(v.words[v.length++]=g),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},i.prototype.ishrn=function(a,u,h){return r(this.negative===0),this.iushrn(a,u,h)},i.prototype.shln=function(a){return this.clone().ishln(a)},i.prototype.ushln=function(a){return this.clone().iushln(a)},i.prototype.shrn=function(a){return this.clone().ishrn(a)},i.prototype.ushrn=function(a){return this.clone().iushrn(a)},i.prototype.testn=function(a){r(typeof a=="number"&&a>=0);var u=a%26,h=(a-u)/26,p=1<<u;if(this.length<=h)return!1;var b=this.words[h];return!!(b&p)},i.prototype.imaskn=function(a){r(typeof a=="number"&&a>=0);var u=a%26,h=(a-u)/26;if(r(this.negative===0,"imaskn works only with positive numbers"),this.length<=h)return this;if(u!==0&&h++,this.length=Math.min(h,this.length),u!==0){var p=67108863^67108863>>>u<<u;this.words[this.length-1]&=p}return this._strip()},i.prototype.maskn=function(a){return this.clone().imaskn(a)},i.prototype.iaddn=function(a){return r(typeof a=="number"),r(a<67108864),a<0?this.isubn(-a):this.negative!==0?this.length===1&&(this.words[0]|0)<=a?(this.words[0]=a-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(a),this.negative=1,this):this._iaddn(a)},i.prototype._iaddn=function(a){this.words[0]+=a;for(var u=0;u<this.length&&this.words[u]>=67108864;u++)this.words[u]-=67108864,u===this.length-1?this.words[u+1]=1:this.words[u+1]++;return this.length=Math.max(this.length,u+1),this},i.prototype.isubn=function(a){if(r(typeof a=="number"),r(a<67108864),a<0)return this.iaddn(-a);if(this.negative!==0)return this.negative=0,this.iaddn(a),this.negative=1,this;if(this.words[0]-=a,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var u=0;u<this.length&&this.words[u]<0;u++)this.words[u]+=67108864,this.words[u+1]-=1;return this._strip()},i.prototype.addn=function(a){return this.clone().iaddn(a)},i.prototype.subn=function(a){return this.clone().isubn(a)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(a,u,h){var p=a.length+h,b;this._expand(p);var x,P=0;for(b=0;b<a.length;b++){x=(this.words[b+h]|0)+P;var v=(a.words[b]|0)*u;x-=v&67108863,P=(x>>26)-(v/67108864|0),this.words[b+h]=x&67108863}for(;b<this.length-h;b++)x=(this.words[b+h]|0)+P,P=x>>26,this.words[b+h]=x&67108863;if(P===0)return this._strip();for(r(P===-1),P=0,b=0;b<this.length;b++)x=-(this.words[b]|0)+P,P=x>>26,this.words[b]=x&67108863;return this.negative=1,this._strip()},i.prototype._wordDiv=function(a,u){var h=this.length-a.length,p=this.clone(),b=a,x=b.words[b.length-1]|0,P=this._countBits(x);h=26-P,h!==0&&(b=b.ushln(h),p.iushln(h),x=b.words[b.length-1]|0);var v=p.length-b.length,f;if(u!=="mod"){f=new i(null),f.length=v+1,f.words=new Array(f.length);for(var g=0;g<f.length;g++)f.words[g]=0}var F=p.clone()._ishlnsubmul(b,1,v);F.negative===0&&(p=F,f&&(f.words[v]=1));for(var l=v-1;l>=0;l--){var E=(p.words[b.length+l]|0)*67108864+(p.words[b.length+l-1]|0);for(E=Math.min(E/x|0,67108863),p._ishlnsubmul(b,E,l);p.negative!==0;)E--,p.negative=0,p._ishlnsubmul(b,1,l),p.isZero()||(p.negative^=1);f&&(f.words[l]=E)}return f&&f._strip(),p._strip(),u!=="div"&&h!==0&&p.iushrn(h),{div:f||null,mod:p}},i.prototype.divmod=function(a,u,h){if(r(!a.isZero()),this.isZero())return{div:new i(0),mod:new i(0)};var p,b,x;return this.negative!==0&&a.negative===0?(x=this.neg().divmod(a,u),u!=="mod"&&(p=x.div.neg()),u!=="div"&&(b=x.mod.neg(),h&&b.negative!==0&&b.iadd(a)),{div:p,mod:b}):this.negative===0&&a.negative!==0?(x=this.divmod(a.neg(),u),u!=="mod"&&(p=x.div.neg()),{div:p,mod:x.mod}):this.negative&a.negative?(x=this.neg().divmod(a.neg(),u),u!=="div"&&(b=x.mod.neg(),h&&b.negative!==0&&b.isub(a)),{div:x.div,mod:b}):a.length>this.length||this.cmp(a)<0?{div:new i(0),mod:this}:a.length===1?u==="div"?{div:this.divn(a.words[0]),mod:null}:u==="mod"?{div:null,mod:new i(this.modrn(a.words[0]))}:{div:this.divn(a.words[0]),mod:new i(this.modrn(a.words[0]))}:this._wordDiv(a,u)},i.prototype.div=function(a){return this.divmod(a,"div",!1).div},i.prototype.mod=function(a){return this.divmod(a,"mod",!1).mod},i.prototype.umod=function(a){return this.divmod(a,"mod",!0).mod},i.prototype.divRound=function(a){var u=this.divmod(a);if(u.mod.isZero())return u.div;var h=u.div.negative!==0?u.mod.isub(a):u.mod,p=a.ushrn(1),b=a.andln(1),x=h.cmp(p);return x<0||b===1&&x===0?u.div:u.div.negative!==0?u.div.isubn(1):u.div.iaddn(1)},i.prototype.modrn=function(a){var u=a<0;u&&(a=-a),r(a<=67108863);for(var h=(1<<26)%a,p=0,b=this.length-1;b>=0;b--)p=(h*p+(this.words[b]|0))%a;return u?-p:p},i.prototype.modn=function(a){return this.modrn(a)},i.prototype.idivn=function(a){var u=a<0;u&&(a=-a),r(a<=67108863);for(var h=0,p=this.length-1;p>=0;p--){var b=(this.words[p]|0)+h*67108864;this.words[p]=b/a|0,h=b%a}return this._strip(),u?this.ineg():this},i.prototype.divn=function(a){return this.clone().idivn(a)},i.prototype.egcd=function(a){r(a.negative===0),r(!a.isZero());var u=this,h=a.clone();u.negative!==0?u=u.umod(a):u=u.clone();for(var p=new i(1),b=new i(0),x=new i(0),P=new i(1),v=0;u.isEven()&&h.isEven();)u.iushrn(1),h.iushrn(1),++v;for(var f=h.clone(),g=u.clone();!u.isZero();){for(var F=0,l=1;!(u.words[0]&l)&&F<26;++F,l<<=1);if(F>0)for(u.iushrn(F);F-- >0;)(p.isOdd()||b.isOdd())&&(p.iadd(f),b.isub(g)),p.iushrn(1),b.iushrn(1);for(var E=0,T=1;!(h.words[0]&T)&&E<26;++E,T<<=1);if(E>0)for(h.iushrn(E);E-- >0;)(x.isOdd()||P.isOdd())&&(x.iadd(f),P.isub(g)),x.iushrn(1),P.iushrn(1);u.cmp(h)>=0?(u.isub(h),p.isub(x),b.isub(P)):(h.isub(u),x.isub(p),P.isub(b))}return{a:x,b:P,gcd:h.iushln(v)}},i.prototype._invmp=function(a){r(a.negative===0),r(!a.isZero());var u=this,h=a.clone();u.negative!==0?u=u.umod(a):u=u.clone();for(var p=new i(1),b=new i(0),x=h.clone();u.cmpn(1)>0&&h.cmpn(1)>0;){for(var P=0,v=1;!(u.words[0]&v)&&P<26;++P,v<<=1);if(P>0)for(u.iushrn(P);P-- >0;)p.isOdd()&&p.iadd(x),p.iushrn(1);for(var f=0,g=1;!(h.words[0]&g)&&f<26;++f,g<<=1);if(f>0)for(h.iushrn(f);f-- >0;)b.isOdd()&&b.iadd(x),b.iushrn(1);u.cmp(h)>=0?(u.isub(h),p.isub(b)):(h.isub(u),b.isub(p))}var F;return u.cmpn(1)===0?F=p:F=b,F.cmpn(0)<0&&F.iadd(a),F},i.prototype.gcd=function(a){if(this.isZero())return a.abs();if(a.isZero())return this.abs();var u=this.clone(),h=a.clone();u.negative=0,h.negative=0;for(var p=0;u.isEven()&&h.isEven();p++)u.iushrn(1),h.iushrn(1);do{for(;u.isEven();)u.iushrn(1);for(;h.isEven();)h.iushrn(1);var b=u.cmp(h);if(b<0){var x=u;u=h,h=x}else if(b===0||h.cmpn(1)===0)break;u.isub(h)}while(!0);return h.iushln(p)},i.prototype.invm=function(a){return this.egcd(a).a.umod(a)},i.prototype.isEven=function(){return(this.words[0]&1)===0},i.prototype.isOdd=function(){return(this.words[0]&1)===1},i.prototype.andln=function(a){return this.words[0]&a},i.prototype.bincn=function(a){r(typeof a=="number");var u=a%26,h=(a-u)/26,p=1<<u;if(this.length<=h)return this._expand(h+1),this.words[h]|=p,this;for(var b=p,x=h;b!==0&&x<this.length;x++){var P=this.words[x]|0;P+=b,b=P>>>26,P&=67108863,this.words[x]=P}return b!==0&&(this.words[x]=b,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(a){var u=a<0;if(this.negative!==0&&!u)return-1;if(this.negative===0&&u)return 1;this._strip();var h;if(this.length>1)h=1;else{u&&(a=-a),r(a<=67108863,"Number is too big");var p=this.words[0]|0;h=p===a?0:p<a?-1:1}return this.negative!==0?-h|0:h},i.prototype.cmp=function(a){if(this.negative!==0&&a.negative===0)return-1;if(this.negative===0&&a.negative!==0)return 1;var u=this.ucmp(a);return this.negative!==0?-u|0:u},i.prototype.ucmp=function(a){if(this.length>a.length)return 1;if(this.length<a.length)return-1;for(var u=0,h=this.length-1;h>=0;h--){var p=this.words[h]|0,b=a.words[h]|0;if(p!==b){p<b?u=-1:p>b&&(u=1);break}}return u},i.prototype.gtn=function(a){return this.cmpn(a)===1},i.prototype.gt=function(a){return this.cmp(a)===1},i.prototype.gten=function(a){return this.cmpn(a)>=0},i.prototype.gte=function(a){return this.cmp(a)>=0},i.prototype.ltn=function(a){return this.cmpn(a)===-1},i.prototype.lt=function(a){return this.cmp(a)===-1},i.prototype.lten=function(a){return this.cmpn(a)<=0},i.prototype.lte=function(a){return this.cmp(a)<=0},i.prototype.eqn=function(a){return this.cmpn(a)===0},i.prototype.eq=function(a){return this.cmp(a)===0},i.red=function(a){return new me(a)},i.prototype.toRed=function(a){return r(!this.red,"Already a number in reduction context"),r(this.negative===0,"red works only with positives"),a.convertTo(this)._forceRed(a)},i.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(a){return this.red=a,this},i.prototype.forceRed=function(a){return r(!this.red,"Already a number in reduction context"),this._forceRed(a)},i.prototype.redAdd=function(a){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,a)},i.prototype.redIAdd=function(a){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,a)},i.prototype.redSub=function(a){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,a)},i.prototype.redISub=function(a){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,a)},i.prototype.redShl=function(a){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,a)},i.prototype.redMul=function(a){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,a),this.red.mul(this,a)},i.prototype.redIMul=function(a){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,a),this.red.imul(this,a)},i.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(a){return r(this.red&&!a.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,a)};var fe={k256:null,p224:null,p192:null,p25519:null};function $(w,a){this.name=w,this.p=new i(a,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}$.prototype._tmp=function(){var a=new i(null);return a.words=new Array(Math.ceil(this.n/13)),a},$.prototype.ireduce=function(a){var u=a,h;do this.split(u,this.tmp),u=this.imulK(u),u=u.iadd(this.tmp),h=u.bitLength();while(h>this.n);var p=h<this.n?-1:u.ucmp(this.p);return p===0?(u.words[0]=0,u.length=1):p>0?u.isub(this.p):u.strip!==void 0?u.strip():u._strip(),u},$.prototype.split=function(a,u){a.iushrn(this.n,0,u)},$.prototype.imulK=function(a){return a.imul(this.k)};function pe(){$.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}n(pe,$),pe.prototype.split=function(a,u){for(var h=4194303,p=Math.min(a.length,9),b=0;b<p;b++)u.words[b]=a.words[b];if(u.length=p,a.length<=9){a.words[0]=0,a.length=1;return}var x=a.words[9];for(u.words[u.length++]=x&h,b=10;b<a.length;b++){var P=a.words[b]|0;a.words[b-10]=(P&h)<<4|x>>>22,x=P}x>>>=22,a.words[b-10]=x,x===0&&a.length>10?a.length-=10:a.length-=9},pe.prototype.imulK=function(a){a.words[a.length]=0,a.words[a.length+1]=0,a.length+=2;for(var u=0,h=0;h<a.length;h++){var p=a.words[h]|0;u+=p*977,a.words[h]=u&67108863,u=p*64+(u/67108864|0)}return a.words[a.length-1]===0&&(a.length--,a.words[a.length-1]===0&&a.length--),a};function Ne(){$.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}n(Ne,$);function Ye(){$.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}n(Ye,$);function nt(){$.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}n(nt,$),nt.prototype.imulK=function(a){for(var u=0,h=0;h<a.length;h++){var p=(a.words[h]|0)*19+u,b=p&67108863;p>>>=26,a.words[h]=b,u=p}return u!==0&&(a.words[a.length++]=u),a},i._prime=function(a){if(fe[a])return fe[a];var u;if(a==="k256")u=new pe;else if(a==="p224")u=new Ne;else if(a==="p192")u=new Ye;else if(a==="p25519")u=new nt;else throw new Error("Unknown prime "+a);return fe[a]=u,u};function me(w){if(typeof w=="string"){var a=i._prime(w);this.m=a.p,this.prime=a}else r(w.gtn(1),"modulus must be greater than 1"),this.m=w,this.prime=null}me.prototype._verify1=function(a){r(a.negative===0,"red works only with positives"),r(a.red,"red works only with red numbers")},me.prototype._verify2=function(a,u){r((a.negative|u.negative)===0,"red works only with positives"),r(a.red&&a.red===u.red,"red works only with red numbers")},me.prototype.imod=function(a){return this.prime?this.prime.ireduce(a)._forceRed(this):(m(a,a.umod(this.m)._forceRed(this)),a)},me.prototype.neg=function(a){return a.isZero()?a.clone():this.m.sub(a)._forceRed(this)},me.prototype.add=function(a,u){this._verify2(a,u);var h=a.add(u);return h.cmp(this.m)>=0&&h.isub(this.m),h._forceRed(this)},me.prototype.iadd=function(a,u){this._verify2(a,u);var h=a.iadd(u);return h.cmp(this.m)>=0&&h.isub(this.m),h},me.prototype.sub=function(a,u){this._verify2(a,u);var h=a.sub(u);return h.cmpn(0)<0&&h.iadd(this.m),h._forceRed(this)},me.prototype.isub=function(a,u){this._verify2(a,u);var h=a.isub(u);return h.cmpn(0)<0&&h.iadd(this.m),h},me.prototype.shl=function(a,u){return this._verify1(a),this.imod(a.ushln(u))},me.prototype.imul=function(a,u){return this._verify2(a,u),this.imod(a.imul(u))},me.prototype.mul=function(a,u){return this._verify2(a,u),this.imod(a.mul(u))},me.prototype.isqr=function(a){return this.imul(a,a.clone())},me.prototype.sqr=function(a){return this.mul(a,a)},me.prototype.sqrt=function(a){if(a.isZero())return a.clone();var u=this.m.andln(3);if(r(u%2===1),u===3){var h=this.m.add(new i(1)).iushrn(2);return this.pow(a,h)}for(var p=this.m.subn(1),b=0;!p.isZero()&&p.andln(1)===0;)b++,p.iushrn(1);r(!p.isZero());var x=new i(1).toRed(this),P=x.redNeg(),v=this.m.subn(1).iushrn(1),f=this.m.bitLength();for(f=new i(2*f*f).toRed(this);this.pow(f,v).cmp(P)!==0;)f.redIAdd(P);for(var g=this.pow(f,p),F=this.pow(a,p.addn(1).iushrn(1)),l=this.pow(a,p),E=b;l.cmp(x)!==0;){for(var T=l,j=0;T.cmp(x)!==0;j++)T=T.redSqr();r(j<E);var R=this.pow(g,new i(1).iushln(E-j-1));F=F.redMul(R),g=R.redSqr(),l=l.redMul(g),E=j}return F},me.prototype.invm=function(a){var u=a._invmp(this.m);return u.negative!==0?(u.negative=0,this.imod(u).redNeg()):this.imod(u)},me.prototype.pow=function(a,u){if(u.isZero())return new i(1).toRed(this);if(u.cmpn(1)===0)return a.clone();var h=4,p=new Array(1<<h);p[0]=new i(1).toRed(this),p[1]=a;for(var b=2;b<p.length;b++)p[b]=this.mul(p[b-1],a);var x=p[0],P=0,v=0,f=u.bitLength()%26;for(f===0&&(f=26),b=u.length-1;b>=0;b--){for(var g=u.words[b],F=f-1;F>=0;F--){var l=g>>F&1;if(x!==p[0]&&(x=this.sqr(x)),l===0&&P===0){v=0;continue}P<<=1,P|=l,v++,!(v!==h&&(b!==0||F!==0))&&(x=this.mul(x,p[P]),v=0,P=0)}f=26}return x},me.prototype.convertTo=function(a){var u=a.umod(this.m);return u===a?u.clone():u},me.prototype.convertFrom=function(a){var u=a.clone();return u.red=null,u},i.mont=function(a){return new tt(a)};function tt(w){me.call(this,w),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}n(tt,me),tt.prototype.convertTo=function(a){return this.imod(a.ushln(this.shift))},tt.prototype.convertFrom=function(a){var u=this.imod(a.mul(this.rinv));return u.red=null,u},tt.prototype.imul=function(a,u){if(a.isZero()||u.isZero())return a.words[0]=0,a.length=1,a;var h=a.imul(u),p=h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),b=h.isub(p).iushrn(this.shift),x=b;return b.cmp(this.m)>=0?x=b.isub(this.m):b.cmpn(0)<0&&(x=b.iadd(this.m)),x._forceRed(this)},tt.prototype.mul=function(a,u){if(a.isZero()||u.isZero())return new i(0)._forceRed(this);var h=a.mul(u),p=h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),b=h.isub(p).iushrn(this.shift),x=b;return b.cmp(this.m)>=0?x=b.isub(this.m):b.cmpn(0)<0&&(x=b.iadd(this.m)),x._forceRed(this)},tt.prototype.invm=function(a){var u=this.imod(a._invmp(this.m).mul(this.r2));return u._forceRed(this)}})(typeof Oa>"u"||Oa,Wc)});var Kc=B(to=>{"use strict";Object.defineProperty(to,"__esModule",{value:!0});to.version=void 0;to.version="logger/5.7.0"});var gt=B(Yt=>{"use strict";Object.defineProperty(Yt,"__esModule",{value:!0});Yt.Logger=Yt.ErrorCode=Yt.LogLevel=void 0;var Qc=!1,_c=!1,ro={debug:1,default:2,info:2,warning:3,error:4,off:5},$c=ro.default,sy=Kc(),Ea=null;function ay(){try{var t=[];if(["NFD","NFC","NFKD","NFKC"].forEach(function(e){try{if("test".normalize(e)!=="test")throw new Error("bad normalize")}catch{t.push(e)}}),t.length)throw new Error("missing "+t.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}var el=ay(),rl;(function(t){t.DEBUG="DEBUG",t.INFO="INFO",t.WARNING="WARNING",t.ERROR="ERROR",t.OFF="OFF"})(rl=Yt.LogLevel||(Yt.LogLevel={}));var Gt;(function(t){t.UNKNOWN_ERROR="UNKNOWN_ERROR",t.NOT_IMPLEMENTED="NOT_IMPLEMENTED",t.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",t.NETWORK_ERROR="NETWORK_ERROR",t.SERVER_ERROR="SERVER_ERROR",t.TIMEOUT="TIMEOUT",t.BUFFER_OVERRUN="BUFFER_OVERRUN",t.NUMERIC_FAULT="NUMERIC_FAULT",t.MISSING_NEW="MISSING_NEW",t.INVALID_ARGUMENT="INVALID_ARGUMENT",t.MISSING_ARGUMENT="MISSING_ARGUMENT",t.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",t.CALL_EXCEPTION="CALL_EXCEPTION",t.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",t.NONCE_EXPIRED="NONCE_EXPIRED",t.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",t.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",t.TRANSACTION_REPLACED="TRANSACTION_REPLACED",t.ACTION_REJECTED="ACTION_REJECTED"})(Gt=Yt.ErrorCode||(Yt.ErrorCode={}));var tl="0123456789abcdef",fy=function(){function t(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}return t.prototype._log=function(e,r){var n=e.toLowerCase();ro[n]==null&&this.throwArgumentError("invalid log level name","logLevel",e),!($c>ro[n])&&console.log.apply(console,r)},t.prototype.debug=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];this._log(t.levels.DEBUG,e)},t.prototype.info=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];this._log(t.levels.INFO,e)},t.prototype.warn=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];this._log(t.levels.WARNING,e)},t.prototype.makeError=function(e,r,n){if(_c)return this.makeError("censored error",r,{});r||(r=t.errors.UNKNOWN_ERROR),n||(n={});var i=[];Object.keys(n).forEach(function(m){var y=n[m];try{if(y instanceof Uint8Array){for(var A="",M=0;M<y.length;M++)A+=tl[y[M]>>4],A+=tl[y[M]&15];i.push(m+"=Uint8Array(0x"+A+")")}else i.push(m+"="+JSON.stringify(y))}catch{i.push(m+"="+JSON.stringify(n[m].toString()))}}),i.push("code="+r),i.push("version="+this.version);var o=e,s="";switch(r){case Gt.NUMERIC_FAULT:{s="NUMERIC_FAULT";var c=e;switch(c){case"overflow":case"underflow":case"division-by-zero":s+="-"+c;break;case"negative-power":case"negative-width":s+="-unsupported";break;case"unbound-bitwise-result":s+="-unbound-result";break}break}case Gt.CALL_EXCEPTION:case Gt.INSUFFICIENT_FUNDS:case Gt.MISSING_NEW:case Gt.NONCE_EXPIRED:case Gt.REPLACEMENT_UNDERPRICED:case Gt.TRANSACTION_REPLACED:case Gt.UNPREDICTABLE_GAS_LIMIT:s=r;break}s&&(e+=" [ See: https://links.ethers.org/v5-errors-"+s+" ]"),i.length&&(e+=" ("+i.join(", ")+")");var d=new Error(e);return d.reason=o,d.code=r,Object.keys(n).forEach(function(m){d[m]=n[m]}),d},t.prototype.throwError=function(e,r,n){throw this.makeError(e,r,n)},t.prototype.throwArgumentError=function(e,r,n){return this.throwError(e,t.errors.INVALID_ARGUMENT,{argument:r,value:n})},t.prototype.assert=function(e,r,n,i){e||this.throwError(r,n,i)},t.prototype.assertArgument=function(e,r,n,i){e||this.throwArgumentError(r,n,i)},t.prototype.checkNormalize=function(e){e==null&&(e="platform missing String.prototype.normalize"),el&&this.throwError("platform missing String.prototype.normalize",t.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:el})},t.prototype.checkSafeUint53=function(e,r){typeof e=="number"&&(r==null&&(r="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(r,t.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(r,t.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))},t.prototype.checkArgumentCount=function(e,r,n){n?n=": "+n:n="",e<r&&this.throwError("missing argument"+n,t.errors.MISSING_ARGUMENT,{count:e,expectedCount:r}),e>r&&this.throwError("too many arguments"+n,t.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:r})},t.prototype.checkNew=function(e,r){(e===Object||e==null)&&this.throwError("missing new",t.errors.MISSING_NEW,{name:r.name})},t.prototype.checkAbstract=function(e,r){e===r?this.throwError("cannot instantiate abstract class "+JSON.stringify(r.name)+" directly; use a sub-class",t.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):(e===Object||e==null)&&this.throwError("missing new",t.errors.MISSING_NEW,{name:r.name})},t.globalLogger=function(){return Ea||(Ea=new t(sy.version)),Ea},t.setCensorship=function(e,r){if(!e&&r&&this.globalLogger().throwError("cannot permanently disable censorship",t.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Qc){if(!e)return;this.globalLogger().throwError("error censorship permanent",t.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_c=!!e,Qc=!!r},t.setLogLevel=function(e){var r=ro[e.toLowerCase()];if(r==null){t.globalLogger().warn("invalid log level - "+e);return}$c=r},t.from=function(e){return new t(e)},t.errors=Gt,t.levels=rl,t}();Yt.Logger=fy});var nl=B(no=>{"use strict";Object.defineProperty(no,"__esModule",{value:!0});no.version=void 0;no.version="bytes/5.7.0"});var ut=B(de=>{"use strict";Object.defineProperty(de,"__esModule",{value:!0});de.joinSignature=de.splitSignature=de.hexZeroPad=de.hexStripZeros=de.hexValue=de.hexConcat=de.hexDataSlice=de.hexDataLength=de.hexlify=de.isHexString=de.zeroPad=de.stripZeros=de.concat=de.arrayify=de.isBytes=de.isBytesLike=void 0;var uy=gt(),cy=nl(),_e=new uy.Logger(cy.version);function ol(t){return!!t.toHexString}function Pn(t){return t.slice||(t.slice=function(){var e=Array.prototype.slice.call(arguments);return Pn(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}function sl(t){return Ht(t)&&!(t.length%2)||oo(t)}de.isBytesLike=sl;function il(t){return typeof t=="number"&&t==t&&t%1===0}function oo(t){if(t==null)return!1;if(t.constructor===Uint8Array)return!0;if(typeof t=="string"||!il(t.length)||t.length<0)return!1;for(var e=0;e<t.length;e++){var r=t[e];if(!il(r)||r<0||r>=256)return!1}return!0}de.isBytes=oo;function Jr(t,e){if(e||(e={}),typeof t=="number"){_e.checkSafeUint53(t,"invalid arrayify value");for(var r=[];t;)r.unshift(t&255),t=parseInt(String(t/256));return r.length===0&&r.push(0),Pn(new Uint8Array(r))}if(e.allowMissingPrefix&&typeof t=="string"&&t.substring(0,2)!=="0x"&&(t="0x"+t),ol(t)&&(t=t.toHexString()),Ht(t)){var n=t.substring(2);n.length%2&&(e.hexPad==="left"?n="0"+n:e.hexPad==="right"?n+="0":_e.throwArgumentError("hex data is odd-length","value",t));for(var r=[],i=0;i<n.length;i+=2)r.push(parseInt(n.substring(i,i+2),16));return Pn(new Uint8Array(r))}return oo(t)?Pn(new Uint8Array(t)):_e.throwArgumentError("invalid arrayify value","value",t)}de.arrayify=Jr;function al(t){var e=t.map(function(i){return Jr(i)}),r=e.reduce(function(i,o){return i+o.length},0),n=new Uint8Array(r);return e.reduce(function(i,o){return n.set(o,i),i+o.length},0),Pn(n)}de.concat=al;function ly(t){var e=Jr(t);if(e.length===0)return e;for(var r=0;r<e.length&&e[r]===0;)r++;return r&&(e=e.slice(r)),e}de.stripZeros=ly;function fl(t,e){t=Jr(t),t.length>e&&_e.throwArgumentError("value out of range","value",arguments[0]);var r=new Uint8Array(e);return r.set(t,e-t.length),Pn(r)}de.zeroPad=fl;function Ht(t,e){return!(typeof t!="string"||!t.match(/^0x[0-9A-Fa-f]*$/)||e&&t.length!==2+2*e)}de.isHexString=Ht;var Ta="0123456789abcdef";function mt(t,e){if(e||(e={}),typeof t=="number"){_e.checkSafeUint53(t,"invalid hexlify value");for(var r="";t;)r=Ta[t&15]+r,t=Math.floor(t/16);return r.length?(r.length%2&&(r="0"+r),"0x"+r):"0x00"}if(typeof t=="bigint")return t=t.toString(16),t.length%2?"0x0"+t:"0x"+t;if(e.allowMissingPrefix&&typeof t=="string"&&t.substring(0,2)!=="0x"&&(t="0x"+t),ol(t))return t.toHexString();if(Ht(t))return t.length%2&&(e.hexPad==="left"?t="0x0"+t.substring(2):e.hexPad==="right"?t+="0":_e.throwArgumentError("hex data is odd-length","value",t)),t.toLowerCase();if(oo(t)){for(var n="0x",i=0;i<t.length;i++){var o=t[i];n+=Ta[(o&240)>>4]+Ta[o&15]}return n}return _e.throwArgumentError("invalid hexlify value","value",t)}de.hexlify=mt;function hy(t){if(typeof t!="string")t=mt(t);else if(!Ht(t)||t.length%2)return null;return(t.length-2)/2}de.hexDataLength=hy;function dy(t,e,r){return typeof t!="string"?t=mt(t):(!Ht(t)||t.length%2)&&_e.throwArgumentError("invalid hexData","value",t),e=2+2*e,r!=null?"0x"+t.substring(e,2+2*r):"0x"+t.substring(e)}de.hexDataSlice=dy;function py(t){var e="0x";return t.forEach(function(r){e+=mt(r).substring(2)}),e}de.hexConcat=py;function my(t){var e=ul(mt(t,{hexPad:"left"}));return e==="0x"?"0x0":e}de.hexValue=my;function ul(t){typeof t!="string"&&(t=mt(t)),Ht(t)||_e.throwArgumentError("invalid hex string","value",t),t=t.substring(2);for(var e=0;e<t.length&&t[e]==="0";)e++;return"0x"+t.substring(e)}de.hexStripZeros=ul;function io(t,e){for(typeof t!="string"?t=mt(t):Ht(t)||_e.throwArgumentError("invalid hex string","value",t),t.length>2*e+2&&_e.throwArgumentError("value out of range","value",arguments[1]);t.length<2*e+2;)t="0x0"+t.substring(2);return t}de.hexZeroPad=io;function cl(t){var e={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0,yParityAndS:"0x",compact:"0x"};if(sl(t)){var r=Jr(t);r.length===64?(e.v=27+(r[32]>>7),r[32]&=127,e.r=mt(r.slice(0,32)),e.s=mt(r.slice(32,64))):r.length===65?(e.r=mt(r.slice(0,32)),e.s=mt(r.slice(32,64)),e.v=r[64]):_e.throwArgumentError("invalid signature string","signature",t),e.v<27&&(e.v===0||e.v===1?e.v+=27:_e.throwArgumentError("signature invalid v byte","signature",t)),e.recoveryParam=1-e.v%2,e.recoveryParam&&(r[32]|=128),e._vs=mt(r.slice(32,64))}else{if(e.r=t.r,e.s=t.s,e.v=t.v,e.recoveryParam=t.recoveryParam,e._vs=t._vs,e._vs!=null){var n=fl(Jr(e._vs),32);e._vs=mt(n);var i=n[0]>=128?1:0;e.recoveryParam==null?e.recoveryParam=i:e.recoveryParam!==i&&_e.throwArgumentError("signature recoveryParam mismatch _vs","signature",t),n[0]&=127;var o=mt(n);e.s==null?e.s=o:e.s!==o&&_e.throwArgumentError("signature v mismatch _vs","signature",t)}if(e.recoveryParam==null)e.v==null?_e.throwArgumentError("signature missing v and recoveryParam","signature",t):e.v===0||e.v===1?e.recoveryParam=e.v:e.recoveryParam=1-e.v%2;else if(e.v==null)e.v=27+e.recoveryParam;else{var s=e.v===0||e.v===1?e.v:1-e.v%2;e.recoveryParam!==s&&_e.throwArgumentError("signature recoveryParam mismatch v","signature",t)}e.r==null||!Ht(e.r)?_e.throwArgumentError("signature missing or invalid r","signature",t):e.r=io(e.r,32),e.s==null||!Ht(e.s)?_e.throwArgumentError("signature missing or invalid s","signature",t):e.s=io(e.s,32);var c=Jr(e.s);c[0]>=128&&_e.throwArgumentError("signature s out of range","signature",t),e.recoveryParam&&(c[0]|=128);var d=mt(c);e._vs&&(Ht(e._vs)||_e.throwArgumentError("signature invalid _vs","signature",t),e._vs=io(e._vs,32)),e._vs==null?e._vs=d:e._vs!==d&&_e.throwArgumentError("signature _vs mismatch v and s","signature",t)}return e.yParityAndS=e._vs,e.compact=e.r+e.yParityAndS.substring(2),e}de.splitSignature=cl;function yy(t){return t=cl(t),mt(al([t.r,t.s,t.recoveryParam?"0x1c":"0x1b"]))}de.joinSignature=yy});var Na=B(so=>{"use strict";Object.defineProperty(so,"__esModule",{value:!0});so.version=void 0;so.version="bignumber/5.7.0"});var fo=B(jt=>{"use strict";var vy=jt&&jt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(jt,"__esModule",{value:!0});jt._base16To36=jt._base36To16=jt.BigNumber=jt.isBigNumberish=void 0;var by=vy(Jc()),di=by.default.BN,On=ut(),En=gt(),gy=Na(),or=new En.Logger(gy.version),Ma={},ll=9007199254740991;function wy(t){return t!=null&&(ao.isBigNumber(t)||typeof t=="number"&&t%1===0||typeof t=="string"&&!!t.match(/^-?[0-9]+$/)||(0,On.isHexString)(t)||typeof t=="bigint"||(0,On.isBytes)(t))}jt.isBigNumberish=wy;var hl=!1,ao=function(){function t(e,r){e!==Ma&&or.throwError("cannot call constructor directly; use BigNumber.from",En.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=r,this._isBigNumber=!0,Object.freeze(this)}return t.prototype.fromTwos=function(e){return Et(ce(this).fromTwos(e))},t.prototype.toTwos=function(e){return Et(ce(this).toTwos(e))},t.prototype.abs=function(){return this._hex[0]==="-"?t.from(this._hex.substring(1)):this},t.prototype.add=function(e){return Et(ce(this).add(ce(e)))},t.prototype.sub=function(e){return Et(ce(this).sub(ce(e)))},t.prototype.div=function(e){var r=t.from(e);return r.isZero()&&Lt("division-by-zero","div"),Et(ce(this).div(ce(e)))},t.prototype.mul=function(e){return Et(ce(this).mul(ce(e)))},t.prototype.mod=function(e){var r=ce(e);return r.isNeg()&&Lt("division-by-zero","mod"),Et(ce(this).umod(r))},t.prototype.pow=function(e){var r=ce(e);return r.isNeg()&&Lt("negative-power","pow"),Et(ce(this).pow(r))},t.prototype.and=function(e){var r=ce(e);return(this.isNegative()||r.isNeg())&&Lt("unbound-bitwise-result","and"),Et(ce(this).and(r))},t.prototype.or=function(e){var r=ce(e);return(this.isNegative()||r.isNeg())&&Lt("unbound-bitwise-result","or"),Et(ce(this).or(r))},t.prototype.xor=function(e){var r=ce(e);return(this.isNegative()||r.isNeg())&&Lt("unbound-bitwise-result","xor"),Et(ce(this).xor(r))},t.prototype.mask=function(e){return(this.isNegative()||e<0)&&Lt("negative-width","mask"),Et(ce(this).maskn(e))},t.prototype.shl=function(e){return(this.isNegative()||e<0)&&Lt("negative-width","shl"),Et(ce(this).shln(e))},t.prototype.shr=function(e){return(this.isNegative()||e<0)&&Lt("negative-width","shr"),Et(ce(this).shrn(e))},t.prototype.eq=function(e){return ce(this).eq(ce(e))},t.prototype.lt=function(e){return ce(this).lt(ce(e))},t.prototype.lte=function(e){return ce(this).lte(ce(e))},t.prototype.gt=function(e){return ce(this).gt(ce(e))},t.prototype.gte=function(e){return ce(this).gte(ce(e))},t.prototype.isNegative=function(){return this._hex[0]==="-"},t.prototype.isZero=function(){return ce(this).isZero()},t.prototype.toNumber=function(){try{return ce(this).toNumber()}catch{Lt("overflow","toNumber",this.toString())}return null},t.prototype.toBigInt=function(){try{return BigInt(this.toString())}catch{}return or.throwError("this platform does not support BigInt",En.Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})},t.prototype.toString=function(){return arguments.length>0&&(arguments[0]===10?hl||(hl=!0,or.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):arguments[0]===16?or.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",En.Logger.errors.UNEXPECTED_ARGUMENT,{}):or.throwError("BigNumber.toString does not accept parameters",En.Logger.errors.UNEXPECTED_ARGUMENT,{})),ce(this).toString(10)},t.prototype.toHexString=function(){return this._hex},t.prototype.toJSON=function(e){return{type:"BigNumber",hex:this.toHexString()}},t.from=function(e){if(e instanceof t)return e;if(typeof e=="string")return e.match(/^-?0x[0-9a-f]+$/i)?new t(Ma,pi(e)):e.match(/^-?[0-9]+$/)?new t(Ma,pi(new di(e))):or.throwArgumentError("invalid BigNumber string","value",e);if(typeof e=="number")return e%1&&Lt("underflow","BigNumber.from",e),(e>=ll||e<=-ll)&&Lt("overflow","BigNumber.from",e),t.from(String(e));var r=e;if(typeof r=="bigint")return t.from(r.toString());if((0,On.isBytes)(r))return t.from((0,On.hexlify)(r));if(r)if(r.toHexString){var n=r.toHexString();if(typeof n=="string")return t.from(n)}else{var n=r._hex;if(n==null&&r.type==="BigNumber"&&(n=r.hex),typeof n=="string"&&((0,On.isHexString)(n)||n[0]==="-"&&(0,On.isHexString)(n.substring(1))))return t.from(n)}return or.throwArgumentError("invalid BigNumber value","value",e)},t.isBigNumber=function(e){return!!(e&&e._isBigNumber)},t}();jt.BigNumber=ao;function pi(t){if(typeof t!="string")return pi(t.toString(16));if(t[0]==="-")return t=t.substring(1),t[0]==="-"&&or.throwArgumentError("invalid hex","value",t),t=pi(t),t==="0x00"?t:"-"+t;if(t.substring(0,2)!=="0x"&&(t="0x"+t),t==="0x")return"0x00";for(t.length%2&&(t="0x0"+t.substring(2));t.length>4&&t.substring(0,4)==="0x00";)t="0x"+t.substring(4);return t}function Et(t){return ao.from(pi(t))}function ce(t){var e=ao.from(t).toHexString();return e[0]==="-"?new di("-"+e.substring(3),16):new di(e.substring(2),16)}function Lt(t,e,r){var n={fault:t,operation:e};return r!=null&&(n.value=r),or.throwError(t,En.Logger.errors.NUMERIC_FAULT,n)}function xy(t){return new di(t,36).toString(16)}jt._base36To16=xy;function Ay(t){return new di(t,16).toString(36)}jt._base16To36=Ay});var vl=B(Jt=>{"use strict";Object.defineProperty(Jt,"__esModule",{value:!0});Jt.FixedNumber=Jt.FixedFormat=Jt.parseFixed=Jt.formatFixed=void 0;var uo=ut(),vi=gt(),Py=Na(),wt=new vi.Logger(Py.version),sr=fo(),mi={},pl=sr.BigNumber.from(0),ml=sr.BigNumber.from(-1);function yl(t,e,r,n){var i={fault:e,operation:r};return n!==void 0&&(i.value=n),wt.throwError(t,vi.Logger.errors.NUMERIC_FAULT,i)}var yi="0";for(;yi.length<256;)yi+=yi;function ka(t){if(typeof t!="number")try{t=sr.BigNumber.from(t).toNumber()}catch{}return typeof t=="number"&&t>=0&&t<=256&&!(t%1)?"1"+yi.substring(0,t):wt.throwArgumentError("invalid decimal size","decimals",t)}function co(t,e){e==null&&(e=0);var r=ka(e);t=sr.BigNumber.from(t);var n=t.lt(pl);n&&(t=t.mul(ml));for(var i=t.mod(r).toString();i.length<r.length-1;)i="0"+i;i=i.match(/^([0-9]*[1-9]|0)(0*)/)[1];var o=t.div(r).toString();return r.length===1?t=o:t=o+"."+i,n&&(t="-"+t),t}Jt.formatFixed=co;function Wt(t,e){e==null&&(e=0);var r=ka(e);(typeof t!="string"||!t.match(/^-?[0-9.]+$/))&&wt.throwArgumentError("invalid decimal value","value",t);var n=t.substring(0,1)==="-";n&&(t=t.substring(1)),t==="."&&wt.throwArgumentError("missing value","value",t);var i=t.split(".");i.length>2&&wt.throwArgumentError("too many decimal points","value",t);var o=i[0],s=i[1];for(o||(o="0"),s||(s="0");s[s.length-1]==="0";)s=s.substring(0,s.length-1);for(s.length>r.length-1&&yl("fractional component exceeds decimals","underflow","parseFixed"),s===""&&(s="0");s.length<r.length-1;)s+="0";var c=sr.BigNumber.from(o),d=sr.BigNumber.from(s),m=c.mul(r).add(d);return n&&(m=m.mul(ml)),m}Jt.parseFixed=Wt;var lo=function(){function t(e,r,n,i){e!==mi&&wt.throwError("cannot use FixedFormat constructor; use FixedFormat.from",vi.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=r,this.width=n,this.decimals=i,this.name=(r?"":"u")+"fixed"+String(n)+"x"+String(i),this._multiplier=ka(i),Object.freeze(this)}return t.from=function(e){if(e instanceof t)return e;typeof e=="number"&&(e="fixed128x"+e);var r=!0,n=128,i=18;if(typeof e=="string"){if(e!=="fixed")if(e==="ufixed")r=!1;else{var o=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);o||wt.throwArgumentError("invalid fixed format","format",e),r=o[1]!=="u",n=parseInt(o[2]),i=parseInt(o[3])}}else if(e){var s=function(c,d,m){return e[c]==null?m:(typeof e[c]!==d&&wt.throwArgumentError("invalid fixed format ("+c+" not "+d+")","format."+c,e[c]),e[c])};r=s("signed","boolean",r),n=s("width","number",n),i=s("decimals","number",i)}return n%8&&wt.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",n),i>80&&wt.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",i),new t(mi,r,n,i)},t}();Jt.FixedFormat=lo;var za=function(){function t(e,r,n,i){e!==mi&&wt.throwError("cannot use FixedNumber constructor; use FixedNumber.from",vi.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=i,this._hex=r,this._value=n,this._isFixedNumber=!0,Object.freeze(this)}return t.prototype._checkFormat=function(e){this.format.name!==e.format.name&&wt.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",e)},t.prototype.addUnsafe=function(e){this._checkFormat(e);var r=Wt(this._value,this.format.decimals),n=Wt(e._value,e.format.decimals);return t.fromValue(r.add(n),this.format.decimals,this.format)},t.prototype.subUnsafe=function(e){this._checkFormat(e);var r=Wt(this._value,this.format.decimals),n=Wt(e._value,e.format.decimals);return t.fromValue(r.sub(n),this.format.decimals,this.format)},t.prototype.mulUnsafe=function(e){this._checkFormat(e);var r=Wt(this._value,this.format.decimals),n=Wt(e._value,e.format.decimals);return t.fromValue(r.mul(n).div(this.format._multiplier),this.format.decimals,this.format)},t.prototype.divUnsafe=function(e){this._checkFormat(e);var r=Wt(this._value,this.format.decimals),n=Wt(e._value,e.format.decimals);return t.fromValue(r.mul(this.format._multiplier).div(n),this.format.decimals,this.format)},t.prototype.floor=function(){var e=this.toString().split(".");e.length===1&&e.push("0");var r=t.from(e[0],this.format),n=!e[1].match(/^(0*)$/);return this.isNegative()&&n&&(r=r.subUnsafe(dl.toFormat(r.format))),r},t.prototype.ceiling=function(){var e=this.toString().split(".");e.length===1&&e.push("0");var r=t.from(e[0],this.format),n=!e[1].match(/^(0*)$/);return!this.isNegative()&&n&&(r=r.addUnsafe(dl.toFormat(r.format))),r},t.prototype.round=function(e){e==null&&(e=0);var r=this.toString().split(".");if(r.length===1&&r.push("0"),(e<0||e>80||e%1)&&wt.throwArgumentError("invalid decimal count","decimals",e),r[1].length<=e)return this;var n=t.from("1"+yi.substring(0,e),this.format),i=Oy.toFormat(this.format);return this.mulUnsafe(n).addUnsafe(i).floor().divUnsafe(n)},t.prototype.isZero=function(){return this._value==="0.0"||this._value==="0"},t.prototype.isNegative=function(){return this._value[0]==="-"},t.prototype.toString=function(){return this._value},t.prototype.toHexString=function(e){if(e==null)return this._hex;e%8&&wt.throwArgumentError("invalid byte width","width",e);var r=sr.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();return(0,uo.hexZeroPad)(r,e/8)},t.prototype.toUnsafeFloat=function(){return parseFloat(this.toString())},t.prototype.toFormat=function(e){return t.fromString(this._value,e)},t.fromValue=function(e,r,n){return n==null&&r!=null&&!(0,sr.isBigNumberish)(r)&&(n=r,r=null),r==null&&(r=0),n==null&&(n="fixed"),t.fromString(co(e,r),lo.from(n))},t.fromString=function(e,r){r==null&&(r="fixed");var n=lo.from(r),i=Wt(e,n.decimals);!n.signed&&i.lt(pl)&&yl("unsigned value cannot be negative","overflow","value",e);var o=null;n.signed?o=i.toTwos(n.width).toHexString():(o=i.toHexString(),o=(0,uo.hexZeroPad)(o,n.width/8));var s=co(i,n.decimals);return new t(mi,o,s,n)},t.fromBytes=function(e,r){r==null&&(r="fixed");var n=lo.from(r);if((0,uo.arrayify)(e).length>n.width/8)throw new Error("overflow");var i=sr.BigNumber.from(e);n.signed&&(i=i.fromTwos(n.width));var o=i.toTwos((n.signed?0:1)+n.width).toHexString(),s=co(i,n.decimals);return new t(mi,o,s,n)},t.from=function(e,r){if(typeof e=="string")return t.fromString(e,r);if((0,uo.isBytes)(e))return t.fromBytes(e,r);try{return t.fromValue(e,0,r)}catch(n){if(n.code!==vi.Logger.errors.INVALID_ARGUMENT)throw n}return wt.throwArgumentError("invalid FixedNumber value","value",e)},t.isFixedNumber=function(e){return!!(e&&e._isFixedNumber)},t}();Jt.FixedNumber=za;var dl=za.from(1),Oy=za.from("0.5")});var Ar=B(yt=>{"use strict";Object.defineProperty(yt,"__esModule",{value:!0});yt._base36To16=yt._base16To36=yt.parseFixed=yt.FixedNumber=yt.FixedFormat=yt.formatFixed=yt.BigNumber=void 0;var Ey=fo();Object.defineProperty(yt,"BigNumber",{enumerable:!0,get:function(){return Ey.BigNumber}});var ho=vl();Object.defineProperty(yt,"formatFixed",{enumerable:!0,get:function(){return ho.formatFixed}});Object.defineProperty(yt,"FixedFormat",{enumerable:!0,get:function(){return ho.FixedFormat}});Object.defineProperty(yt,"FixedNumber",{enumerable:!0,get:function(){return ho.FixedNumber}});Object.defineProperty(yt,"parseFixed",{enumerable:!0,get:function(){return ho.parseFixed}});var bl=fo();Object.defineProperty(yt,"_base16To36",{enumerable:!0,get:function(){return bl._base16To36}});Object.defineProperty(yt,"_base36To16",{enumerable:!0,get:function(){return bl._base36To16}})});var gl=B(po=>{"use strict";Object.defineProperty(po,"__esModule",{value:!0});po.version=void 0;po.version="properties/5.7.0"});var Tn=B(it=>{"use strict";var Ty=it&&it.__awaiter||function(t,e,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function c(y){try{m(n.next(y))}catch(A){s(A)}}function d(y){try{m(n.throw(y))}catch(A){s(A)}}function m(y){y.done?o(y.value):i(y.value).then(c,d)}m((n=n.apply(t,e||[])).next())})},Ny=it&&it.__generator||function(t,e){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:c(0),throw:c(1),return:c(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function c(m){return function(y){return d([m,y])}}function d(m){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=m[0]&2?i.return:m[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,m[1])).done)return o;switch(i=0,o&&(m=[m[0]&2,o.value]),m[0]){case 0:case 1:o=m;break;case 4:return r.label++,{value:m[1],done:!1};case 5:r.label++,i=m[1],m=[0];continue;case 7:m=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(m[0]===6||m[0]===2)){r=0;continue}if(m[0]===3&&(!o||m[1]>o[0]&&m[1]<o[3])){r.label=m[1];break}if(m[0]===6&&r.label<o[1]){r.label=o[1],o=m;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(m);break}o[2]&&r.ops.pop(),r.trys.pop();continue}m=e.call(t,r)}catch(y){m=[6,y],i=0}finally{n=o=0}if(m[0]&5)throw m[1];return{value:m[0]?m[1]:void 0,done:!0}}};Object.defineProperty(it,"__esModule",{value:!0});it.Description=it.deepCopy=it.shallowCopy=it.checkProperties=it.resolveProperties=it.getStatic=it.defineReadOnly=void 0;var My=gt(),ky=gl(),mo=new My.Logger(ky.version);function wl(t,e,r){Object.defineProperty(t,e,{enumerable:!0,value:r,writable:!1})}it.defineReadOnly=wl;function zy(t,e){for(var r=0;r<32;r++){if(t[e])return t[e];if(!t.prototype||typeof t.prototype!="object")break;t=Object.getPrototypeOf(t.prototype).constructor}return null}it.getStatic=zy;function Ly(t){return Ty(this,void 0,void 0,function(){var e,r;return Ny(this,function(n){switch(n.label){case 0:return e=Object.keys(t).map(function(i){var o=t[i];return Promise.resolve(o).then(function(s){return{key:i,value:s}})}),[4,Promise.all(e)];case 1:return r=n.sent(),[2,r.reduce(function(i,o){return i[o.key]=o.value,i},{})]}})})}it.resolveProperties=Ly;function jy(t,e){(!t||typeof t!="object")&&mo.throwArgumentError("invalid object","object",t),Object.keys(t).forEach(function(r){e[r]||mo.throwArgumentError("invalid object key - "+r,"transaction:"+r,t)})}it.checkProperties=jy;function Sy(t){var e={};for(var r in t)e[r]=t[r];return e}it.shallowCopy=Sy;var By={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function xl(t){if(t==null||By[typeof t])return!0;if(Array.isArray(t)||typeof t=="object"){if(!Object.isFrozen(t))return!1;for(var e=Object.keys(t),r=0;r<e.length;r++){var n=null;try{n=t[e[r]]}catch{continue}if(!xl(n))return!1}return!0}return mo.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}function Uy(t){if(xl(t))return t;if(Array.isArray(t))return Object.freeze(t.map(function(i){return yo(i)}));if(typeof t=="object"){var e={};for(var r in t){var n=t[r];n!==void 0&&wl(e,r,yo(n))}return e}return mo.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}function yo(t){return Uy(t)}it.deepCopy=yo;var Ry=function(){function t(e){for(var r in e)this[r]=yo(e[r])}return t}();it.Description=Ry});var Nn=B(vo=>{"use strict";Object.defineProperty(vo,"__esModule",{value:!0});vo.version=void 0;vo.version="abi/5.7.0"});var Oo=B(ee=>{"use strict";var xo=ee&&ee.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(ee,"__esModule",{value:!0});ee.ErrorFragment=ee.FunctionFragment=ee.ConstructorFragment=ee.EventFragment=ee.Fragment=ee.ParamType=ee.FormatTypes=void 0;var Ba=Ar(),Fy=Tn(),Ao=gt(),Cy=Nn(),le=new Ao.Logger(Cy.version),Kr={},Al={calldata:!0,memory:!0,storage:!0},Xy={calldata:!0,memory:!0};function bo(t,e){if(t==="bytes"||t==="string"){if(Al[e])return!0}else if(t==="address"){if(e==="payable")return!0}else if((t.indexOf("[")>=0||t==="tuple")&&Xy[e])return!0;return(Al[e]||e==="payable")&&le.throwArgumentError("invalid modifier","name",e),!1}function Dy(t,e){var r=t;function n(A){le.throwArgumentError("unexpected character at position "+A,"param",t)}t=t.replace(/\s/g," ");function i(A){var M={type:"",name:"",parent:A,state:{allowType:!0}};return e&&(M.indexed=!1),M}for(var o={type:"",name:"",state:{allowType:!0}},s=o,c=0;c<t.length;c++){var d=t[c];switch(d){case"(":s.state.allowType&&s.type===""?s.type="tuple":s.state.allowParams||n(c),s.state.allowType=!1,s.type=Mn(s.type),s.components=[i(s)],s=s.components[0];break;case")":delete s.state,s.name==="indexed"&&(e||n(c),s.indexed=!0,s.name=""),bo(s.type,s.name)&&(s.name=""),s.type=Mn(s.type);var m=s;s=s.parent,s||n(c),delete m.parent,s.state.allowParams=!1,s.state.allowName=!0,s.state.allowArray=!0;break;case",":delete s.state,s.name==="indexed"&&(e||n(c),s.indexed=!0,s.name=""),bo(s.type,s.name)&&(s.name=""),s.type=Mn(s.type);var y=i(s.parent);s.parent.components.push(y),delete s.parent,s=y;break;case" ":s.state.allowType&&s.type!==""&&(s.type=Mn(s.type),delete s.state.allowType,s.state.allowName=!0,s.state.allowParams=!0),s.state.allowName&&s.name!==""&&(s.name==="indexed"?(e||n(c),s.indexed&&n(c),s.indexed=!0,s.name=""):bo(s.type,s.name)?s.name="":s.state.allowName=!1);break;case"[":s.state.allowArray||n(c),s.type+=d,s.state.allowArray=!1,s.state.allowName=!1,s.state.readArray=!0;break;case"]":s.state.readArray||n(c),s.type+=d,s.state.readArray=!1,s.state.allowArray=!0,s.state.allowName=!0;break;default:s.state.allowType?(s.type+=d,s.state.allowParams=!0,s.state.allowArray=!0):s.state.allowName?(s.name+=d,delete s.state.allowArray):s.state.readArray?s.type+=d:n(c)}}return s.parent&&le.throwArgumentError("unexpected eof","param",t),delete o.state,s.name==="indexed"?(e||n(r.length-7),s.indexed&&n(r.length-7),s.indexed=!0,s.name=""):bo(s.type,s.name)&&(s.name=""),o.type=Mn(o.type),o}function go(t,e){for(var r in e)(0,Fy.defineReadOnly)(t,r,e[r])}ee.FormatTypes=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"});var Hy=new RegExp(/^(.*)\[([0-9]*)\]$/),Qr=function(){function t(e,r){e!==Kr&&le.throwError("use fromString",Ao.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),go(this,r);var n=this.type.match(Hy);n?go(this,{arrayLength:parseInt(n[2]||"-1"),arrayChildren:t.fromObject({type:n[1],components:this.components}),baseType:"array"}):go(this,{arrayLength:null,arrayChildren:null,baseType:this.components!=null?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}return t.prototype.format=function(e){if(e||(e=ee.FormatTypes.sighash),ee.FormatTypes[e]||le.throwArgumentError("invalid format type","format",e),e===ee.FormatTypes.json){var r={type:this.baseType==="tuple"?"tuple":this.type,name:this.name||void 0};return typeof this.indexed=="boolean"&&(r.indexed=this.indexed),this.components&&(r.components=this.components.map(function(i){return JSON.parse(i.format(e))})),JSON.stringify(r)}var n="";return this.baseType==="array"?(n+=this.arrayChildren.format(e),n+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):this.baseType==="tuple"?(e!==ee.FormatTypes.sighash&&(n+=this.type),n+="("+this.components.map(function(i){return i.format(e)}).join(e===ee.FormatTypes.full?", ":",")+")"):n+=this.type,e!==ee.FormatTypes.sighash&&(this.indexed===!0&&(n+=" indexed"),e===ee.FormatTypes.full&&this.name&&(n+=" "+this.name)),n},t.from=function(e,r){return typeof e=="string"?t.fromString(e,r):t.fromObject(e)},t.fromObject=function(e){return t.isParamType(e)?e:new t(Kr,{name:e.name||null,type:Mn(e.type),indexed:e.indexed==null?null:!!e.indexed,components:e.components?e.components.map(t.fromObject):null})},t.fromString=function(e,r){function n(i){return t.fromObject({name:i.name,type:i.type,indexed:i.indexed,components:i.components})}return n(Dy(e,!!r))},t.isParamType=function(e){return!!(e!=null&&e._isParamType)},t}();ee.ParamType=Qr;function bi(t,e){return qy(t).map(function(r){return Qr.fromString(r,e)})}var Po=function(){function t(e,r){e!==Kr&&le.throwError("use a static from method",Ao.Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),go(this,r),this._isFragment=!0,Object.freeze(this)}return t.from=function(e){return t.isFragment(e)?e:typeof e=="string"?t.fromString(e):t.fromObject(e)},t.fromObject=function(e){if(t.isFragment(e))return e;switch(e.type){case"function":return ja.fromObject(e);case"event":return La.fromObject(e);case"constructor":return wo.fromObject(e);case"error":return Sa.fromObject(e);case"fallback":case"receive":return null}return le.throwArgumentError("invalid fragment object","value",e)},t.fromString=function(e){return e=e.replace(/\s/g," "),e=e.replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," "),e=e.trim(),e.split(" ")[0]==="event"?La.fromString(e.substring(5).trim()):e.split(" ")[0]==="function"?ja.fromString(e.substring(8).trim()):e.split("(")[0].trim()==="constructor"?wo.fromString(e.trim()):e.split(" ")[0]==="error"?Sa.fromString(e.substring(5).trim()):le.throwArgumentError("unsupported fragment","value",e)},t.isFragment=function(e){return!!(e&&e._isFragment)},t}();ee.Fragment=Po;var La=function(t){xo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.prototype.format=function(r){if(r||(r=ee.FormatTypes.sighash),ee.FormatTypes[r]||le.throwArgumentError("invalid format type","format",r),r===ee.FormatTypes.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(function(i){return JSON.parse(i.format(r))})});var n="";return r!==ee.FormatTypes.sighash&&(n+="event "),n+=this.name+"("+this.inputs.map(function(i){return i.format(r)}).join(r===ee.FormatTypes.full?", ":",")+") ",r!==ee.FormatTypes.sighash&&this.anonymous&&(n+="anonymous "),n.trim()},e.from=function(r){return typeof r=="string"?e.fromString(r):e.fromObject(r)},e.fromObject=function(r){if(e.isEventFragment(r))return r;r.type!=="event"&&le.throwArgumentError("invalid event object","value",r);var n={name:gi(r.name),anonymous:r.anonymous,inputs:r.inputs?r.inputs.map(Qr.fromObject):[],type:"event"};return new e(Kr,n)},e.fromString=function(r){var n=r.match(wi);n||le.throwArgumentError("invalid event string","value",r);var i=!1;return n[3].split(" ").forEach(function(o){switch(o.trim()){case"anonymous":i=!0;break;case"":break;default:le.warn("unknown modifier: "+o)}}),e.fromObject({name:n[1].trim(),anonymous:i,inputs:bi(n[2],!0),type:"event"})},e.isEventFragment=function(r){return r&&r._isFragment&&r.type==="event"},e}(Po);ee.EventFragment=La;function Ol(t,e){e.gas=null;var r=t.split("@");return r.length!==1?(r.length>2&&le.throwArgumentError("invalid human-readable ABI signature","value",t),r[1].match(/^[0-9]+$/)||le.throwArgumentError("invalid human-readable ABI signature gas","value",t),e.gas=Ba.BigNumber.from(r[1]),r[0]):t}function El(t,e){e.constant=!1,e.payable=!1,e.stateMutability="nonpayable",t.split(" ").forEach(function(r){switch(r.trim()){case"constant":e.constant=!0;break;case"payable":e.payable=!0,e.stateMutability="payable";break;case"nonpayable":e.payable=!1,e.stateMutability="nonpayable";break;case"pure":e.constant=!0,e.stateMutability="pure";break;case"view":e.constant=!0,e.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+r)}})}function Tl(t){var e={constant:!1,payable:!0,stateMutability:"payable"};return t.stateMutability!=null?(e.stateMutability=t.stateMutability,e.constant=e.stateMutability==="view"||e.stateMutability==="pure",t.constant!=null&&!!t.constant!==e.constant&&le.throwArgumentError("cannot have constant function with mutability "+e.stateMutability,"value",t),e.payable=e.stateMutability==="payable",t.payable!=null&&!!t.payable!==e.payable&&le.throwArgumentError("cannot have payable function with mutability "+e.stateMutability,"value",t)):t.payable!=null?(e.payable=!!t.payable,t.constant==null&&!e.payable&&t.type!=="constructor"&&le.throwArgumentError("unable to determine stateMutability","value",t),e.constant=!!t.constant,e.constant?e.stateMutability="view":e.stateMutability=e.payable?"payable":"nonpayable",e.payable&&e.constant&&le.throwArgumentError("cannot have constant payable function","value",t)):t.constant!=null?(e.constant=!!t.constant,e.payable=!e.constant,e.stateMutability=e.constant?"view":"payable"):t.type!=="constructor"&&le.throwArgumentError("unable to determine stateMutability","value",t),e}var wo=function(t){xo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.prototype.format=function(r){if(r||(r=ee.FormatTypes.sighash),ee.FormatTypes[r]||le.throwArgumentError("invalid format type","format",r),r===ee.FormatTypes.json)return JSON.stringify({type:"constructor",stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(function(i){return JSON.parse(i.format(r))})});r===ee.FormatTypes.sighash&&le.throwError("cannot format a constructor for sighash",Ao.Logger.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});var n="constructor("+this.inputs.map(function(i){return i.format(r)}).join(r===ee.FormatTypes.full?", ":",")+") ";return this.stateMutability&&this.stateMutability!=="nonpayable"&&(n+=this.stateMutability+" "),n.trim()},e.from=function(r){return typeof r=="string"?e.fromString(r):e.fromObject(r)},e.fromObject=function(r){if(e.isConstructorFragment(r))return r;r.type!=="constructor"&&le.throwArgumentError("invalid constructor object","value",r);var n=Tl(r);n.constant&&le.throwArgumentError("constructor cannot be constant","value",r);var i={name:null,type:r.type,inputs:r.inputs?r.inputs.map(Qr.fromObject):[],payable:n.payable,stateMutability:n.stateMutability,gas:r.gas?Ba.BigNumber.from(r.gas):null};return new e(Kr,i)},e.fromString=function(r){var n={type:"constructor"};r=Ol(r,n);var i=r.match(wi);return(!i||i[1].trim()!=="constructor")&&le.throwArgumentError("invalid constructor string","value",r),n.inputs=bi(i[2].trim(),!1),El(i[3].trim(),n),e.fromObject(n)},e.isConstructorFragment=function(r){return r&&r._isFragment&&r.type==="constructor"},e}(Po);ee.ConstructorFragment=wo;var ja=function(t){xo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.prototype.format=function(r){if(r||(r=ee.FormatTypes.sighash),ee.FormatTypes[r]||le.throwArgumentError("invalid format type","format",r),r===ee.FormatTypes.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(function(i){return JSON.parse(i.format(r))}),outputs:this.outputs.map(function(i){return JSON.parse(i.format(r))})});var n="";return r!==ee.FormatTypes.sighash&&(n+="function "),n+=this.name+"("+this.inputs.map(function(i){return i.format(r)}).join(r===ee.FormatTypes.full?", ":",")+") ",r!==ee.FormatTypes.sighash&&(this.stateMutability?this.stateMutability!=="nonpayable"&&(n+=this.stateMutability+" "):this.constant&&(n+="view "),this.outputs&&this.outputs.length&&(n+="returns ("+this.outputs.map(function(i){return i.format(r)}).join(", ")+") "),this.gas!=null&&(n+="@"+this.gas.toString()+" ")),n.trim()},e.from=function(r){return typeof r=="string"?e.fromString(r):e.fromObject(r)},e.fromObject=function(r){if(e.isFunctionFragment(r))return r;r.type!=="function"&&le.throwArgumentError("invalid function object","value",r);var n=Tl(r),i={type:r.type,name:gi(r.name),constant:n.constant,inputs:r.inputs?r.inputs.map(Qr.fromObject):[],outputs:r.outputs?r.outputs.map(Qr.fromObject):[],payable:n.payable,stateMutability:n.stateMutability,gas:r.gas?Ba.BigNumber.from(r.gas):null};return new e(Kr,i)},e.fromString=function(r){var n={type:"function"};r=Ol(r,n);var i=r.split(" returns ");i.length>2&&le.throwArgumentError("invalid function string","value",r);var o=i[0].match(wi);if(o||le.throwArgumentError("invalid function signature","value",r),n.name=o[1].trim(),n.name&&gi(n.name),n.inputs=bi(o[2],!1),El(o[3].trim(),n),i.length>1){var s=i[1].match(wi);(s[1].trim()!=""||s[3].trim()!="")&&le.throwArgumentError("unexpected tokens","value",r),n.outputs=bi(s[2],!1)}else n.outputs=[];return e.fromObject(n)},e.isFunctionFragment=function(r){return r&&r._isFragment&&r.type==="function"},e}(wo);ee.FunctionFragment=ja;function Pl(t){var e=t.format();return(e==="Error(string)"||e==="Panic(uint256)")&&le.throwArgumentError("cannot specify user defined "+e+" error","fragment",t),t}var Sa=function(t){xo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.prototype.format=function(r){if(r||(r=ee.FormatTypes.sighash),ee.FormatTypes[r]||le.throwArgumentError("invalid format type","format",r),r===ee.FormatTypes.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(function(i){return JSON.parse(i.format(r))})});var n="";return r!==ee.FormatTypes.sighash&&(n+="error "),n+=this.name+"("+this.inputs.map(function(i){return i.format(r)}).join(r===ee.FormatTypes.full?", ":",")+") ",n.trim()},e.from=function(r){return typeof r=="string"?e.fromString(r):e.fromObject(r)},e.fromObject=function(r){if(e.isErrorFragment(r))return r;r.type!=="error"&&le.throwArgumentError("invalid error object","value",r);var n={type:r.type,name:gi(r.name),inputs:r.inputs?r.inputs.map(Qr.fromObject):[]};return Pl(new e(Kr,n))},e.fromString=function(r){var n={type:"error"},i=r.match(wi);return i||le.throwArgumentError("invalid error signature","value",r),n.name=i[1].trim(),n.name&&gi(n.name),n.inputs=bi(i[2],!1),Pl(e.fromObject(n))},e.isErrorFragment=function(r){return r&&r._isFragment&&r.type==="error"},e}(Po);ee.ErrorFragment=Sa;function Mn(t){return t.match(/^uint($|[^1-9])/)?t="uint256"+t.substring(4):t.match(/^int($|[^1-9])/)&&(t="int256"+t.substring(3)),t}var Iy=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function gi(t){return(!t||!t.match(Iy))&&le.throwArgumentError('invalid identifier "'+t+'"',"value",t),t}var wi=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");function qy(t){t=t.trim();for(var e=[],r="",n=0,i=0;i<t.length;i++){var o=t[i];o===","&&n===0?(e.push(r),r=""):(r+=o,o==="("?n++:o===")"&&(n--,n===-1&&le.throwArgumentError("unbalanced parenthesis","value",t)))}return r&&e.push(r),e}});var St=B(Kt=>{"use strict";Object.defineProperty(Kt,"__esModule",{value:!0});Kt.Reader=Kt.Writer=Kt.Coder=Kt.checkResultErrors=void 0;var Pr=ut(),Nl=Ar(),xi=Tn(),Ua=gt(),Zy=Nn(),Ra=new Ua.Logger(Zy.version);function Vy(t){var e=[],r=function(n,i){if(Array.isArray(i))for(var o in i){var s=n.slice();s.push(o);try{r(s,i[o])}catch(c){e.push({path:s,error:c})}}};return r([],t),e}Kt.checkResultErrors=Vy;var Gy=function(){function t(e,r,n,i){this.name=e,this.type=r,this.localName=n,this.dynamic=i}return t.prototype._throwError=function(e,r){Ra.throwArgumentError(e,this.localName,r)},t}();Kt.Coder=Gy;var Yy=function(){function t(e){(0,xi.defineReadOnly)(this,"wordSize",e||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(e)}return Object.defineProperty(t.prototype,"data",{get:function(){return(0,Pr.hexConcat)(this._data)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"length",{get:function(){return this._dataLength},enumerable:!1,configurable:!0}),t.prototype._writeData=function(e){return this._data.push(e),this._dataLength+=e.length,e.length},t.prototype.appendWriter=function(e){return this._writeData((0,Pr.concat)(e._data))},t.prototype.writeBytes=function(e){var r=(0,Pr.arrayify)(e),n=r.length%this.wordSize;return n&&(r=(0,Pr.concat)([r,this._padding.slice(n)])),this._writeData(r)},t.prototype._getValue=function(e){var r=(0,Pr.arrayify)(Nl.BigNumber.from(e));return r.length>this.wordSize&&Ra.throwError("value out-of-bounds",Ua.Logger.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:r.length}),r.length%this.wordSize&&(r=(0,Pr.concat)([this._padding.slice(r.length%this.wordSize),r])),r},t.prototype.writeValue=function(e){return this._writeData(this._getValue(e))},t.prototype.writeUpdatableValue=function(){var e=this,r=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,function(n){e._data[r]=e._getValue(n)}},t}();Kt.Writer=Yy;var Wy=function(){function t(e,r,n,i){(0,xi.defineReadOnly)(this,"_data",(0,Pr.arrayify)(e)),(0,xi.defineReadOnly)(this,"wordSize",r||32),(0,xi.defineReadOnly)(this,"_coerceFunc",n),(0,xi.defineReadOnly)(this,"allowLoose",i),this._offset=0}return Object.defineProperty(t.prototype,"data",{get:function(){return(0,Pr.hexlify)(this._data)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"consumed",{get:function(){return this._offset},enumerable:!1,configurable:!0}),t.coerce=function(e,r){var n=e.match("^u?int([0-9]+)$");return n&&parseInt(n[1])<=48&&(r=r.toNumber()),r},t.prototype.coerce=function(e,r){return this._coerceFunc?this._coerceFunc(e,r):t.coerce(e,r)},t.prototype._peekBytes=function(e,r,n){var i=Math.ceil(r/this.wordSize)*this.wordSize;return this._offset+i>this._data.length&&(this.allowLoose&&n&&this._offset+r<=this._data.length?i=r:Ra.throwError("data out-of-bounds",Ua.Logger.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+i})),this._data.slice(this._offset,this._offset+i)},t.prototype.subReader=function(e){return new t(this._data.slice(this._offset+e),this.wordSize,this._coerceFunc,this.allowLoose)},t.prototype.readBytes=function(e,r){var n=this._peekBytes(0,e,!!r);return this._offset+=n.length,n.slice(0,e)},t.prototype.readValue=function(){return Nl.BigNumber.from(this.readBytes(this.wordSize))},t}();Kt.Reader=Wy});var Ml=B((ax,Eo)=>{(function(){"use strict";var t="input is invalid type",e="finalize already called",r=typeof window=="object",n=r?window:{};n.JS_SHA3_NO_WINDOW&&(r=!1);var i=!r&&typeof self=="object",o=!n.JS_SHA3_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;o?n=global:i&&(n=self);var s=!n.JS_SHA3_NO_COMMON_JS&&typeof Eo=="object"&&Eo.exports,c=typeof define=="function"&&define.amd,d=!n.JS_SHA3_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",m="0123456789abcdef".split(""),y=[31,7936,2031616,520093696],A=[4,1024,262144,67108864],M=[1,256,65536,16777216],N=[6,1536,393216,100663296],L=[0,8,16,24],S=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],H=[224,256,384,512],K=[128,256],Q=["hex","buffer","arrayBuffer","array","digest"],_={128:168,256:136};(n.JS_SHA3_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(l){return Object.prototype.toString.call(l)==="[object Array]"}),d&&(n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(l){return typeof l=="object"&&l.buffer&&l.buffer.constructor===ArrayBuffer});for(var re=function(l,E,T){return function(j){return new f(l,E,l).update(j)[T]()}},fe=function(l,E,T){return function(j,R){return new f(l,E,R).update(j)[T]()}},$=function(l,E,T){return function(j,R,G,C){return a["cshake"+l].update(j,R,G,C)[T]()}},pe=function(l,E,T){return function(j,R,G,C){return a["kmac"+l].update(j,R,G,C)[T]()}},Ne=function(l,E,T,j){for(var R=0;R<Q.length;++R){var G=Q[R];l[G]=E(T,j,G)}return l},Ye=function(l,E){var T=re(l,E,"hex");return T.create=function(){return new f(l,E,l)},T.update=function(j){return T.create().update(j)},Ne(T,re,l,E)},nt=function(l,E){var T=fe(l,E,"hex");return T.create=function(j){return new f(l,E,j)},T.update=function(j,R){return T.create(R).update(j)},Ne(T,fe,l,E)},me=function(l,E){var T=_[l],j=$(l,E,"hex");return j.create=function(R,G,C){return!G&&!C?a["shake"+l].create(R):new f(l,E,R).bytepad([G,C],T)},j.update=function(R,G,C,X){return j.create(G,C,X).update(R)},Ne(j,$,l,E)},tt=function(l,E){var T=_[l],j=pe(l,E,"hex");return j.create=function(R,G,C){return new g(l,E,G).bytepad(["KMAC",C],T).bytepad([R],T)},j.update=function(R,G,C,X){return j.create(R,C,X).update(G)},Ne(j,pe,l,E)},w=[{name:"keccak",padding:M,bits:H,createMethod:Ye},{name:"sha3",padding:N,bits:H,createMethod:Ye},{name:"shake",padding:y,bits:K,createMethod:nt},{name:"cshake",padding:A,bits:K,createMethod:me},{name:"kmac",padding:A,bits:K,createMethod:tt}],a={},u=[],h=0;h<w.length;++h)for(var p=w[h],b=p.bits,x=0;x<b.length;++x){var P=p.name+"_"+b[x];if(u.push(P),a[P]=p.createMethod(b[x],p.padding),p.name!=="sha3"){var v=p.name+b[x];u.push(v),a[v]=a[P]}}function f(l,E,T){this.blocks=[],this.s=[],this.padding=E,this.outputBits=T,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(l<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=T>>5,this.extraBytes=(T&31)>>3;for(var j=0;j<50;++j)this.s[j]=0}f.prototype.update=function(l){if(this.finalized)throw new Error(e);var E,T=typeof l;if(T!=="string"){if(T==="object"){if(l===null)throw new Error(t);if(d&&l.constructor===ArrayBuffer)l=new Uint8Array(l);else if(!Array.isArray(l)&&(!d||!ArrayBuffer.isView(l)))throw new Error(t)}else throw new Error(t);E=!0}for(var j=this.blocks,R=this.byteCount,G=l.length,C=this.blockCount,X=0,Me=this.s,Z,ne;X<G;){if(this.reset)for(this.reset=!1,j[0]=this.block,Z=1;Z<C+1;++Z)j[Z]=0;if(E)for(Z=this.start;X<G&&Z<R;++X)j[Z>>2]|=l[X]<<L[Z++&3];else for(Z=this.start;X<G&&Z<R;++X)ne=l.charCodeAt(X),ne<128?j[Z>>2]|=ne<<L[Z++&3]:ne<2048?(j[Z>>2]|=(192|ne>>6)<<L[Z++&3],j[Z>>2]|=(128|ne&63)<<L[Z++&3]):ne<55296||ne>=57344?(j[Z>>2]|=(224|ne>>12)<<L[Z++&3],j[Z>>2]|=(128|ne>>6&63)<<L[Z++&3],j[Z>>2]|=(128|ne&63)<<L[Z++&3]):(ne=65536+((ne&1023)<<10|l.charCodeAt(++X)&1023),j[Z>>2]|=(240|ne>>18)<<L[Z++&3],j[Z>>2]|=(128|ne>>12&63)<<L[Z++&3],j[Z>>2]|=(128|ne>>6&63)<<L[Z++&3],j[Z>>2]|=(128|ne&63)<<L[Z++&3]);if(this.lastByteIndex=Z,Z>=R){for(this.start=Z-R,this.block=j[C],Z=0;Z<C;++Z)Me[Z]^=j[Z];F(Me),this.reset=!0}else this.start=Z}return this},f.prototype.encode=function(l,E){var T=l&255,j=1,R=[T];for(l=l>>8,T=l&255;T>0;)R.unshift(T),l=l>>8,T=l&255,++j;return E?R.push(j):R.unshift(j),this.update(R),R.length},f.prototype.encodeString=function(l){var E,T=typeof l;if(T!=="string"){if(T==="object"){if(l===null)throw new Error(t);if(d&&l.constructor===ArrayBuffer)l=new Uint8Array(l);else if(!Array.isArray(l)&&(!d||!ArrayBuffer.isView(l)))throw new Error(t)}else throw new Error(t);E=!0}var j=0,R=l.length;if(E)j=R;else for(var G=0;G<l.length;++G){var C=l.charCodeAt(G);C<128?j+=1:C<2048?j+=2:C<55296||C>=57344?j+=3:(C=65536+((C&1023)<<10|l.charCodeAt(++G)&1023),j+=4)}return j+=this.encode(j*8),this.update(l),j},f.prototype.bytepad=function(l,E){for(var T=this.encode(E),j=0;j<l.length;++j)T+=this.encodeString(l[j]);var R=E-T%E,G=[];return G.length=R,this.update(G),this},f.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var l=this.blocks,E=this.lastByteIndex,T=this.blockCount,j=this.s;if(l[E>>2]|=this.padding[E&3],this.lastByteIndex===this.byteCount)for(l[0]=l[T],E=1;E<T+1;++E)l[E]=0;for(l[T-1]|=2147483648,E=0;E<T;++E)j[E]^=l[E];F(j)}},f.prototype.toString=f.prototype.hex=function(){this.finalize();for(var l=this.blockCount,E=this.s,T=this.outputBlocks,j=this.extraBytes,R=0,G=0,C="",X;G<T;){for(R=0;R<l&&G<T;++R,++G)X=E[R],C+=m[X>>4&15]+m[X&15]+m[X>>12&15]+m[X>>8&15]+m[X>>20&15]+m[X>>16&15]+m[X>>28&15]+m[X>>24&15];G%l===0&&(F(E),R=0)}return j&&(X=E[R],C+=m[X>>4&15]+m[X&15],j>1&&(C+=m[X>>12&15]+m[X>>8&15]),j>2&&(C+=m[X>>20&15]+m[X>>16&15])),C},f.prototype.arrayBuffer=function(){this.finalize();var l=this.blockCount,E=this.s,T=this.outputBlocks,j=this.extraBytes,R=0,G=0,C=this.outputBits>>3,X;j?X=new ArrayBuffer(T+1<<2):X=new ArrayBuffer(C);for(var Me=new Uint32Array(X);G<T;){for(R=0;R<l&&G<T;++R,++G)Me[G]=E[R];G%l===0&&F(E)}return j&&(Me[R]=E[R],X=X.slice(0,C)),X},f.prototype.buffer=f.prototype.arrayBuffer,f.prototype.digest=f.prototype.array=function(){this.finalize();for(var l=this.blockCount,E=this.s,T=this.outputBlocks,j=this.extraBytes,R=0,G=0,C=[],X,Me;G<T;){for(R=0;R<l&&G<T;++R,++G)X=G<<2,Me=E[R],C[X]=Me&255,C[X+1]=Me>>8&255,C[X+2]=Me>>16&255,C[X+3]=Me>>24&255;G%l===0&&F(E)}return j&&(X=G<<2,Me=E[R],C[X]=Me&255,j>1&&(C[X+1]=Me>>8&255),j>2&&(C[X+2]=Me>>16&255)),C};function g(l,E,T){f.call(this,l,E,T)}g.prototype=new f,g.prototype.finalize=function(){return this.encode(this.outputBits,!0),f.prototype.finalize.call(this)};var F=function(l){var E,T,j,R,G,C,X,Me,Z,ne,rr,xe,Ae,Xt,Pe,Oe,nr,ve,O,k,z,U,Y,oe,V,te,D,W,se,he,ge,Cr,ke,ze,Xr,Le,je,Dr,Se,Be,Hr,Ue,Re,Ir,Fe,Ce,qr,Xe,De,Zr,He,Ie,Vr,qe,Ze,Gr,Ve,Ge,yr,vr,br,gr,wr;for(j=0;j<48;j+=2)R=l[0]^l[10]^l[20]^l[30]^l[40],G=l[1]^l[11]^l[21]^l[31]^l[41],C=l[2]^l[12]^l[22]^l[32]^l[42],X=l[3]^l[13]^l[23]^l[33]^l[43],Me=l[4]^l[14]^l[24]^l[34]^l[44],Z=l[5]^l[15]^l[25]^l[35]^l[45],ne=l[6]^l[16]^l[26]^l[36]^l[46],rr=l[7]^l[17]^l[27]^l[37]^l[47],xe=l[8]^l[18]^l[28]^l[38]^l[48],Ae=l[9]^l[19]^l[29]^l[39]^l[49],E=xe^(C<<1|X>>>31),T=Ae^(X<<1|C>>>31),l[0]^=E,l[1]^=T,l[10]^=E,l[11]^=T,l[20]^=E,l[21]^=T,l[30]^=E,l[31]^=T,l[40]^=E,l[41]^=T,E=R^(Me<<1|Z>>>31),T=G^(Z<<1|Me>>>31),l[2]^=E,l[3]^=T,l[12]^=E,l[13]^=T,l[22]^=E,l[23]^=T,l[32]^=E,l[33]^=T,l[42]^=E,l[43]^=T,E=C^(ne<<1|rr>>>31),T=X^(rr<<1|ne>>>31),l[4]^=E,l[5]^=T,l[14]^=E,l[15]^=T,l[24]^=E,l[25]^=T,l[34]^=E,l[35]^=T,l[44]^=E,l[45]^=T,E=Me^(xe<<1|Ae>>>31),T=Z^(Ae<<1|xe>>>31),l[6]^=E,l[7]^=T,l[16]^=E,l[17]^=T,l[26]^=E,l[27]^=T,l[36]^=E,l[37]^=T,l[46]^=E,l[47]^=T,E=ne^(R<<1|G>>>31),T=rr^(G<<1|R>>>31),l[8]^=E,l[9]^=T,l[18]^=E,l[19]^=T,l[28]^=E,l[29]^=T,l[38]^=E,l[39]^=T,l[48]^=E,l[49]^=T,Xt=l[0],Pe=l[1],Ce=l[11]<<4|l[10]>>>28,qr=l[10]<<4|l[11]>>>28,W=l[20]<<3|l[21]>>>29,se=l[21]<<3|l[20]>>>29,vr=l[31]<<9|l[30]>>>23,br=l[30]<<9|l[31]>>>23,Ue=l[40]<<18|l[41]>>>14,Re=l[41]<<18|l[40]>>>14,ze=l[2]<<1|l[3]>>>31,Xr=l[3]<<1|l[2]>>>31,Oe=l[13]<<12|l[12]>>>20,nr=l[12]<<12|l[13]>>>20,Xe=l[22]<<10|l[23]>>>22,De=l[23]<<10|l[22]>>>22,he=l[33]<<13|l[32]>>>19,ge=l[32]<<13|l[33]>>>19,gr=l[42]<<2|l[43]>>>30,wr=l[43]<<2|l[42]>>>30,qe=l[5]<<30|l[4]>>>2,Ze=l[4]<<30|l[5]>>>2,Le=l[14]<<6|l[15]>>>26,je=l[15]<<6|l[14]>>>26,ve=l[25]<<11|l[24]>>>21,O=l[24]<<11|l[25]>>>21,Zr=l[34]<<15|l[35]>>>17,He=l[35]<<15|l[34]>>>17,Cr=l[45]<<29|l[44]>>>3,ke=l[44]<<29|l[45]>>>3,oe=l[6]<<28|l[7]>>>4,V=l[7]<<28|l[6]>>>4,Gr=l[17]<<23|l[16]>>>9,Ve=l[16]<<23|l[17]>>>9,Dr=l[26]<<25|l[27]>>>7,Se=l[27]<<25|l[26]>>>7,k=l[36]<<21|l[37]>>>11,z=l[37]<<21|l[36]>>>11,Ie=l[47]<<24|l[46]>>>8,Vr=l[46]<<24|l[47]>>>8,Ir=l[8]<<27|l[9]>>>5,Fe=l[9]<<27|l[8]>>>5,te=l[18]<<20|l[19]>>>12,D=l[19]<<20|l[18]>>>12,Ge=l[29]<<7|l[28]>>>25,yr=l[28]<<7|l[29]>>>25,Be=l[38]<<8|l[39]>>>24,Hr=l[39]<<8|l[38]>>>24,U=l[48]<<14|l[49]>>>18,Y=l[49]<<14|l[48]>>>18,l[0]=Xt^~Oe&ve,l[1]=Pe^~nr&O,l[10]=oe^~te&W,l[11]=V^~D&se,l[20]=ze^~Le&Dr,l[21]=Xr^~je&Se,l[30]=Ir^~Ce&Xe,l[31]=Fe^~qr&De,l[40]=qe^~Gr&Ge,l[41]=Ze^~Ve&yr,l[2]=Oe^~ve&k,l[3]=nr^~O&z,l[12]=te^~W&he,l[13]=D^~se&ge,l[22]=Le^~Dr&Be,l[23]=je^~Se&Hr,l[32]=Ce^~Xe&Zr,l[33]=qr^~De&He,l[42]=Gr^~Ge&vr,l[43]=Ve^~yr&br,l[4]=ve^~k&U,l[5]=O^~z&Y,l[14]=W^~he&Cr,l[15]=se^~ge&ke,l[24]=Dr^~Be&Ue,l[25]=Se^~Hr&Re,l[34]=Xe^~Zr&Ie,l[35]=De^~He&Vr,l[44]=Ge^~vr&gr,l[45]=yr^~br&wr,l[6]=k^~U&Xt,l[7]=z^~Y&Pe,l[16]=he^~Cr&oe,l[17]=ge^~ke&V,l[26]=Be^~Ue&ze,l[27]=Hr^~Re&Xr,l[36]=Zr^~Ie&Ir,l[37]=He^~Vr&Fe,l[46]=vr^~gr&qe,l[47]=br^~wr&Ze,l[8]=U^~Xt&Oe,l[9]=Y^~Pe&nr,l[18]=Cr^~oe&te,l[19]=ke^~V&D,l[28]=Ue^~ze&Le,l[29]=Re^~Xr&je,l[38]=Ie^~Ir&Ce,l[39]=Vr^~Fe&qr,l[48]=gr^~qe&Gr,l[49]=wr^~Ze&Ve,l[0]^=S[j],l[1]^=S[j+1]};if(s)Eo.exports=a;else{for(h=0;h<u.length;++h)n[u[h]]=a[u[h]];c&&define(function(){return a})}})()});var Or=B(kn=>{"use strict";var Jy=kn&&kn.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(kn,"__esModule",{value:!0});kn.keccak256=void 0;var Ky=Jy(Ml()),Qy=ut();function _y(t){return"0x"+Ky.default.keccak_256((0,Qy.arrayify)(t))}kn.keccak256=_y});var kl=B(To=>{"use strict";Object.defineProperty(To,"__esModule",{value:!0});To.version=void 0;To.version="rlp/5.7.0"});var Ul=B(zn=>{"use strict";Object.defineProperty(zn,"__esModule",{value:!0});zn.decode=zn.encode=void 0;var _r=ut(),ar=gt(),$y=kl(),Qt=new ar.Logger($y.version);function zl(t){for(var e=[];t;)e.unshift(t&255),t>>=8;return e}function Ll(t,e,r){for(var n=0,i=0;i<r;i++)n=n*256+t[e+i];return n}function Sl(t){if(Array.isArray(t)){var e=[];if(t.forEach(function(o){e=e.concat(Sl(o))}),e.length<=55)return e.unshift(192+e.length),e;var r=zl(e.length);return r.unshift(247+r.length),r.concat(e)}(0,_r.isBytesLike)(t)||Qt.throwArgumentError("RLP object must be BytesLike","object",t);var n=Array.prototype.slice.call((0,_r.arrayify)(t));if(n.length===1&&n[0]<=127)return n;if(n.length<=55)return n.unshift(128+n.length),n;var i=zl(n.length);return i.unshift(183+i.length),i.concat(n)}function ev(t){return(0,_r.hexlify)(Sl(t))}zn.encode=ev;function jl(t,e,r,n){for(var i=[];r<e+1+n;){var o=Bl(t,r);i.push(o.result),r+=o.consumed,r>e+1+n&&Qt.throwError("child data too short",ar.Logger.errors.BUFFER_OVERRUN,{})}return{consumed:1+n,result:i}}function Bl(t,e){if(t.length===0&&Qt.throwError("data too short",ar.Logger.errors.BUFFER_OVERRUN,{}),t[e]>=248){var r=t[e]-247;e+1+r>t.length&&Qt.throwError("data short segment too short",ar.Logger.errors.BUFFER_OVERRUN,{});var n=Ll(t,e+1,r);return e+1+r+n>t.length&&Qt.throwError("data long segment too short",ar.Logger.errors.BUFFER_OVERRUN,{}),jl(t,e,e+1+r,r+n)}else if(t[e]>=192){var i=t[e]-192;return e+1+i>t.length&&Qt.throwError("data array too short",ar.Logger.errors.BUFFER_OVERRUN,{}),jl(t,e,e+1,i)}else if(t[e]>=184){var r=t[e]-183;e+1+r>t.length&&Qt.throwError("data array too short",ar.Logger.errors.BUFFER_OVERRUN,{});var o=Ll(t,e+1,r);e+1+r+o>t.length&&Qt.throwError("data array too short",ar.Logger.errors.BUFFER_OVERRUN,{});var s=(0,_r.hexlify)(t.slice(e+1+r,e+1+r+o));return{consumed:1+r+o,result:s}}else if(t[e]>=128){var c=t[e]-128;e+1+c>t.length&&Qt.throwError("data too short",ar.Logger.errors.BUFFER_OVERRUN,{});var s=(0,_r.hexlify)(t.slice(e+1,e+1+c));return{consumed:1+c,result:s}}return{consumed:1,result:(0,_r.hexlify)(t[e])}}function tv(t){var e=(0,_r.arrayify)(t),r=Bl(e,0);return r.consumed!==e.length&&Qt.throwArgumentError("invalid rlp data","data",t),r.result}zn.decode=tv});var Rl=B(No=>{"use strict";Object.defineProperty(No,"__esModule",{value:!0});No.version=void 0;No.version="address/5.7.0"});var Mo=B(Bt=>{"use strict";Object.defineProperty(Bt,"__esModule",{value:!0});Bt.getCreate2Address=Bt.getContractAddress=Bt.getIcapAddress=Bt.isAddress=Bt.getAddress=void 0;var fr=ut(),Fa=Ar(),Ca=Or(),rv=Ul(),nv=gt(),iv=Rl(),Er=new nv.Logger(iv.version);function Fl(t){(0,fr.isHexString)(t,20)||Er.throwArgumentError("invalid address","address",t),t=t.toLowerCase();for(var e=t.substring(2).split(""),r=new Uint8Array(40),n=0;n<40;n++)r[n]=e[n].charCodeAt(0);for(var i=(0,fr.arrayify)((0,Ca.keccak256)(r)),n=0;n<40;n+=2)i[n>>1]>>4>=8&&(e[n]=e[n].toUpperCase()),(i[n>>1]&15)>=8&&(e[n+1]=e[n+1].toUpperCase());return"0x"+e.join("")}var ov=9007199254740991;function sv(t){return Math.log10?Math.log10(t):Math.log(t)/Math.LN10}var Xa={};for(It=0;It<10;It++)Xa[String(It)]=String(It);var It;for(It=0;It<26;It++)Xa[String.fromCharCode(65+It)]=String(10+It);var It,Cl=Math.floor(sv(ov));function Xl(t){t=t.toUpperCase(),t=t.substring(4)+t.substring(0,2)+"00";for(var e=t.split("").map(function(i){return Xa[i]}).join("");e.length>=Cl;){var r=e.substring(0,Cl);e=parseInt(r,10)%97+e.substring(r.length)}for(var n=String(98-parseInt(e,10)%97);n.length<2;)n="0"+n;return n}function $r(t){var e=null;if(typeof t!="string"&&Er.throwArgumentError("invalid address","address",t),t.match(/^(0x)?[0-9a-fA-F]{40}$/))t.substring(0,2)!=="0x"&&(t="0x"+t),e=Fl(t),t.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&e!==t&&Er.throwArgumentError("bad address checksum","address",t);else if(t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(t.substring(2,4)!==Xl(t)&&Er.throwArgumentError("bad icap checksum","address",t),e=(0,Fa._base36To16)(t.substring(4));e.length<40;)e="0"+e;e=Fl("0x"+e)}else Er.throwArgumentError("invalid address","address",t);return e}Bt.getAddress=$r;function av(t){try{return $r(t),!0}catch{}return!1}Bt.isAddress=av;function fv(t){for(var e=(0,Fa._base16To36)($r(t).substring(2)).toUpperCase();e.length<30;)e="0"+e;return"XE"+Xl("XE00"+e)+e}Bt.getIcapAddress=fv;function uv(t){var e=null;try{e=$r(t.from)}catch{Er.throwArgumentError("missing from address","transaction",t)}var r=(0,fr.stripZeros)((0,fr.arrayify)(Fa.BigNumber.from(t.nonce).toHexString()));return $r((0,fr.hexDataSlice)((0,Ca.keccak256)((0,rv.encode)([e,r])),12))}Bt.getContractAddress=uv;function cv(t,e,r){return(0,fr.hexDataLength)(e)!==32&&Er.throwArgumentError("salt must be 32 bytes","salt",e),(0,fr.hexDataLength)(r)!==32&&Er.throwArgumentError("initCodeHash must be 32 bytes","initCodeHash",r),$r((0,fr.hexDataSlice)((0,Ca.keccak256)((0,fr.concat)(["0xff",$r(t),e,r])),12))}Bt.getCreate2Address=cv});var Hl=B(Ln=>{"use strict";var lv=Ln&&Ln.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Ln,"__esModule",{value:!0});Ln.AddressCoder=void 0;var Dl=Mo(),hv=ut(),dv=St(),pv=function(t){lv(e,t);function e(r){return t.call(this,"address","address",r,!1)||this}return e.prototype.defaultValue=function(){return"0x0000000000000000000000000000000000000000"},e.prototype.encode=function(r,n){try{n=(0,Dl.getAddress)(n)}catch(i){this._throwError(i.message,n)}return r.writeValue(n)},e.prototype.decode=function(r){return(0,Dl.getAddress)((0,hv.hexZeroPad)(r.readValue().toHexString(),20))},e}(dv.Coder);Ln.AddressCoder=pv});var Il=B(jn=>{"use strict";var mv=jn&&jn.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(jn,"__esModule",{value:!0});jn.AnonymousCoder=void 0;var yv=St(),vv=function(t){mv(e,t);function e(r){var n=t.call(this,r.name,r.type,void 0,r.dynamic)||this;return n.coder=r,n}return e.prototype.defaultValue=function(){return this.coder.defaultValue()},e.prototype.encode=function(r,n){return this.coder.encode(r,n)},e.prototype.decode=function(r){return this.coder.decode(r)},e}(yv.Coder);jn.AnonymousCoder=vv});var Ha=B(_t=>{"use strict";var bv=_t&&_t.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(_t,"__esModule",{value:!0});_t.ArrayCoder=_t.unpack=_t.pack=void 0;var Bn=gt(),gv=Nn(),Sn=new Bn.Logger(gv.version),Da=St(),wv=Il();function ql(t,e,r){var n=null;if(Array.isArray(r))n=r;else if(r&&typeof r=="object"){var i={};n=e.map(function(m){var y=m.localName;return y||Sn.throwError("cannot encode object for signature with missing names",Bn.Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:m,value:r}),i[y]&&Sn.throwError("cannot encode object for signature with duplicate names",Bn.Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:m,value:r}),i[y]=!0,r[y]})}else Sn.throwArgumentError("invalid tuple value","tuple",r);e.length!==n.length&&Sn.throwArgumentError("types/value length mismatch","tuple",r);var o=new Da.Writer(t.wordSize),s=new Da.Writer(t.wordSize),c=[];e.forEach(function(m,y){var A=n[y];if(m.dynamic){var M=s.length;m.encode(s,A);var N=o.writeUpdatableValue();c.push(function(L){N(L+M)})}else m.encode(o,A)}),c.forEach(function(m){m(o.length)});var d=t.appendWriter(o);return d+=t.appendWriter(s),d}_t.pack=ql;function Zl(t,e){var r=[],n=t.subReader(0);e.forEach(function(c){var d=null;if(c.dynamic){var m=t.readValue(),y=n.subReader(m.toNumber());try{d=c.decode(y)}catch(A){if(A.code===Bn.Logger.errors.BUFFER_OVERRUN)throw A;d=A,d.baseType=c.name,d.name=c.localName,d.type=c.type}}else try{d=c.decode(t)}catch(A){if(A.code===Bn.Logger.errors.BUFFER_OVERRUN)throw A;d=A,d.baseType=c.name,d.name=c.localName,d.type=c.type}d!=null&&r.push(d)});var i=e.reduce(function(c,d){var m=d.localName;return m&&(c[m]||(c[m]=0),c[m]++),c},{});e.forEach(function(c,d){var m=c.localName;if(!(!m||i[m]!==1)&&(m==="length"&&(m="_length"),r[m]==null)){var y=r[d];y instanceof Error?Object.defineProperty(r,m,{enumerable:!0,get:function(){throw y}}):r[m]=y}});for(var o=function(c){var d=r[c];d instanceof Error&&Object.defineProperty(r,c,{enumerable:!0,get:function(){throw d}})},s=0;s<r.length;s++)o(s);return Object.freeze(r)}_t.unpack=Zl;var xv=function(t){bv(e,t);function e(r,n,i){var o=this,s=r.type+"["+(n>=0?n:"")+"]",c=n===-1||r.dynamic;return o=t.call(this,"array",s,i,c)||this,o.coder=r,o.length=n,o}return e.prototype.defaultValue=function(){for(var r=this.coder.defaultValue(),n=[],i=0;i<this.length;i++)n.push(r);return n},e.prototype.encode=function(r,n){Array.isArray(n)||this._throwError("expected array value",n);var i=this.length;i===-1&&(i=n.length,r.writeValue(n.length)),Sn.checkArgumentCount(n.length,i,"coder array"+(this.localName?" "+this.localName:""));for(var o=[],s=0;s<n.length;s++)o.push(this.coder);return ql(r,o,n)},e.prototype.decode=function(r){var n=this.length;n===-1&&(n=r.readValue().toNumber(),n*32>r._data.length&&Sn.throwError("insufficient data length",Bn.Logger.errors.BUFFER_OVERRUN,{length:r._data.length,count:n}));for(var i=[],o=0;o<n;o++)i.push(new wv.AnonymousCoder(this.coder));return r.coerce(this.name,Zl(r,i))},e}(Da.Coder);_t.ArrayCoder=xv});var Vl=B(Un=>{"use strict";var Av=Un&&Un.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Un,"__esModule",{value:!0});Un.BooleanCoder=void 0;var Pv=St(),Ov=function(t){Av(e,t);function e(r){return t.call(this,"bool","bool",r,!1)||this}return e.prototype.defaultValue=function(){return!1},e.prototype.encode=function(r,n){return r.writeValue(n?1:0)},e.prototype.decode=function(r){return r.coerce(this.type,!r.readValue().isZero())},e}(Pv.Coder);Un.BooleanCoder=Ov});var Ia=B(Tr=>{"use strict";var Gl=Tr&&Tr.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Tr,"__esModule",{value:!0});Tr.BytesCoder=Tr.DynamicBytesCoder=void 0;var Yl=ut(),Ev=St(),Wl=function(t){Gl(e,t);function e(r,n){return t.call(this,r,r,n,!0)||this}return e.prototype.defaultValue=function(){return"0x"},e.prototype.encode=function(r,n){n=(0,Yl.arrayify)(n);var i=r.writeValue(n.length);return i+=r.writeBytes(n),i},e.prototype.decode=function(r){return r.readBytes(r.readValue().toNumber(),!0)},e}(Ev.Coder);Tr.DynamicBytesCoder=Wl;var Tv=function(t){Gl(e,t);function e(r){return t.call(this,"bytes",r)||this}return e.prototype.decode=function(r){return r.coerce(this.name,(0,Yl.hexlify)(t.prototype.decode.call(this,r)))},e}(Wl);Tr.BytesCoder=Tv});var Kl=B(Rn=>{"use strict";var Nv=Rn&&Rn.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Rn,"__esModule",{value:!0});Rn.FixedBytesCoder=void 0;var Jl=ut(),Mv=St(),kv=function(t){Nv(e,t);function e(r,n){var i=this,o="bytes"+String(r);return i=t.call(this,o,o,n,!1)||this,i.size=r,i}return e.prototype.defaultValue=function(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+this.size*2)},e.prototype.encode=function(r,n){var i=(0,Jl.arrayify)(n);return i.length!==this.size&&this._throwError("incorrect data length",n),r.writeBytes(i)},e.prototype.decode=function(r){return r.coerce(this.name,(0,Jl.hexlify)(r.readBytes(this.size)))},e}(Mv.Coder);Rn.FixedBytesCoder=kv});var Ql=B(Fn=>{"use strict";var zv=Fn&&Fn.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Fn,"__esModule",{value:!0});Fn.NullCoder=void 0;var Lv=St(),jv=function(t){zv(e,t);function e(r){return t.call(this,"null","",r,!1)||this}return e.prototype.defaultValue=function(){return null},e.prototype.encode=function(r,n){return n!=null&&this._throwError("not null",n),r.writeBytes([])},e.prototype.decode=function(r){return r.readBytes(0),r.coerce(this.name,null)},e}(Lv.Coder);Fn.NullCoder=jv});var _l=B(ko=>{"use strict";Object.defineProperty(ko,"__esModule",{value:!0});ko.AddressZero=void 0;ko.AddressZero="0x0000000000000000000000000000000000000000"});var $l=B(ct=>{"use strict";Object.defineProperty(ct,"__esModule",{value:!0});ct.MaxInt256=ct.MinInt256=ct.MaxUint256=ct.WeiPerEther=ct.Two=ct.One=ct.Zero=ct.NegativeOne=void 0;var Nr=Ar(),Sv=Nr.BigNumber.from(-1);ct.NegativeOne=Sv;var Bv=Nr.BigNumber.from(0);ct.Zero=Bv;var Uv=Nr.BigNumber.from(1);ct.One=Uv;var Rv=Nr.BigNumber.from(2);ct.Two=Rv;var Fv=Nr.BigNumber.from("1000000000000000000");ct.WeiPerEther=Fv;var Cv=Nr.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");ct.MaxUint256=Cv;var Xv=Nr.BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000");ct.MinInt256=Xv;var Dv=Nr.BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");ct.MaxInt256=Dv});var eh=B(zo=>{"use strict";Object.defineProperty(zo,"__esModule",{value:!0});zo.HashZero=void 0;zo.HashZero="0x0000000000000000000000000000000000000000000000000000000000000000"});var th=B(Lo=>{"use strict";Object.defineProperty(Lo,"__esModule",{value:!0});Lo.EtherSymbol=void 0;Lo.EtherSymbol="\u039E"});var qa=B(We=>{"use strict";Object.defineProperty(We,"__esModule",{value:!0});We.EtherSymbol=We.HashZero=We.MaxInt256=We.MinInt256=We.MaxUint256=We.WeiPerEther=We.Two=We.One=We.Zero=We.NegativeOne=We.AddressZero=void 0;var Hv=_l();Object.defineProperty(We,"AddressZero",{enumerable:!0,get:function(){return Hv.AddressZero}});var Mr=$l();Object.defineProperty(We,"NegativeOne",{enumerable:!0,get:function(){return Mr.NegativeOne}});Object.defineProperty(We,"Zero",{enumerable:!0,get:function(){return Mr.Zero}});Object.defineProperty(We,"One",{enumerable:!0,get:function(){return Mr.One}});Object.defineProperty(We,"Two",{enumerable:!0,get:function(){return Mr.Two}});Object.defineProperty(We,"WeiPerEther",{enumerable:!0,get:function(){return Mr.WeiPerEther}});Object.defineProperty(We,"MaxUint256",{enumerable:!0,get:function(){return Mr.MaxUint256}});Object.defineProperty(We,"MinInt256",{enumerable:!0,get:function(){return Mr.MinInt256}});Object.defineProperty(We,"MaxInt256",{enumerable:!0,get:function(){return Mr.MaxInt256}});var Iv=eh();Object.defineProperty(We,"HashZero",{enumerable:!0,get:function(){return Iv.HashZero}});var qv=th();Object.defineProperty(We,"EtherSymbol",{enumerable:!0,get:function(){return qv.EtherSymbol}})});var rh=B(Cn=>{"use strict";var Zv=Cn&&Cn.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Cn,"__esModule",{value:!0});Cn.NumberCoder=void 0;var Vv=Ar(),jo=qa(),Gv=St(),Yv=function(t){Zv(e,t);function e(r,n,i){var o=this,s=(n?"int":"uint")+r*8;return o=t.call(this,s,s,i,!1)||this,o.size=r,o.signed=n,o}return e.prototype.defaultValue=function(){return 0},e.prototype.encode=function(r,n){var i=Vv.BigNumber.from(n),o=jo.MaxUint256.mask(r.wordSize*8);if(this.signed){var s=o.mask(this.size*8-1);(i.gt(s)||i.lt(s.add(jo.One).mul(jo.NegativeOne)))&&this._throwError("value out-of-bounds",n)}else(i.lt(jo.Zero)||i.gt(o.mask(this.size*8)))&&this._throwError("value out-of-bounds",n);return i=i.toTwos(this.size*8).mask(this.size*8),this.signed&&(i=i.fromTwos(this.size*8).toTwos(8*r.wordSize)),r.writeValue(i)},e.prototype.decode=function(r){var n=r.readValue().mask(this.size*8);return this.signed&&(n=n.fromTwos(this.size*8)),r.coerce(this.name,n)},e}(Gv.Coder);Cn.NumberCoder=Yv});var nh=B(So=>{"use strict";Object.defineProperty(So,"__esModule",{value:!0});So.version=void 0;So.version="strings/5.7.0"});var Uo=B(rt=>{"use strict";Object.defineProperty(rt,"__esModule",{value:!0});rt.toUtf8CodePoints=rt.toUtf8String=rt._toUtf8String=rt._toEscapedUtf8String=rt.toUtf8Bytes=rt.Utf8ErrorFuncs=rt.Utf8ErrorReason=rt.UnicodeNormalizationForm=void 0;var ih=ut(),Wv=gt(),Jv=nh(),oh=new Wv.Logger(Jv.version),Bo;(function(t){t.current="",t.NFC="NFC",t.NFD="NFD",t.NFKC="NFKC",t.NFKD="NFKD"})(Bo=rt.UnicodeNormalizationForm||(rt.UnicodeNormalizationForm={}));var Ut;(function(t){t.UNEXPECTED_CONTINUE="unexpected continuation byte",t.BAD_PREFIX="bad codepoint prefix",t.OVERRUN="string overrun",t.MISSING_CONTINUE="missing continuation byte",t.OUT_OF_RANGE="out of UTF-8 range",t.UTF16_SURROGATE="UTF-16 surrogate",t.OVERLONG="overlong representation"})(Ut=rt.Utf8ErrorReason||(rt.Utf8ErrorReason={}));function Kv(t,e,r,n,i){return oh.throwArgumentError("invalid codepoint at offset "+e+"; "+t,"bytes",r)}function sh(t,e,r,n,i){if(t===Ut.BAD_PREFIX||t===Ut.UNEXPECTED_CONTINUE){for(var o=0,s=e+1;s<r.length&&r[s]>>6===2;s++)o++;return o}return t===Ut.OVERRUN?r.length-e-1:0}function Qv(t,e,r,n,i){return t===Ut.OVERLONG?(n.push(i),0):(n.push(65533),sh(t,e,r,n,i))}rt.Utf8ErrorFuncs=Object.freeze({error:Kv,ignore:sh,replace:Qv});function Va(t,e){e==null&&(e=rt.Utf8ErrorFuncs.error),t=(0,ih.arrayify)(t);for(var r=[],n=0;n<t.length;){var i=t[n++];if(!(i>>7)){r.push(i);continue}var o=null,s=null;if((i&224)===192)o=1,s=127;else if((i&240)===224)o=2,s=2047;else if((i&248)===240)o=3,s=65535;else{(i&192)===128?n+=e(Ut.UNEXPECTED_CONTINUE,n-1,t,r):n+=e(Ut.BAD_PREFIX,n-1,t,r);continue}if(n-1+o>=t.length){n+=e(Ut.OVERRUN,n-1,t,r);continue}for(var c=i&(1<<8-o-1)-1,d=0;d<o;d++){var m=t[n];if((m&192)!=128){n+=e(Ut.MISSING_CONTINUE,n,t,r),c=null;break}c=c<<6|m&63,n++}if(c!==null){if(c>1114111){n+=e(Ut.OUT_OF_RANGE,n-1-o,t,r,c);continue}if(c>=55296&&c<=57343){n+=e(Ut.UTF16_SURROGATE,n-1-o,t,r,c);continue}if(c<=s){n+=e(Ut.OVERLONG,n-1-o,t,r,c);continue}r.push(c)}}return r}function ah(t,e){e===void 0&&(e=Bo.current),e!=Bo.current&&(oh.checkNormalize(),t=t.normalize(e));for(var r=[],n=0;n<t.length;n++){var i=t.charCodeAt(n);if(i<128)r.push(i);else if(i<2048)r.push(i>>6|192),r.push(i&63|128);else if((i&64512)==55296){n++;var o=t.charCodeAt(n);if(n>=t.length||(o&64512)!==56320)throw new Error("invalid utf-8 string");var s=65536+((i&1023)<<10)+(o&1023);r.push(s>>18|240),r.push(s>>12&63|128),r.push(s>>6&63|128),r.push(s&63|128)}else r.push(i>>12|224),r.push(i>>6&63|128),r.push(i&63|128)}return(0,ih.arrayify)(r)}rt.toUtf8Bytes=ah;function Za(t){var e="0000"+t.toString(16);return"\\u"+e.substring(e.length-4)}function _v(t,e){return'"'+Va(t,e).map(function(r){if(r<256){switch(r){case 8:return"\\b";case 9:return"\\t";case 10:return"\\n";case 13:return"\\r";case 34:return'\\"';case 92:return"\\\\"}if(r>=32&&r<127)return String.fromCharCode(r)}return r<=65535?Za(r):(r-=65536,Za((r>>10&1023)+55296)+Za((r&1023)+56320))}).join("")+'"'}rt._toEscapedUtf8String=_v;function fh(t){return t.map(function(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode((e>>10&1023)+55296,(e&1023)+56320))}).join("")}rt._toUtf8String=fh;function $v(t,e){return fh(Va(t,e))}rt.toUtf8String=$v;function e1(t,e){return e===void 0&&(e=Bo.current),Va(ah(t,e))}rt.toUtf8CodePoints=e1});var ch=B(Xn=>{"use strict";Object.defineProperty(Xn,"__esModule",{value:!0});Xn.parseBytes32String=Xn.formatBytes32String=void 0;var t1=qa(),Ga=ut(),uh=Uo();function r1(t){var e=(0,uh.toUtf8Bytes)(t);if(e.length>31)throw new Error("bytes32 string must be less than 32 bytes");return(0,Ga.hexlify)((0,Ga.concat)([e,t1.HashZero]).slice(0,32))}Xn.formatBytes32String=r1;function n1(t){var e=(0,Ga.arrayify)(t);if(e.length!==32)throw new Error("invalid bytes32 - not 32 bytes long");if(e[31]!==0)throw new Error("invalid bytes32 string - no null terminator");for(var r=31;e[r-1]===0;)r--;return(0,uh.toUtf8String)(e.slice(0,r))}Xn.parseBytes32String=n1});var mh=B($t=>{"use strict";Object.defineProperty($t,"__esModule",{value:!0});$t.nameprep=$t._nameprepTableC=$t._nameprepTableB2=$t._nameprepTableA1=void 0;var Ai=Uo();function i1(t){if(t.length%4!==0)throw new Error("bad data");for(var e=[],r=0;r<t.length;r+=4)e.push(parseInt(t.substring(r,r+4),16));return e}function Ya(t,e){e||(e=function(i){return[parseInt(i,16)]});var r=0,n={};return t.split(",").forEach(function(i){var o=i.split(":");r+=parseInt(o[0],16),n[r]=e(o[1])}),n}function lh(t){var e=0;return t.split(",").map(function(r){var n=r.split("-");n.length===1?n[1]="0":n[1]===""&&(n[1]="1");var i=e+parseInt(n[0],16);return e=parseInt(n[1],16),{l:i,h:e}})}function Wa(t,e){for(var r=0,n=0;n<e.length;n++){var i=e[n];if(r+=i.l,t>=r&&t<=r+i.h&&(t-r)%(i.d||1)===0){if(i.e&&i.e.indexOf(t-r)!==-1)continue;return i}}return null}var o1=lh("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),s1="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(function(t){return parseInt(t,16)}),a1=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],f1=Ya("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),u1=Ya("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),c1=Ya("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",i1),l1=lh("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function h1(t){return t.reduce(function(e,r){return r.forEach(function(n){e.push(n)}),e},[])}function hh(t){return!!Wa(t,o1)}$t._nameprepTableA1=hh;function dh(t){var e=Wa(t,a1);if(e)return[t+e.s];var r=f1[t];if(r)return r;var n=u1[t];if(n)return[t+n[0]];var i=c1[t];return i||null}$t._nameprepTableB2=dh;function ph(t){return!!Wa(t,l1)}$t._nameprepTableC=ph;function d1(t){if(t.match(/^[a-z0-9-]*$/i)&&t.length<=59)return t.toLowerCase();var e=(0,Ai.toUtf8CodePoints)(t);e=h1(e.map(function(n){if(s1.indexOf(n)>=0)return[];if(n>=65024&&n<=65039)return[];var i=dh(n);return i||[n]})),e=(0,Ai.toUtf8CodePoints)((0,Ai._toUtf8String)(e),Ai.UnicodeNormalizationForm.NFKC),e.forEach(function(n){if(ph(n))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")}),e.forEach(function(n){if(hh(n))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")});var r=(0,Ai._toUtf8String)(e);if(r.substring(0,1)==="-"||r.substring(2,4)==="--"||r.substring(r.length-1)==="-")throw new Error("invalid hyphen");return r}$t.nameprep=d1});var tn=B($e=>{"use strict";Object.defineProperty($e,"__esModule",{value:!0});$e.nameprep=$e.parseBytes32String=$e.formatBytes32String=$e.UnicodeNormalizationForm=$e.Utf8ErrorReason=$e.Utf8ErrorFuncs=$e.toUtf8String=$e.toUtf8CodePoints=$e.toUtf8Bytes=$e._toEscapedUtf8String=void 0;var yh=ch();Object.defineProperty($e,"formatBytes32String",{enumerable:!0,get:function(){return yh.formatBytes32String}});Object.defineProperty($e,"parseBytes32String",{enumerable:!0,get:function(){return yh.parseBytes32String}});var p1=mh();Object.defineProperty($e,"nameprep",{enumerable:!0,get:function(){return p1.nameprep}});var en=Uo();Object.defineProperty($e,"_toEscapedUtf8String",{enumerable:!0,get:function(){return en._toEscapedUtf8String}});Object.defineProperty($e,"toUtf8Bytes",{enumerable:!0,get:function(){return en.toUtf8Bytes}});Object.defineProperty($e,"toUtf8CodePoints",{enumerable:!0,get:function(){return en.toUtf8CodePoints}});Object.defineProperty($e,"toUtf8String",{enumerable:!0,get:function(){return en.toUtf8String}});Object.defineProperty($e,"UnicodeNormalizationForm",{enumerable:!0,get:function(){return en.UnicodeNormalizationForm}});Object.defineProperty($e,"Utf8ErrorFuncs",{enumerable:!0,get:function(){return en.Utf8ErrorFuncs}});Object.defineProperty($e,"Utf8ErrorReason",{enumerable:!0,get:function(){return en.Utf8ErrorReason}})});var bh=B(Dn=>{"use strict";var m1=Dn&&Dn.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Dn,"__esModule",{value:!0});Dn.StringCoder=void 0;var vh=tn(),y1=Ia(),v1=function(t){m1(e,t);function e(r){return t.call(this,"string",r)||this}return e.prototype.defaultValue=function(){return""},e.prototype.encode=function(r,n){return t.prototype.encode.call(this,r,(0,vh.toUtf8Bytes)(n))},e.prototype.decode=function(r){return(0,vh.toUtf8String)(t.prototype.decode.call(this,r))},e}(y1.DynamicBytesCoder);Dn.StringCoder=v1});var wh=B(Hn=>{"use strict";var b1=Hn&&Hn.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(Hn,"__esModule",{value:!0});Hn.TupleCoder=void 0;var g1=St(),gh=Ha(),w1=function(t){b1(e,t);function e(r,n){var i=this,o=!1,s=[];r.forEach(function(d){d.dynamic&&(o=!0),s.push(d.type)});var c="tuple("+s.join(",")+")";return i=t.call(this,"tuple",c,n,o)||this,i.coders=r,i}return e.prototype.defaultValue=function(){var r=[];this.coders.forEach(function(i){r.push(i.defaultValue())});var n=this.coders.reduce(function(i,o){var s=o.localName;return s&&(i[s]||(i[s]=0),i[s]++),i},{});return this.coders.forEach(function(i,o){var s=i.localName;!s||n[s]!==1||(s==="length"&&(s="_length"),r[s]==null&&(r[s]=r[o]))}),Object.freeze(r)},e.prototype.encode=function(r,n){return(0,gh.pack)(r,this.coders,n)},e.prototype.decode=function(r){return r.coerce(this.name,(0,gh.unpack)(r,this.coders))},e}(g1.Coder);Hn.TupleCoder=w1});var Ka=B(In=>{"use strict";Object.defineProperty(In,"__esModule",{value:!0});In.defaultAbiCoder=In.AbiCoder=void 0;var x1=ut(),A1=Tn(),Ah=gt(),P1=Nn(),Ro=new Ah.Logger(P1.version),xh=St(),O1=Hl(),E1=Ha(),T1=Vl(),N1=Ia(),M1=Kl(),k1=Ql(),z1=rh(),L1=bh(),Fo=wh(),Ja=Oo(),j1=new RegExp(/^bytes([0-9]*)$/),S1=new RegExp(/^(u?int)([0-9]*)$/),Ph=function(){function t(e){(0,A1.defineReadOnly)(this,"coerceFunc",e||null)}return t.prototype._getCoder=function(e){var r=this;switch(e.baseType){case"address":return new O1.AddressCoder(e.name);case"bool":return new T1.BooleanCoder(e.name);case"string":return new L1.StringCoder(e.name);case"bytes":return new N1.BytesCoder(e.name);case"array":return new E1.ArrayCoder(this._getCoder(e.arrayChildren),e.arrayLength,e.name);case"tuple":return new Fo.TupleCoder((e.components||[]).map(function(o){return r._getCoder(o)}),e.name);case"":return new k1.NullCoder(e.name)}var n=e.type.match(S1);if(n){var i=parseInt(n[2]||"256");return(i===0||i>256||i%8!==0)&&Ro.throwArgumentError("invalid "+n[1]+" bit length","param",e),new z1.NumberCoder(i/8,n[1]==="int",e.name)}if(n=e.type.match(j1),n){var i=parseInt(n[1]);return(i===0||i>32)&&Ro.throwArgumentError("invalid bytes length","param",e),new M1.FixedBytesCoder(i,e.name)}return Ro.throwArgumentError("invalid type","type",e.type)},t.prototype._getWordSize=function(){return 32},t.prototype._getReader=function(e,r){return new xh.Reader(e,this._getWordSize(),this.coerceFunc,r)},t.prototype._getWriter=function(){return new xh.Writer(this._getWordSize())},t.prototype.getDefaultValue=function(e){var r=this,n=e.map(function(o){return r._getCoder(Ja.ParamType.from(o))}),i=new Fo.TupleCoder(n,"_");return i.defaultValue()},t.prototype.encode=function(e,r){var n=this;e.length!==r.length&&Ro.throwError("types/values length mismatch",Ah.Logger.errors.INVALID_ARGUMENT,{count:{types:e.length,values:r.length},value:{types:e,values:r}});var i=e.map(function(c){return n._getCoder(Ja.ParamType.from(c))}),o=new Fo.TupleCoder(i,"_"),s=this._getWriter();return o.encode(s,r),s.data},t.prototype.decode=function(e,r,n){var i=this,o=e.map(function(c){return i._getCoder(Ja.ParamType.from(c))}),s=new Fo.TupleCoder(o,"_");return s.decode(this._getReader((0,x1.arrayify)(r),n))},t}();In.AbiCoder=Ph;In.defaultAbiCoder=new Ph});var Qa=B(Co=>{"use strict";Object.defineProperty(Co,"__esModule",{value:!0});Co.id=void 0;var B1=Or(),U1=tn();function R1(t){return(0,B1.keccak256)((0,U1.toUtf8Bytes)(t))}Co.id=R1});var _a=B(Xo=>{"use strict";Object.defineProperty(Xo,"__esModule",{value:!0});Xo.version=void 0;Xo.version="hash/5.7.0"});var Eh=B(qn=>{"use strict";Object.defineProperty(qn,"__esModule",{value:!0});qn.encode=qn.decode=void 0;var Oh=ut();function F1(t){t=atob(t);for(var e=[],r=0;r<t.length;r++)e.push(t.charCodeAt(r));return(0,Oh.arrayify)(e)}qn.decode=F1;function C1(t){t=(0,Oh.arrayify)(t);for(var e="",r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return btoa(e)}qn.encode=C1});var Nh=B(Zn=>{"use strict";Object.defineProperty(Zn,"__esModule",{value:!0});Zn.encode=Zn.decode=void 0;var Th=Eh();Object.defineProperty(Zn,"decode",{enumerable:!0,get:function(){return Th.decode}});Object.defineProperty(Zn,"encode",{enumerable:!0,get:function(){return Th.encode}})});var ef=B(lt=>{"use strict";Object.defineProperty(lt,"__esModule",{value:!0});lt.read_emoji_trie=lt.read_zero_terminated_array=lt.read_mapped_map=lt.read_member_array=lt.signed=lt.read_compressed_payload=lt.read_payload=lt.decode_arithmetic=void 0;function kh(t,e){e==null&&(e=1);var r=[],n=r.forEach,i=function(o,s){n.call(o,function(c){s>0&&Array.isArray(c)?i(c,s-1):r.push(c)})};return i(t,e),r}function X1(t){for(var e={},r=0;r<t.length;r++){var n=t[r];e[n[0]]=n[1]}return e}function zh(t){var e=0;function r(){return t[e++]<<8|t[e++]}for(var n=r(),i=1,o=[0,1],s=1;s<n;s++)o.push(i+=r());var c=r(),d=e;e+=c;var m=0,y=0;function A(){return m==0&&(y=y<<8|t[e++],m=8),y>>--m&1}for(var M=31,N=Math.pow(2,M),L=N>>>1,S=L>>1,H=N-1,K=0,s=0;s<M;s++)K=K<<1|A();for(var Q=[],_=0,re=N;;){for(var fe=Math.floor(((K-_+1)*i-1)/re),$=0,pe=n;pe-$>1;){var Ne=$+pe>>>1;fe<o[Ne]?pe=Ne:$=Ne}if($==0)break;Q.push($);for(var Ye=_+Math.floor(re*o[$]/i),nt=_+Math.floor(re*o[$+1]/i)-1;!((Ye^nt)&L);)K=K<<1&H|A(),Ye=Ye<<1&H,nt=nt<<1&H|1;for(;Ye&~nt&S;)K=K&L|K<<1&H>>>1|A(),Ye=Ye<<1^L,nt=(nt^L)<<1|L|1;_=Ye,re=1+nt-Ye}var me=n-4;return Q.map(function(tt){switch(tt-me){case 3:return me+65792+(t[d++]<<16|t[d++]<<8|t[d++]);case 2:return me+256+(t[d++]<<8|t[d++]);case 1:return me+t[d++];default:return tt-1}})}lt.decode_arithmetic=zh;function Lh(t){var e=0;return function(){return t[e++]}}lt.read_payload=Lh;function D1(t){return Lh(zh(t))}lt.read_compressed_payload=D1;function jh(t){return t&1?~t>>1:t>>1}lt.signed=jh;function H1(t,e){for(var r=Array(t),n=0;n<t;n++)r[n]=1+e();return r}function Mh(t,e){for(var r=Array(t),n=0,i=-1;n<t;n++)r[n]=i+=1+e();return r}function I1(t,e){for(var r=Array(t),n=0,i=0;n<t;n++)r[n]=i+=jh(e());return r}function $a(t,e){for(var r=Mh(t(),t),n=t(),i=Mh(n,t),o=H1(n,t),s=0;s<n;s++)for(var c=0;c<o[s];c++)r.push(i[s]+c);return e?r.map(function(d){return e[d]}):r}lt.read_member_array=$a;function q1(t){for(var e=[];;){var r=t();if(r==0)break;e.push(Z1(r,t))}for(;;){var r=t()-1;if(r<0)break;e.push(V1(r,t))}return X1(kh(e))}lt.read_mapped_map=q1;function Sh(t){for(var e=[];;){var r=t();if(r==0)break;e.push(r)}return e}lt.read_zero_terminated_array=Sh;function Bh(t,e,r){for(var n=Array(t).fill(void 0).map(function(){return[]}),i=0;i<e;i++)I1(t,r).forEach(function(o,s){return n[s].push(o)});return n}function Z1(t,e){var r=1+e(),n=e(),i=Sh(e),o=Bh(i.length,1+t,e);return kh(o.map(function(s,c){var d=s[0],m=s.slice(1);return Array(i[c]).fill(void 0).map(function(y,A){var M=A*n;return[d+A*r,m.map(function(N){return N+M})]})}))}function V1(t,e){var r=1+e(),n=Bh(r,1+t,e);return n.map(function(i){return[i[0],i.slice(1)]})}function G1(t){var e=$a(t).sort(function(n,i){return n-i});return r();function r(){for(var n=[];;){var i=$a(t,e);if(i.length==0)break;n.push({set:new Set(i),node:r()})}n.sort(function(y,A){return A.set.size-y.set.size});var o=t(),s=o%3;o=o/3|0;var c=!!(o&1);o>>=1;var d=o==1,m=o==2;return{branches:n,valid:s,fe0f:c,save:d,check:m}}}lt.read_emoji_trie=G1});var Uh=B(Do=>{"use strict";Object.defineProperty(Do,"__esModule",{value:!0});Do.getData=void 0;var Y1=Nh(),W1=ef();function J1(){return(0,W1.read_compressed_payload)((0,Y1.decode)(""))}Do.getData=J1});var Xh=B(Vn=>{"use strict";Object.defineProperty(Vn,"__esModule",{value:!0});Vn.ens_normalize=Vn.ens_normalize_post_check=void 0;var K1=tn(),Q1=Uh(),Ho=(0,Q1.getData)(),Io=ef(),_1=new Set((0,Io.read_member_array)(Ho)),$1=new Set((0,Io.read_member_array)(Ho)),eb=(0,Io.read_mapped_map)(Ho),tb=(0,Io.read_emoji_trie)(Ho),Rh=45,Fh=95;function Ch(t){return(0,K1.toUtf8CodePoints)(t)}function rb(t){return t.filter(function(e){return e!=65039})}function tf(t){for(var e=0,r=t.split(".");e<r.length;e++){var n=r[e],i=Ch(n);try{for(var o=i.lastIndexOf(Fh)-1;o>=0;o--)if(i[o]!==Fh)throw new Error("underscore only allowed at start");if(i.length>=4&&i.every(function(s){return s<128})&&i[2]===Rh&&i[3]===Rh)throw new Error("invalid label extension")}catch(s){throw new Error('Invalid label "'+n+'": '+s.message)}}return t}Vn.ens_normalize_post_check=tf;function nb(t){return tf(ib(t,rb))}Vn.ens_normalize=nb;function ib(t,e){for(var r=Ch(t).reverse(),n=[];r.length;){var i=sb(r);if(i){n.push.apply(n,e(i));continue}var o=r.pop();if(_1.has(o)){n.push(o);continue}if(!$1.has(o)){var s=eb[o];if(s){n.push.apply(n,s);continue}throw new Error("Disallowed codepoint: 0x"+o.toString(16).toUpperCase())}}return tf(ob(String.fromCodePoint.apply(String,n)))}function ob(t){return t.normalize("NFC")}function sb(t,e){var r,n=tb,i,o,s=[],c=t.length;e&&(e.length=0);for(var d=function(){var y=t[--c];if(n=(r=n.branches.find(function(A){return A.set.has(y)}))===null||r===void 0?void 0:r.node,!n)return"break";if(n.save)o=y;else if(n.check&&y===o)return"break";s.push(y),n.fe0f&&(s.push(65039),c>0&&t[c-1]==65039&&c--),n.valid&&(i=s.slice(),n.valid==2&&i.splice(1,1),e&&e.push.apply(e,t.slice(c).reverse()),t.length=c)};c;){var m=d();if(m==="break")break}return i}});var rf=B(er=>{"use strict";Object.defineProperty(er,"__esModule",{value:!0});er.dnsEncode=er.namehash=er.isValidName=er.ensNormalize=void 0;var qo=ut(),Ih=tn(),Dh=Or(),ab=gt(),fb=_a(),ub=new ab.Logger(fb.version),cb=Xh(),qh=new Uint8Array(32);qh.fill(0);function Hh(t){if(t.length===0)throw new Error("invalid ENS name; empty component");return t}function Zo(t){var e=(0,Ih.toUtf8Bytes)((0,cb.ens_normalize)(t)),r=[];if(t.length===0)return r;for(var n=0,i=0;i<e.length;i++){var o=e[i];o===46&&(r.push(Hh(e.slice(n,i))),n=i+1)}if(n>=e.length)throw new Error("invalid ENS name; empty component");return r.push(Hh(e.slice(n))),r}function lb(t){return Zo(t).map(function(e){return(0,Ih.toUtf8String)(e)}).join(".")}er.ensNormalize=lb;function hb(t){try{return Zo(t).length!==0}catch{}return!1}er.isValidName=hb;function db(t){typeof t!="string"&&ub.throwArgumentError("invalid ENS name; not a string","name",t);for(var e=qh,r=Zo(t);r.length;)e=(0,Dh.keccak256)((0,qo.concat)([e,(0,Dh.keccak256)(r.pop())]));return(0,qo.hexlify)(e)}er.namehash=db;function pb(t){return(0,qo.hexlify)((0,qo.concat)(Zo(t).map(function(e){if(e.length>63)throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");var r=new Uint8Array(e.length+1);return r.set(e,1),r[0]=r.length-1,r})))+"00"}er.dnsEncode=pb});var Zh=B(rn=>{"use strict";Object.defineProperty(rn,"__esModule",{value:!0});rn.hashMessage=rn.messagePrefix=void 0;var mb=ut(),yb=Or(),nf=tn();rn.messagePrefix=`Ethereum Signed Message:
`;function vb(t){return typeof t=="string"&&(t=(0,nf.toUtf8Bytes)(t)),(0,yb.keccak256)((0,mb.concat)([(0,nf.toUtf8Bytes)(rn.messagePrefix),(0,nf.toUtf8Bytes)(String(t.length)),t]))}rn.hashMessage=vb});var $h=B(kr=>{"use strict";var bb=kr&&kr.__awaiter||function(t,e,r,n){function i(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function c(y){try{m(n.next(y))}catch(A){s(A)}}function d(y){try{m(n.throw(y))}catch(A){s(A)}}function m(y){y.done?o(y.value):i(y.value).then(c,d)}m((n=n.apply(t,e||[])).next())})},gb=kr&&kr.__generator||function(t,e){var r={label:0,sent:function(){if(o[0]&1)throw o[1];return o[1]},trys:[],ops:[]},n,i,o,s;return s={next:c(0),throw:c(1),return:c(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function c(m){return function(y){return d([m,y])}}function d(m){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=m[0]&2?i.return:m[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,m[1])).done)return o;switch(i=0,o&&(m=[m[0]&2,o.value]),m[0]){case 0:case 1:o=m;break;case 4:return r.label++,{value:m[1],done:!1};case 5:r.label++,i=m[1],m=[0];continue;case 7:m=r.ops.pop(),r.trys.pop();continue;default:if(o=r.trys,!(o=o.length>0&&o[o.length-1])&&(m[0]===6||m[0]===2)){r=0;continue}if(m[0]===3&&(!o||m[1]>o[0]&&m[1]<o[3])){r.label=m[1];break}if(m[0]===6&&r.label<o[1]){r.label=o[1],o=m;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(m);break}o[2]&&r.ops.pop(),r.trys.pop();continue}m=e.call(t,r)}catch(y){m=[6,y],i=0}finally{n=o=0}if(m[0]&5)throw m[1];return{value:m[0]?m[1]:void 0,done:!0}}};Object.defineProperty(kr,"__esModule",{value:!0});kr.TypedDataEncoder=void 0;var Wh=Mo(),on=Ar(),dt=ut(),Gn=Or(),nn=Tn(),wb=gt(),xb=_a(),Ke=new wb.Logger(xb.version),Jh=Qa(),Kh=new Uint8Array(32);Kh.fill(0);var Ab=on.BigNumber.from(-1),Qh=on.BigNumber.from(0),_h=on.BigNumber.from(1),Pb=on.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function Ob(t){var e=(0,dt.arrayify)(t),r=e.length%32;return r?(0,dt.hexConcat)([e,Kh.slice(r)]):(0,dt.hexlify)(e)}var Eb=(0,dt.hexZeroPad)(_h.toHexString(),32),Tb=(0,dt.hexZeroPad)(Qh.toHexString(),32),Vh={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},of=["name","version","chainId","verifyingContract","salt"];function Gh(t){return function(e){return typeof e!="string"&&Ke.throwArgumentError("invalid domain value for "+JSON.stringify(t),"domain."+t,e),e}}var Nb={name:Gh("name"),version:Gh("version"),chainId:function(t){try{return on.BigNumber.from(t).toString()}catch{}return Ke.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",t)},verifyingContract:function(t){try{return(0,Wh.getAddress)(t).toLowerCase()}catch{}return Ke.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",t)},salt:function(t){try{var e=(0,dt.arrayify)(t);if(e.length!==32)throw new Error("bad length");return(0,dt.hexlify)(e)}catch{}return Ke.throwArgumentError('invalid domain value "salt"',"domain.salt",t)}};function sf(t){{var e=t.match(/^(u?)int(\d*)$/);if(e){var r=e[1]==="",n=parseInt(e[2]||"256");(n%8!==0||n>256||e[2]&&e[2]!==String(n))&&Ke.throwArgumentError("invalid numeric width","type",t);var i=Pb.mask(r?n-1:n),o=r?i.add(_h).mul(Ab):Qh;return function(c){var d=on.BigNumber.from(c);return(d.lt(o)||d.gt(i))&&Ke.throwArgumentError("value out-of-bounds for "+t,"value",c),(0,dt.hexZeroPad)(d.toTwos(256).toHexString(),32)}}}{var e=t.match(/^bytes(\d+)$/);if(e){var s=parseInt(e[1]);return(s===0||s>32||e[1]!==String(s))&&Ke.throwArgumentError("invalid bytes width","type",t),function(d){var m=(0,dt.arrayify)(d);return m.length!==s&&Ke.throwArgumentError("invalid length for "+t,"value",d),Ob(d)}}}switch(t){case"address":return function(c){return(0,dt.hexZeroPad)((0,Wh.getAddress)(c),32)};case"bool":return function(c){return c?Eb:Tb};case"bytes":return function(c){return(0,Gn.keccak256)(c)};case"string":return function(c){return(0,Jh.id)(c)}}return null}function Yh(t,e){return t+"("+e.map(function(r){var n=r.name,i=r.type;return i+" "+n}).join(",")+")"}var Mb=function(){function t(e){(0,nn.defineReadOnly)(this,"types",Object.freeze((0,nn.deepCopy)(e))),(0,nn.defineReadOnly)(this,"_encoderCache",{}),(0,nn.defineReadOnly)(this,"_types",{});var r={},n={},i={};Object.keys(e).forEach(function(A){r[A]={},n[A]=[],i[A]={}});var o=function(A){var M={};e[A].forEach(function(N){M[N.name]&&Ke.throwArgumentError("duplicate variable name "+JSON.stringify(N.name)+" in "+JSON.stringify(A),"types",e),M[N.name]=!0;var L=N.type.match(/^([^\x5b]*)(\x5b|$)/)[1];L===A&&Ke.throwArgumentError("circular type reference to "+JSON.stringify(L),"types",e);var S=sf(L);S||(n[L]||Ke.throwArgumentError("unknown type "+JSON.stringify(L),"types",e),n[L].push(A),r[A][L]=!0)})};for(var s in e)o(s);var c=Object.keys(n).filter(function(A){return n[A].length===0});c.length===0?Ke.throwArgumentError("missing primary type","types",e):c.length>1&&Ke.throwArgumentError("ambiguous primary types or unused types: "+c.map(function(A){return JSON.stringify(A)}).join(", "),"types",e),(0,nn.defineReadOnly)(this,"primaryType",c[0]);function d(A,M){M[A]&&Ke.throwArgumentError("circular type reference to "+JSON.stringify(A),"types",e),M[A]=!0,Object.keys(r[A]).forEach(function(N){n[N]&&(d(N,M),Object.keys(M).forEach(function(L){i[L][N]=!0}))}),delete M[A]}d(this.primaryType,{});for(var m in i){var y=Object.keys(i[m]);y.sort(),this._types[m]=Yh(m,e[m])+y.map(function(A){return Yh(A,e[A])}).join("")}}return t.prototype.getEncoder=function(e){var r=this._encoderCache[e];return r||(r=this._encoderCache[e]=this._getEncoder(e)),r},t.prototype._getEncoder=function(e){var r=this;{var n=sf(e);if(n)return n}var i=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(i){var o=i[1],s=this.getEncoder(o),c=parseInt(i[3]);return function(y){c>=0&&y.length!==c&&Ke.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",y);var A=y.map(s);return r._types[o]&&(A=A.map(Gn.keccak256)),(0,Gn.keccak256)((0,dt.hexConcat)(A))}}var d=this.types[e];if(d){var m=(0,Jh.id)(this._types[e]);return function(y){var A=d.map(function(M){var N=M.name,L=M.type,S=r.getEncoder(L)(y[N]);return r._types[L]?(0,Gn.keccak256)(S):S});return A.unshift(m),(0,dt.hexConcat)(A)}}return Ke.throwArgumentError("unknown type: "+e,"type",e)},t.prototype.encodeType=function(e){var r=this._types[e];return r||Ke.throwArgumentError("unknown type: "+JSON.stringify(e),"name",e),r},t.prototype.encodeData=function(e,r){return this.getEncoder(e)(r)},t.prototype.hashStruct=function(e,r){return(0,Gn.keccak256)(this.encodeData(e,r))},t.prototype.encode=function(e){return this.encodeData(this.primaryType,e)},t.prototype.hash=function(e){return this.hashStruct(this.primaryType,e)},t.prototype._visit=function(e,r,n){var i=this;{var o=sf(e);if(o)return n(e,r)}var s=e.match(/^(.*)(\x5b(\d*)\x5d)$/);if(s){var c=s[1],d=parseInt(s[3]);return d>=0&&r.length!==d&&Ke.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",r),r.map(function(y){return i._visit(c,y,n)})}var m=this.types[e];return m?m.reduce(function(y,A){var M=A.name,N=A.type;return y[M]=i._visit(N,r[M],n),y},{}):Ke.throwArgumentError("unknown type: "+e,"type",e)},t.prototype.visit=function(e,r){return this._visit(this.primaryType,e,r)},t.from=function(e){return new t(e)},t.getPrimaryType=function(e){return t.from(e).primaryType},t.hashStruct=function(e,r,n){return t.from(r).hashStruct(e,n)},t.hashDomain=function(e){var r=[];for(var n in e){var i=Vh[n];i||Ke.throwArgumentError("invalid typed-data domain key: "+JSON.stringify(n),"domain",e),r.push({name:n,type:i})}return r.sort(function(o,s){return of.indexOf(o.name)-of.indexOf(s.name)}),t.hashStruct("EIP712Domain",{EIP712Domain:r},e)},t.encode=function(e,r,n){return(0,dt.hexConcat)(["0x1901",t.hashDomain(e),t.from(r).hash(n)])},t.hash=function(e,r,n){return(0,Gn.keccak256)(t.encode(e,r,n))},t.resolveNames=function(e,r,n,i){return bb(this,void 0,void 0,function(){var o,s,c,d,m,y,A,M;return gb(this,function(N){switch(N.label){case 0:e=(0,nn.shallowCopy)(e),o={},e.verifyingContract&&!(0,dt.isHexString)(e.verifyingContract,20)&&(o[e.verifyingContract]="0x"),s=t.from(r),s.visit(n,function(L,S){return L==="address"&&!(0,dt.isHexString)(S,20)&&(o[S]="0x"),S}),c=[];for(d in o)c.push(d);m=0,N.label=1;case 1:return m<c.length?(y=c[m],A=o,M=y,[4,i(y)]):[3,4];case 2:A[M]=N.sent(),N.label=3;case 3:return m++,[3,1];case 4:return e.verifyingContract&&o[e.verifyingContract]&&(e.verifyingContract=o[e.verifyingContract]),n=s.visit(n,function(L,S){return L==="address"&&o[S]?o[S]:S}),[2,{domain:e,value:n}]}})})},t.getPayload=function(e,r,n){t.hashDomain(e);var i={},o=[];of.forEach(function(d){var m=e[d];m!=null&&(i[d]=Nb[d](m),o.push({name:d,type:Vh[d]}))});var s=t.from(r),c=(0,nn.shallowCopy)(r);return c.EIP712Domain?Ke.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",r):c.EIP712Domain=o,s.encode(n),{types:c,domain:i,primaryType:s.primaryType,message:s.visit(n,function(d,m){if(d.match(/^bytes(\d*)/))return(0,dt.hexlify)((0,dt.arrayify)(m));if(d.match(/^u?int/))return on.BigNumber.from(m).toString();switch(d){case"address":return m.toLowerCase();case"bool":return!!m;case"string":return typeof m!="string"&&Ke.throwArgumentError("invalid string","value",m),m}return Ke.throwArgumentError("unsupported type","type",d)})}},t}();kr.TypedDataEncoder=Mb});var td=B(ht=>{"use strict";Object.defineProperty(ht,"__esModule",{value:!0});ht._TypedDataEncoder=ht.hashMessage=ht.messagePrefix=ht.ensNormalize=ht.isValidName=ht.namehash=ht.dnsEncode=ht.id=void 0;var kb=Qa();Object.defineProperty(ht,"id",{enumerable:!0,get:function(){return kb.id}});var af=rf();Object.defineProperty(ht,"dnsEncode",{enumerable:!0,get:function(){return af.dnsEncode}});Object.defineProperty(ht,"isValidName",{enumerable:!0,get:function(){return af.isValidName}});Object.defineProperty(ht,"namehash",{enumerable:!0,get:function(){return af.namehash}});var ed=Zh();Object.defineProperty(ht,"hashMessage",{enumerable:!0,get:function(){return ed.hashMessage}});Object.defineProperty(ht,"messagePrefix",{enumerable:!0,get:function(){return ed.messagePrefix}});var zb=rf();Object.defineProperty(ht,"ensNormalize",{enumerable:!0,get:function(){return zb.ensNormalize}});var Lb=$h();Object.defineProperty(ht,"_TypedDataEncoder",{enumerable:!0,get:function(){return Lb.TypedDataEncoder}})});var fd=B(vt=>{"use strict";var Yo=vt&&vt.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(n[o]=i[o])},t(e,r)};return function(e,r){if(typeof r!="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();Object.defineProperty(vt,"__esModule",{value:!0});vt.Interface=vt.Indexed=vt.ErrorDescription=vt.TransactionDescription=vt.LogDescription=vt.checkResultErrors=void 0;var jb=Mo(),rd=Ar(),Je=ut(),Vo=td(),nd=Or(),pt=Tn(),Sb=Ka(),Bb=St();Object.defineProperty(vt,"checkResultErrors",{enumerable:!0,get:function(){return Bb.checkResultErrors}});var ur=Oo(),Go=gt(),Ub=Nn(),Qe=new Go.Logger(Ub.version),od=function(t){Yo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e}(pt.Description);vt.LogDescription=od;var sd=function(t){Yo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e}(pt.Description);vt.TransactionDescription=sd;var ad=function(t){Yo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e}(pt.Description);vt.ErrorDescription=ad;var ff=function(t){Yo(e,t);function e(){return t!==null&&t.apply(this,arguments)||this}return e.isIndexed=function(r){return!!(r&&r._isIndexed)},e}(pt.Description);vt.Indexed=ff;var Rb={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:!0},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function id(t,e){var r=new Error("deferred error during ABI decoding triggered accessing "+t);return r.error=e,r}var Fb=function(){function t(e){var r=this.constructor,n=this,i=[];typeof e=="string"?i=JSON.parse(e):i=e,(0,pt.defineReadOnly)(this,"fragments",i.map(function(o){return ur.Fragment.from(o)}).filter(function(o){return o!=null})),(0,pt.defineReadOnly)(this,"_abiCoder",(0,pt.getStatic)(r,"getAbiCoder")()),(0,pt.defineReadOnly)(this,"functions",{}),(0,pt.defineReadOnly)(this,"errors",{}),(0,pt.defineReadOnly)(this,"events",{}),(0,pt.defineReadOnly)(this,"structs",{}),this.fragments.forEach(function(o){var s=null;switch(o.type){case"constructor":if(n.deploy){Qe.warn("duplicate definition - constructor");return}(0,pt.defineReadOnly)(n,"deploy",o);return;case"function":s=n.functions;break;case"event":s=n.events;break;case"error":s=n.errors;break;default:return}var c=o.format();if(s[c]){Qe.warn("duplicate definition - "+c);return}s[c]=o}),this.deploy||(0,pt.defineReadOnly)(this,"deploy",ur.ConstructorFragment.from({payable:!1,type:"constructor"})),(0,pt.defineReadOnly)(this,"_isInterface",!0)}return t.prototype.format=function(e){e||(e=ur.FormatTypes.full),e===ur.FormatTypes.sighash&&Qe.throwArgumentError("interface does not support formatting sighash","format",e);var r=this.fragments.map(function(n){return n.format(e)});return e===ur.FormatTypes.json?JSON.stringify(r.map(function(n){return JSON.parse(n)})):r},t.getAbiCoder=function(){return Sb.defaultAbiCoder},t.getAddress=function(e){return(0,jb.getAddress)(e)},t.getSighash=function(e){return(0,Je.hexDataSlice)((0,Vo.id)(e.format()),0,4)},t.getEventTopic=function(e){return(0,Vo.id)(e.format())},t.prototype.getFunction=function(e){if((0,Je.isHexString)(e)){for(var r in this.functions)if(e===this.getSighash(r))return this.functions[r];Qe.throwArgumentError("no matching function","sighash",e)}if(e.indexOf("(")===-1){var n=e.trim(),i=Object.keys(this.functions).filter(function(s){return s.split("(")[0]===n});return i.length===0?Qe.throwArgumentError("no matching function","name",n):i.length>1&&Qe.throwArgumentError("multiple matching functions","name",n),this.functions[i[0]]}var o=this.functions[ur.FunctionFragment.fromString(e).format()];return o||Qe.throwArgumentError("no matching function","signature",e),o},t.prototype.getEvent=function(e){if((0,Je.isHexString)(e)){var r=e.toLowerCase();for(var n in this.events)if(r===this.getEventTopic(n))return this.events[n];Qe.throwArgumentError("no matching event","topichash",r)}if(e.indexOf("(")===-1){var i=e.trim(),o=Object.keys(this.events).filter(function(c){return c.split("(")[0]===i});return o.length===0?Qe.throwArgumentError("no matching event","name",i):o.length>1&&Qe.throwArgumentError("multiple matching events","name",i),this.events[o[0]]}var s=this.events[ur.EventFragment.fromString(e).format()];return s||Qe.throwArgumentError("no matching event","signature",e),s},t.prototype.getError=function(e){if((0,Je.isHexString)(e)){var r=(0,pt.getStatic)(this.constructor,"getSighash");for(var n in this.errors){var i=this.errors[n];if(e===r(i))return this.errors[n]}Qe.throwArgumentError("no matching error","sighash",e)}if(e.indexOf("(")===-1){var o=e.trim(),s=Object.keys(this.errors).filter(function(d){return d.split("(")[0]===o});return s.length===0?Qe.throwArgumentError("no matching error","name",o):s.length>1&&Qe.throwArgumentError("multiple matching errors","name",o),this.errors[s[0]]}var c=this.errors[ur.FunctionFragment.fromString(e).format()];return c||Qe.throwArgumentError("no matching error","signature",e),c},t.prototype.getSighash=function(e){if(typeof e=="string")try{e=this.getFunction(e)}catch(r){try{e=this.getError(e)}catch{throw r}}return(0,pt.getStatic)(this.constructor,"getSighash")(e)},t.prototype.getEventTopic=function(e){return typeof e=="string"&&(e=this.getEvent(e)),(0,pt.getStatic)(this.constructor,"getEventTopic")(e)},t.prototype._decodeParams=function(e,r){return this._abiCoder.decode(e,r)},t.prototype._encodeParams=function(e,r){return this._abiCoder.encode(e,r)},t.prototype.encodeDeploy=function(e){return this._encodeParams(this.deploy.inputs,e||[])},t.prototype.decodeErrorResult=function(e,r){typeof e=="string"&&(e=this.getError(e));var n=(0,Je.arrayify)(r);return(0,Je.hexlify)(n.slice(0,4))!==this.getSighash(e)&&Qe.throwArgumentError("data signature does not match error "+e.name+".","data",(0,Je.hexlify)(n)),this._decodeParams(e.inputs,n.slice(4))},t.prototype.encodeErrorResult=function(e,r){return typeof e=="string"&&(e=this.getError(e)),(0,Je.hexlify)((0,Je.concat)([this.getSighash(e),this._encodeParams(e.inputs,r||[])]))},t.prototype.decodeFunctionData=function(e,r){typeof e=="string"&&(e=this.getFunction(e));var n=(0,Je.arrayify)(r);return(0,Je.hexlify)(n.slice(0,4))!==this.getSighash(e)&&Qe.throwArgumentError("data signature does not match function "+e.name+".","data",(0,Je.hexlify)(n)),this._decodeParams(e.inputs,n.slice(4))},t.prototype.encodeFunctionData=function(e,r){return typeof e=="string"&&(e=this.getFunction(e)),(0,Je.hexlify)((0,Je.concat)([this.getSighash(e),this._encodeParams(e.inputs,r||[])]))},t.prototype.decodeFunctionResult=function(e,r){typeof e=="string"&&(e=this.getFunction(e));var n=(0,Je.arrayify)(r),i=null,o="",s=null,c=null,d=null;switch(n.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(e.outputs,n)}catch{}break;case 4:{var m=(0,Je.hexlify)(n.slice(0,4)),y=Rb[m];if(y)s=this._abiCoder.decode(y.inputs,n.slice(4)),c=y.name,d=y.signature,y.reason&&(i=s[0]),c==="Error"?o="; VM Exception while processing transaction: reverted with reason string "+JSON.stringify(s[0]):c==="Panic"&&(o="; VM Exception while processing transaction: reverted with panic code "+s[0]);else try{var A=this.getError(m);s=this._abiCoder.decode(A.inputs,n.slice(4)),c=A.name,d=A.format()}catch{}break}}return Qe.throwError("call revert exception"+o,Go.Logger.errors.CALL_EXCEPTION,{method:e.format(),data:(0,Je.hexlify)(r),errorArgs:s,errorName:c,errorSignature:d,reason:i})},t.prototype.encodeFunctionResult=function(e,r){return typeof e=="string"&&(e=this.getFunction(e)),(0,Je.hexlify)(this._abiCoder.encode(e.outputs,r||[]))},t.prototype.encodeFilterTopics=function(e,r){var n=this;typeof e=="string"&&(e=this.getEvent(e)),r.length>e.inputs.length&&Qe.throwError("too many arguments for "+e.format(),Go.Logger.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:r});var i=[];e.anonymous||i.push(this.getEventTopic(e));var o=function(s,c){return s.type==="string"?(0,Vo.id)(c):s.type==="bytes"?(0,nd.keccak256)((0,Je.hexlify)(c)):(s.type==="bool"&&typeof c=="boolean"&&(c=c?"0x01":"0x00"),s.type.match(/^u?int/)&&(c=rd.BigNumber.from(c).toHexString()),s.type==="address"&&n._abiCoder.encode(["address"],[c]),(0,Je.hexZeroPad)((0,Je.hexlify)(c),32))};for(r.forEach(function(s,c){var d=e.inputs[c];if(!d.indexed){s!=null&&Qe.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+d.name,s);return}s==null?i.push(null):d.baseType==="array"||d.baseType==="tuple"?Qe.throwArgumentError("filtering with tuples or arrays not supported","contract."+d.name,s):Array.isArray(s)?i.push(s.map(function(m){return o(d,m)})):i.push(o(d,s))});i.length&&i[i.length-1]===null;)i.pop();return i},t.prototype.encodeEventLog=function(e,r){var n=this;typeof e=="string"&&(e=this.getEvent(e));var i=[],o=[],s=[];return e.anonymous||i.push(this.getEventTopic(e)),r.length!==e.inputs.length&&Qe.throwArgumentError("event arguments/values mismatch","values",r),e.inputs.forEach(function(c,d){var m=r[d];if(c.indexed)if(c.type==="string")i.push((0,Vo.id)(m));else if(c.type==="bytes")i.push((0,nd.keccak256)(m));else{if(c.baseType==="tuple"||c.baseType==="array")throw new Error("not implemented");i.push(n._abiCoder.encode([c.type],[m]))}else o.push(c),s.push(m)}),{data:this._abiCoder.encode(o,s),topics:i}},t.prototype.decodeEventLog=function(e,r,n){if(typeof e=="string"&&(e=this.getEvent(e)),n!=null&&!e.anonymous){var i=this.getEventTopic(e);(!(0,Je.isHexString)(n[0],32)||n[0].toLowerCase()!==i)&&Qe.throwError("fragment/topic mismatch",Go.Logger.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:i,value:n[0]}),n=n.slice(1)}var o=[],s=[],c=[];e.inputs.forEach(function(S,H){S.indexed?S.type==="string"||S.type==="bytes"||S.baseType==="tuple"||S.baseType==="array"?(o.push(ur.ParamType.fromObject({type:"bytes32",name:S.name})),c.push(!0)):(o.push(S),c.push(!1)):(s.push(S),c.push(!1))});var d=n!=null?this._abiCoder.decode(o,(0,Je.concat)(n)):null,m=this._abiCoder.decode(s,r,!0),y=[],A=0,M=0;e.inputs.forEach(function(S,H){if(S.indexed)if(d==null)y[H]=new ff({_isIndexed:!0,hash:null});else if(c[H])y[H]=new ff({_isIndexed:!0,hash:d[M++]});else try{y[H]=d[M++]}catch(Q){y[H]=Q}else try{y[H]=m[A++]}catch(Q){y[H]=Q}if(S.name&&y[S.name]==null){var K=y[H];K instanceof Error?Object.defineProperty(y,S.name,{enumerable:!0,get:function(){throw id("property "+JSON.stringify(S.name),K)}}):y[S.name]=K}});for(var N=function(S){var H=y[S];H instanceof Error&&Object.defineProperty(y,S,{enumerable:!0,get:function(){throw id("index "+S,H)}})},L=0;L<y.length;L++)N(L);return Object.freeze(y)},t.prototype.parseTransaction=function(e){var r=this.getFunction(e.data.substring(0,10).toLowerCase());return r?new sd({args:this._abiCoder.decode(r.inputs,"0x"+e.data.substring(10)),functionFragment:r,name:r.name,signature:r.format(),sighash:this.getSighash(r),value:rd.BigNumber.from(e.value||"0")}):null},t.prototype.parseLog=function(e){var r=this.getEvent(e.topics[0]);return!r||r.anonymous?null:new od({eventFragment:r,name:r.name,signature:r.format(),topic:this.getEventTopic(r),args:this.decodeEventLog(r,e.data,e.topics)})},t.prototype.parseError=function(e){var r=(0,Je.hexlify)(e),n=this.getError(r.substring(0,10).toLowerCase());return n?new ad({args:this._abiCoder.decode(n.inputs,"0x"+r.substring(10)),errorFragment:n,name:n.name,signature:n.format(),sighash:this.getSighash(n)}):null},t.isInterface=function(e){return!!(e&&e._isInterface)},t}();vt.Interface=Fb});var cd=B(ye=>{"use strict";Object.defineProperty(ye,"__esModule",{value:!0});ye.TransactionDescription=ye.LogDescription=ye.checkResultErrors=ye.Indexed=ye.Interface=ye.defaultAbiCoder=ye.AbiCoder=ye.FormatTypes=ye.ParamType=ye.FunctionFragment=ye.Fragment=ye.EventFragment=ye.ErrorFragment=ye.ConstructorFragment=void 0;var sn=Oo();Object.defineProperty(ye,"ConstructorFragment",{enumerable:!0,get:function(){return sn.ConstructorFragment}});Object.defineProperty(ye,"ErrorFragment",{enumerable:!0,get:function(){return sn.ErrorFragment}});Object.defineProperty(ye,"EventFragment",{enumerable:!0,get:function(){return sn.EventFragment}});Object.defineProperty(ye,"FormatTypes",{enumerable:!0,get:function(){return sn.FormatTypes}});Object.defineProperty(ye,"Fragment",{enumerable:!0,get:function(){return sn.Fragment}});Object.defineProperty(ye,"FunctionFragment",{enumerable:!0,get:function(){return sn.FunctionFragment}});Object.defineProperty(ye,"ParamType",{enumerable:!0,get:function(){return sn.ParamType}});var ud=Ka();Object.defineProperty(ye,"AbiCoder",{enumerable:!0,get:function(){return ud.AbiCoder}});Object.defineProperty(ye,"defaultAbiCoder",{enumerable:!0,get:function(){return ud.defaultAbiCoder}});var Pi=fd();Object.defineProperty(ye,"checkResultErrors",{enumerable:!0,get:function(){return Pi.checkResultErrors}});Object.defineProperty(ye,"Indexed",{enumerable:!0,get:function(){return Pi.Indexed}});Object.defineProperty(ye,"Interface",{enumerable:!0,get:function(){return Pi.Interface}});Object.defineProperty(ye,"LogDescription",{enumerable:!0,get:function(){return Pi.LogDescription}});Object.defineProperty(ye,"TransactionDescription",{enumerable:!0,get:function(){return Pi.TransactionDescription}})});var ld=B(Wn=>{"use strict";var Cb=Wn&&Wn.__spreadArray||function(t,e,r){if(r||arguments.length===2)for(var n=0,i=e.length,o;n<i;n++)(o||!(n in e))&&(o||(o=Array.prototype.slice.call(e,0,n)),o[n]=e[n]);return t.concat(o||Array.prototype.slice.call(e))};Object.defineProperty(Wn,"__esModule",{value:!0});Wn.Coder=void 0;var et=cd(),Xb=Or(),Db=tn(),Hb=function(){function t(e){Object.defineProperty(this,"abi",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.abi=e}return Object.defineProperty(t.prototype,"getFunctionSelector",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.getFunctionByName(e),n=r?.inputs;if(!n)throw Error;var i=n.map(function(c){return et.ParamType.fromObject(c)}),o=t.getSignature(e,i),s=Yn(o);return s.substring(0,10)}}),Object.defineProperty(t.prototype,"getEventTopic",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.getEventByName(e),n=r?.inputs;if(!n)throw Error;var i=n.map(function(s){return et.ParamType.fromObject(s)}),o=t.getSignature(e,i);return Yn(o)}}),Object.defineProperty(t.prototype,"decodeConstructor",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.getConstructor(),n=r?.inputs;if(!n)throw Error;var i=n.map(function(c){return et.ParamType.fromObject(c)}),o=et.defaultAbiCoder.decode(i,e),s=Wo(o,i);return{inputs:i,values:s}}}),Object.defineProperty(t.prototype,"decodeEvent",{enumerable:!1,configurable:!0,writable:!0,value:function(e,r){var n=this.getEventByTopic(e[0]),i=e.slice(1),o=n?.inputs;if(!o)throw Error;var s=o.map(function(Q){return et.ParamType.fromObject(Q)}),c=s.filter(function(Q){return Q.indexed}),d=c.map(function(Q,_){var re=i[_],fe=et.defaultAbiCoder.decode([Q],re),$=fe[0];return $}),m=s.filter(function(Q){return!Q.indexed}),y=et.defaultAbiCoder.decode(m,r);if(!n.name)throw Error;for(var A=0,M=0,N=[],L=0,S=s;L<S.length;L++){var H=S[L];H.indexed?(N.push(d[A]),A++):(N.push(y[M]),M++)}var K=Wo(N,s);return{name:n.name,inputs:s,values:K}}}),Object.defineProperty(t.prototype,"decodeFunction",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=e.substring(0,10),n=this.getFunctionBySelector(r),i=n?.inputs;if(!i)throw Error;var o=i.map(function(m){return et.ParamType.fromObject(m)}),s="0x".concat(e.substring(10)),c=et.defaultAbiCoder.decode(o,s),d=Wo(c,o);if(!n.name)throw Error;return{name:n.name,inputs:o,values:d}}}),Object.defineProperty(t.prototype,"decodeFunctionOutput",{enumerable:!1,configurable:!0,writable:!0,value:function(e,r){var n=this.getFunctionByName(e),i=n?.outputs;if(!i)throw Error;var o=i.map(function(d){return et.ParamType.fromObject(d)}),s=et.defaultAbiCoder.decode(o,r),c=Wo(s,o);return{name:e,outputs:o,values:c}}}),Object.defineProperty(t.prototype,"encodeConstructor",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.getConstructor(),n=r?.inputs;if(!n)throw Error;var i=n.map(function(s){return et.ParamType.fromObject(s)}),o=uf(e,i);return et.defaultAbiCoder.encode(i,o)}}),Object.defineProperty(t.prototype,"encodeEvent",{enumerable:!1,configurable:!0,writable:!0,value:function(e,r){var n=this.getEventByName(e),i=n?.inputs;if(!i)throw Error;for(var o=i.map(function(Q){return et.ParamType.fromObject(Q)}),s=t.getSignature(e,o),c=Yn(s),d=[],m=[],y=0;y<o.length;y++){var A=o[y],M=r[A.name];A.indexed?d.push(M):m.push(M)}var N=o.filter(function(Q){return Q.indexed}),L=N.map(function(Q,_){return et.defaultAbiCoder.encode([Q],[d[_]])}),S=Cb([c],L,!0),H=o.filter(function(Q){return!Q.indexed}),K=et.defaultAbiCoder.encode(H,m);return{topics:S,data:K}}}),Object.defineProperty(t.prototype,"encodeFunction",{enumerable:!1,configurable:!0,writable:!0,value:function(e,r){var n=this.getFunctionByName(e),i=n?.inputs;if(!i)throw Error;var o=i.map(function(M){return et.ParamType.fromObject(M)}),s=t.getSignature(e,o),c=Yn(s).substring(2,10),d=uf(r,o),m=et.defaultAbiCoder.encode(o,d),y=m.substring(2),A="0x".concat(c).concat(y);return A}}),Object.defineProperty(t.prototype,"encodeFunctionOutput",{enumerable:!1,configurable:!0,writable:!0,value:function(e,r){var n=this.getFunctionByName(e),i=n.outputs;if(!i)throw Error;var o=i.map(function(c){return et.ParamType.fromObject(c)}),s=uf(r,o);return et.defaultAbiCoder.encode(o,s)}}),Object.defineProperty(t.prototype,"getConstructor",{enumerable:!1,configurable:!0,writable:!0,value:function(){var e=this.abi.find(function(r){return r.type==="constructor"});if(!e)throw Error;return e}}),Object.defineProperty(t.prototype,"getFunctionByName",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.abi.find(function(n){return n.type==="function"&&n.name===e});if(!r)throw Error;return r}}),Object.defineProperty(t.prototype,"getFunctionBySelector",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.abi.filter(function(i){return i.type==="function"||i.type==="error"}),n=r.find(function(i){var o=i.name,s=i.inputs;if(!o||!s)return!1;var c=s.map(function(A){return et.ParamType.fromObject(A)}),d=t.getSignature(o,c),m=Yn(d),y=m.substring(0,10);return y===e});if(!n)throw Error;return n}}),Object.defineProperty(t.prototype,"getEventByName",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.abi.find(function(n){return n.type==="event"&&n.name===e});if(!r)throw Error;return r}}),Object.defineProperty(t.prototype,"getEventByTopic",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var r=this.abi.filter(function(i){return i.type==="event"}),n=r.find(function(i){var o=i.name,s=i.inputs;if(!o||!s)return!1;var c=s.map(function(y){return et.ParamType.fromObject(y)}),d=t.getSignature(o,c),m=Yn(d);return m===e});if(!n)throw Error;return n}}),Object.defineProperty(t,"getSignature",{enumerable:!1,configurable:!0,writable:!0,value:function(e,r){for(var n=[],i=0,o=r;i<o.length;i++){var s=o[i];if(s.type.startsWith("tuple")){var c=t.getSignature("",s.components),d=s.type.substring(5),m="".concat(c).concat(d);n.push(m)}else n.push(s.type)}var y=n.join(","),A="".concat(e,"(").concat(y,")");return A}}),t}();Wn.Coder=Hb;function Yn(t){return(0,Xb.keccak256)((0,Db.toUtf8Bytes)(t))}function Wo(t,e){return Object.fromEntries(t.map(function(r,n){var i=e[n];return[i.name,r]}))}function uf(t,e){return e.map(function(r){return t[r.name]})}});var dd=B((Wx,hd)=>{hd.exports=typeof self=="object"?self.FormData:window.FormData});var a0=B((P6,s0)=>{"use strict";function jg(t){if(t.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),r=0;r<e.length;r++)e[r]=255;for(var n=0;n<t.length;n++){var i=t.charAt(n),o=i.charCodeAt(0);if(e[o]!==255)throw new TypeError(i+" is ambiguous");e[o]=n}var s=t.length,c=t.charAt(0),d=Math.log(s)/Math.log(256),m=Math.log(256)/Math.log(s);function y(N){if(N instanceof Uint8Array||(ArrayBuffer.isView(N)?N=new Uint8Array(N.buffer,N.byteOffset,N.byteLength):Array.isArray(N)&&(N=Uint8Array.from(N))),!(N instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(N.length===0)return"";for(var L=0,S=0,H=0,K=N.length;H!==K&&N[H]===0;)H++,L++;for(var Q=(K-H)*m+1>>>0,_=new Uint8Array(Q);H!==K;){for(var re=N[H],fe=0,$=Q-1;(re!==0||fe<S)&&$!==-1;$--,fe++)re+=256*_[$]>>>0,_[$]=re%s>>>0,re=re/s>>>0;if(re!==0)throw new Error("Non-zero carry");S=fe,H++}for(var pe=Q-S;pe!==Q&&_[pe]===0;)pe++;for(var Ne=c.repeat(L);pe<Q;++pe)Ne+=t.charAt(_[pe]);return Ne}function A(N){if(typeof N!="string")throw new TypeError("Expected String");if(N.length===0)return new Uint8Array;for(var L=0,S=0,H=0;N[L]===c;)S++,L++;for(var K=(N.length-L)*d+1>>>0,Q=new Uint8Array(K);N[L];){var _=e[N.charCodeAt(L)];if(_===255)return;for(var re=0,fe=K-1;(_!==0||re<H)&&fe!==-1;fe--,re++)_+=s*Q[fe]>>>0,Q[fe]=_%256>>>0,_=_/256>>>0;if(_!==0)throw new Error("Non-zero carry");H=re,L++}for(var $=K-H;$!==K&&Q[$]===0;)$++;for(var pe=new Uint8Array(S+(K-$)),Ne=S;$!==K;)pe[Ne++]=Q[$++];return pe}function M(N){var L=A(N);if(L)return L;throw new Error("Non-base"+s+" character")}return{encode:y,decodeUnsafe:A,decode:M}}s0.exports=jg});var qf=B(At=>{"use strict";Object.defineProperty(At,"__esModule",{value:!0});At.output=At.exists=At.hash=At.bytes=At.bool=At.number=void 0;function ds(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}At.number=ds;function f0(t){if(typeof t!="boolean")throw new Error(`Expected boolean, not ${t}`)}At.bool=f0;function If(t,...e){if(!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new TypeError(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}At.bytes=If;function u0(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");ds(t.outputLen),ds(t.blockLen)}At.hash=u0;function c0(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}At.exists=c0;function l0(t,e){If(t);let r=e.outputLen;if(t.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}At.output=l0;var Sg={number:ds,bool:f0,bytes:If,hash:u0,exists:c0,output:l0};At.default=Sg});var Gf=B(Ct=>{"use strict";Object.defineProperty(Ct,"__esModule",{value:!0});Ct.add=Ct.toBig=Ct.split=Ct.fromBig=void 0;var ps=BigInt(2**32-1),Zf=BigInt(32);function Vf(t,e=!1){return e?{h:Number(t&ps),l:Number(t>>Zf&ps)}:{h:Number(t>>Zf&ps)|0,l:Number(t&ps)|0}}Ct.fromBig=Vf;function h0(t,e=!1){let r=new Uint32Array(t.length),n=new Uint32Array(t.length);for(let i=0;i<t.length;i++){let{h:o,l:s}=Vf(t[i],e);[r[i],n[i]]=[o,s]}return[r,n]}Ct.split=h0;var Bg=(t,e)=>BigInt(t>>>0)<<Zf|BigInt(e>>>0);Ct.toBig=Bg;var Ug=(t,e,r)=>t>>>r,Rg=(t,e,r)=>t<<32-r|e>>>r,Fg=(t,e,r)=>t>>>r|e<<32-r,Cg=(t,e,r)=>t<<32-r|e>>>r,Xg=(t,e,r)=>t<<64-r|e>>>r-32,Dg=(t,e,r)=>t>>>r-32|e<<64-r,Hg=(t,e)=>e,Ig=(t,e)=>t,qg=(t,e,r)=>t<<r|e>>>32-r,Zg=(t,e,r)=>e<<r|t>>>32-r,Vg=(t,e,r)=>e<<r-32|t>>>64-r,Gg=(t,e,r)=>t<<r-32|e>>>64-r;function d0(t,e,r,n){let i=(e>>>0)+(n>>>0);return{h:t+r+(i/2**32|0)|0,l:i|0}}Ct.add=d0;var Yg=(t,e,r)=>(t>>>0)+(e>>>0)+(r>>>0),Wg=(t,e,r,n)=>e+r+n+(t/2**32|0)|0,Jg=(t,e,r,n)=>(t>>>0)+(e>>>0)+(r>>>0)+(n>>>0),Kg=(t,e,r,n,i)=>e+r+n+i+(t/2**32|0)|0,Qg=(t,e,r,n,i)=>(t>>>0)+(e>>>0)+(r>>>0)+(n>>>0)+(i>>>0),_g=(t,e,r,n,i,o)=>e+r+n+i+o+(t/2**32|0)|0,$g={fromBig:Vf,split:h0,toBig:Ct.toBig,shrSH:Ug,shrSL:Rg,rotrSH:Fg,rotrSL:Cg,rotrBH:Xg,rotrBL:Dg,rotr32H:Hg,rotr32L:Ig,rotlSH:qg,rotlSL:Zg,rotlBH:Vg,rotlBL:Gg,add:d0,add3L:Yg,add3H:Wg,add4L:Jg,add4H:Kg,add5H:_g,add5L:Qg};Ct.default=$g});var p0=B(ms=>{"use strict";Object.defineProperty(ms,"__esModule",{value:!0});ms.crypto=void 0;ms.crypto={node:void 0,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0}});var vs=B(ae=>{"use strict";Object.defineProperty(ae,"__esModule",{value:!0});ae.randomBytes=ae.wrapConstructorWithOpts=ae.wrapConstructor=ae.checkOpts=ae.Hash=ae.concatBytes=ae.toBytes=ae.utf8ToBytes=ae.asyncLoop=ae.nextTick=ae.hexToBytes=ae.bytesToHex=ae.isLE=ae.rotr=ae.createView=ae.u32=ae.u8=void 0;var ys=p0(),ew=t=>new Uint8Array(t.buffer,t.byteOffset,t.byteLength);ae.u8=ew;var tw=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4));ae.u32=tw;var rw=t=>new DataView(t.buffer,t.byteOffset,t.byteLength);ae.createView=rw;var nw=(t,e)=>t<<32-e|t>>>e;ae.rotr=nw;ae.isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!ae.isLE)throw new Error("Non little-endian hardware is not supported");var iw=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function ow(t){if(!(t instanceof Uint8Array))throw new Error("Uint8Array expected");let e="";for(let r=0;r<t.length;r++)e+=iw[t[r]];return e}ae.bytesToHex=ow;function sw(t){if(typeof t!="string")throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex");let e=new Uint8Array(t.length/2);for(let r=0;r<e.length;r++){let n=r*2,i=t.slice(n,n+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");e[r]=o}return e}ae.hexToBytes=sw;var aw=async()=>{};ae.nextTick=aw;async function fw(t,e,r){let n=Date.now();for(let i=0;i<t;i++){r(i);let o=Date.now()-n;o>=0&&o<e||(await(0,ae.nextTick)(),n+=o)}}ae.asyncLoop=fw;function m0(t){if(typeof t!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof t}`);return new TextEncoder().encode(t)}ae.utf8ToBytes=m0;function Wf(t){if(typeof t=="string"&&(t=m0(t)),!(t instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof t})`);return t}ae.toBytes=Wf;function uw(...t){if(!t.every(n=>n instanceof Uint8Array))throw new Error("Uint8Array list expected");if(t.length===1)return t[0];let e=t.reduce((n,i)=>n+i.length,0),r=new Uint8Array(e);for(let n=0,i=0;n<t.length;n++){let o=t[n];r.set(o,i),i+=o.length}return r}ae.concatBytes=uw;var Yf=class{clone(){return this._cloneInto()}};ae.Hash=Yf;var cw=t=>Object.prototype.toString.call(t)==="[object Object]"&&t.constructor===Object;function lw(t,e){if(e!==void 0&&(typeof e!="object"||!cw(e)))throw new TypeError("Options should be object or undefined");return Object.assign(t,e)}ae.checkOpts=lw;function hw(t){let e=n=>t().update(Wf(n)).digest(),r=t();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>t(),e}ae.wrapConstructor=hw;function dw(t){let e=(n,i)=>t(i).update(Wf(n)).digest(),r=t({});return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=n=>t(n),e}ae.wrapConstructorWithOpts=dw;function pw(t=32){if(ys.crypto.web)return ys.crypto.web.getRandomValues(new Uint8Array(t));if(ys.crypto.node)return new Uint8Array(ys.crypto.node.randomBytes(t).buffer);throw new Error("The environment doesn't have randomBytes function")}ae.randomBytes=pw});var P0=B(Te=>{"use strict";Object.defineProperty(Te,"__esModule",{value:!0});Te.shake256=Te.shake128=Te.keccak_512=Te.keccak_384=Te.keccak_256=Te.keccak_224=Te.sha3_512=Te.sha3_384=Te.sha3_256=Te.sha3_224=Te.Keccak=Te.keccakP=void 0;var ei=qf(),Fi=Gf(),Ri=vs(),[b0,g0,w0]=[[],[],[]],mw=BigInt(0),Ui=BigInt(1),yw=BigInt(2),vw=BigInt(7),bw=BigInt(256),gw=BigInt(113);for(let t=0,e=Ui,r=1,n=0;t<24;t++){[r,n]=[n,(2*r+3*n)%5],b0.push(2*(5*n+r)),g0.push((t+1)*(t+2)/2%64);let i=mw;for(let o=0;o<7;o++)e=(e<<Ui^(e>>vw)*gw)%bw,e&yw&&(i^=Ui<<(Ui<<BigInt(o))-Ui);w0.push(i)}var[ww,xw]=Fi.default.split(w0,!0),y0=(t,e,r)=>r>32?Fi.default.rotlBH(t,e,r):Fi.default.rotlSH(t,e,r),v0=(t,e,r)=>r>32?Fi.default.rotlBL(t,e,r):Fi.default.rotlSL(t,e,r);function x0(t,e=24){let r=new Uint32Array(10);for(let n=24-e;n<24;n++){for(let s=0;s<10;s++)r[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){let c=(s+8)%10,d=(s+2)%10,m=r[d],y=r[d+1],A=y0(m,y,1)^r[c],M=v0(m,y,1)^r[c+1];for(let N=0;N<50;N+=10)t[s+N]^=A,t[s+N+1]^=M}let i=t[2],o=t[3];for(let s=0;s<24;s++){let c=g0[s],d=y0(i,o,c),m=v0(i,o,c),y=b0[s];i=t[y],o=t[y+1],t[y]=d,t[y+1]=m}for(let s=0;s<50;s+=10){for(let c=0;c<10;c++)r[c]=t[s+c];for(let c=0;c<10;c++)t[s+c]^=~r[(c+2)%10]&r[(c+4)%10]}t[0]^=ww[n],t[1]^=xw[n]}r.fill(0)}Te.keccakP=x0;var cn=class extends Ri.Hash{constructor(e,r,n,i=!1,o=24){if(super(),this.blockLen=e,this.suffix=r,this.outputLen=n,this.enableXOF=i,this.rounds=o,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,ei.default.number(n),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,Ri.u32)(this.state)}keccak(){x0(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){ei.default.exists(this);let{blockLen:r,state:n}=this;e=(0,Ri.toBytes)(e);let i=e.length;for(let o=0;o<i;){let s=Math.min(r-this.pos,i-o);for(let c=0;c<s;c++)n[this.pos++]^=e[o++];this.pos===r&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:e,suffix:r,pos:n,blockLen:i}=this;e[n]^=r,r&128&&n===i-1&&this.keccak(),e[i-1]^=128,this.keccak()}writeInto(e){ei.default.exists(this,!1),ei.default.bytes(e),this.finish();let r=this.state,{blockLen:n}=this;for(let i=0,o=e.length;i<o;){this.posOut>=n&&this.keccak();let s=Math.min(n-this.posOut,o-i);e.set(r.subarray(this.posOut,this.posOut+s),i),this.posOut+=s,i+=s}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return ei.default.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(ei.default.output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){let{blockLen:r,suffix:n,outputLen:i,rounds:o,enableXOF:s}=this;return e||(e=new cn(r,n,i,s,o)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=o,e.suffix=n,e.outputLen=i,e.enableXOF=s,e.destroyed=this.destroyed,e}};Te.Keccak=cn;var zr=(t,e,r)=>(0,Ri.wrapConstructor)(()=>new cn(e,t,r));Te.sha3_224=zr(6,144,224/8);Te.sha3_256=zr(6,136,256/8);Te.sha3_384=zr(6,104,384/8);Te.sha3_512=zr(6,72,512/8);Te.keccak_224=zr(1,144,224/8);Te.keccak_256=zr(1,136,256/8);Te.keccak_384=zr(1,104,384/8);Te.keccak_512=zr(1,72,512/8);var A0=(t,e,r)=>(0,Ri.wrapConstructorWithOpts)((n={})=>new cn(e,t,n.dkLen===void 0?r:n.dkLen,!0));Te.shake128=A0(31,168,128/8);Te.shake256=A0(31,136,256/8)});var O0=B(ri=>{"use strict";Object.defineProperty(ri,"__esModule",{value:!0});ri.BLAKE2=ri.SIGMA=void 0;var ti=qf(),bs=vs();ri.SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);var Jf=class extends bs.Hash{constructor(e,r,n={},i,o,s){if(super(),this.blockLen=e,this.outputLen=r,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,ti.default.number(e),ti.default.number(r),ti.default.number(i),r<0||r>i)throw new Error("Blake2: outputLen bigger than keyLen");if(n.key!==void 0&&(n.key.length<1||n.key.length>i))throw new Error(`Key should be up 1..${i} byte long or undefined`);if(n.salt!==void 0&&n.salt.length!==o)throw new Error(`Salt should be ${o} byte long or undefined`);if(n.personalization!==void 0&&n.personalization.length!==s)throw new Error(`Personalization should be ${s} byte long or undefined`);this.buffer32=(0,bs.u32)(this.buffer=new Uint8Array(e))}update(e){ti.default.exists(this);let{blockLen:r,buffer:n,buffer32:i}=this;e=(0,bs.toBytes)(e);let o=e.length;for(let s=0;s<o;){this.pos===r&&(this.compress(i,0,!1),this.pos=0);let c=Math.min(r-this.pos,o-s),d=e.byteOffset+s;if(c===r&&!(d%4)&&s+c<o){let m=new Uint32Array(e.buffer,d,Math.floor((o-s)/4));for(let y=0;s+r<o;y+=i.length,s+=r)this.length+=r,this.compress(m,y,!1);continue}n.set(e.subarray(s,s+c),this.pos),this.pos+=c,this.length+=c,s+=c}return this}digestInto(e){ti.default.exists(this),ti.default.output(e,this);let{pos:r,buffer32:n}=this;this.finished=!0,this.buffer.subarray(r).fill(0),this.compress(n,0,!0);let i=(0,bs.u32)(e);this.get().forEach((o,s)=>i[s]=o)}digest(){let{buffer:e,outputLen:r}=this;this.digestInto(e);let n=e.slice(0,r);return this.destroy(),n}_cloneInto(e){let{buffer:r,length:n,finished:i,destroyed:o,outputLen:s,pos:c}=this;return e||(e=new this.constructor({dkLen:s})),e.set(...this.get()),e.length=n,e.finished=i,e.destroyed=o,e.outputLen=s,e.buffer.set(r),e.pos=c,e}};ri.BLAKE2=Jf});var T0=B(gs=>{"use strict";Object.defineProperty(gs,"__esModule",{value:!0});gs.blake2b=void 0;var E0=O0(),Pt=Gf(),ni=vs(),ot=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),I=new Uint32Array(32);function Lr(t,e,r,n,i,o){let s=i[o],c=i[o+1],d=I[2*t],m=I[2*t+1],y=I[2*e],A=I[2*e+1],M=I[2*r],N=I[2*r+1],L=I[2*n],S=I[2*n+1],H=Pt.default.add3L(d,y,s);m=Pt.default.add3H(H,m,A,c),d=H|0,{Dh:S,Dl:L}={Dh:S^m,Dl:L^d},{Dh:S,Dl:L}={Dh:Pt.default.rotr32H(S,L),Dl:Pt.default.rotr32L(S,L)},{h:N,l:M}=Pt.default.add(N,M,S,L),{Bh:A,Bl:y}={Bh:A^N,Bl:y^M},{Bh:A,Bl:y}={Bh:Pt.default.rotrSH(A,y,24),Bl:Pt.default.rotrSL(A,y,24)},I[2*t]=d,I[2*t+1]=m,I[2*e]=y,I[2*e+1]=A,I[2*r]=M,I[2*r+1]=N,I[2*n]=L,I[2*n+1]=S}function jr(t,e,r,n,i,o){let s=i[o],c=i[o+1],d=I[2*t],m=I[2*t+1],y=I[2*e],A=I[2*e+1],M=I[2*r],N=I[2*r+1],L=I[2*n],S=I[2*n+1],H=Pt.default.add3L(d,y,s);m=Pt.default.add3H(H,m,A,c),d=H|0,{Dh:S,Dl:L}={Dh:S^m,Dl:L^d},{Dh:S,Dl:L}={Dh:Pt.default.rotrSH(S,L,16),Dl:Pt.default.rotrSL(S,L,16)},{h:N,l:M}=Pt.default.add(N,M,S,L),{Bh:A,Bl:y}={Bh:A^N,Bl:y^M},{Bh:A,Bl:y}={Bh:Pt.default.rotrBH(A,y,63),Bl:Pt.default.rotrBL(A,y,63)},I[2*t]=d,I[2*t+1]=m,I[2*e]=y,I[2*e+1]=A,I[2*r]=M,I[2*r+1]=N,I[2*n]=L,I[2*n+1]=S}var Kf=class extends E0.BLAKE2{constructor(e={}){super(128,e.dkLen===void 0?64:e.dkLen,e,64,16,16),this.v0l=ot[0]|0,this.v0h=ot[1]|0,this.v1l=ot[2]|0,this.v1h=ot[3]|0,this.v2l=ot[4]|0,this.v2h=ot[5]|0,this.v3l=ot[6]|0,this.v3h=ot[7]|0,this.v4l=ot[8]|0,this.v4h=ot[9]|0,this.v5l=ot[10]|0,this.v5h=ot[11]|0,this.v6l=ot[12]|0,this.v6h=ot[13]|0,this.v7l=ot[14]|0,this.v7h=ot[15]|0;let r=e.key?e.key.length:0;if(this.v0l^=this.outputLen|r<<8|1<<16|1<<24,e.salt){let n=(0,ni.u32)((0,ni.toBytes)(e.salt));this.v4l^=n[0],this.v4h^=n[1],this.v5l^=n[2],this.v5h^=n[3]}if(e.personalization){let n=(0,ni.u32)((0,ni.toBytes)(e.personalization));this.v6l^=n[0],this.v6h^=n[1],this.v7l^=n[2],this.v7h^=n[3]}if(e.key){let n=new Uint8Array(this.blockLen);n.set((0,ni.toBytes)(e.key)),this.update(n)}}get(){let{v0l:e,v0h:r,v1l:n,v1h:i,v2l:o,v2h:s,v3l:c,v3h:d,v4l:m,v4h:y,v5l:A,v5h:M,v6l:N,v6h:L,v7l:S,v7h:H}=this;return[e,r,n,i,o,s,c,d,m,y,A,M,N,L,S,H]}set(e,r,n,i,o,s,c,d,m,y,A,M,N,L,S,H){this.v0l=e|0,this.v0h=r|0,this.v1l=n|0,this.v1h=i|0,this.v2l=o|0,this.v2h=s|0,this.v3l=c|0,this.v3h=d|0,this.v4l=m|0,this.v4h=y|0,this.v5l=A|0,this.v5h=M|0,this.v6l=N|0,this.v6h=L|0,this.v7l=S|0,this.v7h=H|0}compress(e,r,n){this.get().forEach((d,m)=>I[m]=d),I.set(ot,16);let{h:i,l:o}=Pt.default.fromBig(BigInt(this.length));I[24]=ot[8]^o,I[25]=ot[9]^i,n&&(I[28]=~I[28],I[29]=~I[29]);let s=0,c=E0.SIGMA;for(let d=0;d<12;d++)Lr(0,4,8,12,e,r+2*c[s++]),jr(0,4,8,12,e,r+2*c[s++]),Lr(1,5,9,13,e,r+2*c[s++]),jr(1,5,9,13,e,r+2*c[s++]),Lr(2,6,10,14,e,r+2*c[s++]),jr(2,6,10,14,e,r+2*c[s++]),Lr(3,7,11,15,e,r+2*c[s++]),jr(3,7,11,15,e,r+2*c[s++]),Lr(0,5,10,15,e,r+2*c[s++]),jr(0,5,10,15,e,r+2*c[s++]),Lr(1,6,11,12,e,r+2*c[s++]),jr(1,6,11,12,e,r+2*c[s++]),Lr(2,7,8,13,e,r+2*c[s++]),jr(2,7,8,13,e,r+2*c[s++]),Lr(3,4,9,14,e,r+2*c[s++]),jr(3,4,9,14,e,r+2*c[s++]);this.v0l^=I[0]^I[16],this.v0h^=I[1]^I[17],this.v1l^=I[2]^I[18],this.v1h^=I[3]^I[19],this.v2l^=I[4]^I[20],this.v2h^=I[5]^I[21],this.v3l^=I[6]^I[22],this.v3h^=I[7]^I[23],this.v4l^=I[8]^I[24],this.v4h^=I[9]^I[25],this.v5l^=I[10]^I[26],this.v5h^=I[11]^I[27],this.v6l^=I[12]^I[28],this.v6h^=I[13]^I[29],this.v7l^=I[14]^I[30],this.v7h^=I[15]^I[31],I.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};gs.blake2b=(0,ni.wrapConstructorWithOpts)(t=>new Kf(t))});var k0=B((L6,M0)=>{"use strict";var Qf=Object.defineProperty,Aw=Object.getOwnPropertyDescriptor,Pw=Object.getOwnPropertyNames,Ow=Object.prototype.hasOwnProperty,Ew=(t,e)=>{for(var r in e)Qf(t,r,{get:e[r],enumerable:!0})},Tw=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Pw(e))!Ow.call(t,i)&&i!==r&&Qf(t,i,{get:()=>e[i],enumerable:!(n=Aw(e,i))||n.enumerable});return t},Nw=t=>Tw(Qf({},"__esModule",{value:!0}),t),N0={};Ew(N0,{HexString:()=>ii,Utf16:()=>Ci,Utf8:()=>ln,UtfHelpers:()=>Mw});M0.exports=Nw(N0);var ii={fromArray:t=>{if(!(t instanceof Uint8Array)&&!Array.isArray(t))throw new Error(`HexString.fromArray: passed bytes obj is not an Array or Uint8Array: ${typeof t}, ${t}`);return"0x"+(t instanceof Uint8Array?Array.from(t):t).reduce((r,n)=>r+n.toString(16).padStart(2,"0"),"")},fromU8a:t=>ii.fromArray(t),toArray(t){if(typeof t!="string")throw new Error(`HexString.toArray: passed string is not a string: ${typeof t}`);return((t.startsWith("0x")?t.slice(2):t).match(/.{1,2}/g)||[]).map(n=>parseInt(n,16))},toU8a:t=>Uint8Array.from(ii.toArray(t))},ln={stringToU8a(t){let e=new Uint8Array(ln.lengthInBytes(t)),r=0,n=r,i=0,o=0,s=0;for(;s<t.length;)i=t.charCodeAt(s),i<128?e[r++]=i:i<2048?(e[r++]=i>>6|192,e[r++]=i&63|128):(i&64512)===55296&&((o=t.charCodeAt(s+1))&64512)===56320?(i=65536+((i&1023)<<10)+(o&1023),++s,e[r++]=i>>18|240,e[r++]=i>>12&63|128,e[r++]=i>>6&63|128,e[r++]=i&63|128):(e[r++]=i>>12|224,e[r++]=i>>6&63|128,e[r++]=i&63|128),s+=1;let c=r-n;return e},stringToNumberArray(t){return Array.from(ln.stringToU8a(t))},u8aToString(t){let e=0,r=t.length;if(r-e<1)return"";let n="",i=e;for(;i<r;){let o=t[i++];if(o<=127)n+=String.fromCharCode(o);else if(o>=192&&o<224)n+=String.fromCharCode((o&31)<<6|t[i++]&63);else if(o>=224&&o<240)n+=String.fromCharCode((o&15)<<12|(t[i++]&63)<<6|t[i++]&63);else if(o>=240){let s=((o&7)<<18|(t[i++]&63)<<12|(t[i++]&63)<<6|t[i++]&63)-65536;n+=String.fromCharCode(55296+(s>>10)),n+=String.fromCharCode(56320+(s&1023))}}return n},numberArrayToString(t){return ln.u8aToString(Uint8Array.from(t))},stringToHexString(t){return ii.fromU8a(ln.stringToU8a(t))},hexStringToString(t){return ln.u8aToString(ii.toU8a(t))},lengthInBytes(t){let e=0,r=0,n=0;for(;n<t.length;)r=t.charCodeAt(n),r<128?e+=1:r<2048?e+=2:(r&64512)===55296&&(t.charCodeAt(n+1)&64512)===56320?(++n,e+=4):e+=3,n+=1;return e}},Ci={stringToU16a(t){let e=new Uint16Array(Ci.lengthInBytes(t)),r=0;for(;r<t.length;){let n=t.codePointAt(r);n<=65535?e[r++]=n:(n-=65536,e[r++]=(n>>10)+55296,e[r++]=n%1024+56320)}return e},stringToNumberArray(t){return Array.from(Ci.stringToU16a(t))},numberArrayToString(t){let e=0,r=t.length,n="";for(;e<r-1;){let i=t[e],o=t[e+1];if(i>=55296&&i<=57343)if(o>=56320&&o<=57343)n+=String.fromCodePoint((i-55296)*1024+o-56320+65536),e+=2;else throw new Error(`invalid UTF16 sequence: first u16 is ${i}, second u16 is ${o}`);else n+=String.fromCodePoint(i),e+=1}return e<r&&(n+=String.fromCodePoint(t[r-1])),n},u16aToString(t){return Ci.numberArrayToString(t)},lengthInBytes(t){let e=0;for(;e<t.length;)e+=t.codePointAt(e)<=65535?1:2;return e}},Mw={HexString:ii,Utf8:ln,Utf16:Ci}});var G0=B((j6,V0)=>{"use strict";var kw=Object.create,Ps=Object.defineProperty,zw=Object.getOwnPropertyDescriptor,Lw=Object.getOwnPropertyNames,jw=Object.getPrototypeOf,Sw=Object.prototype.hasOwnProperty,Hi=(t,e)=>{for(var r in e)Ps(t,r,{get:e[r],enumerable:!0})},L0=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Lw(e))!Sw.call(t,i)&&i!==r&&Ps(t,i,{get:()=>e[i],enumerable:!(n=zw(e,i))||n.enumerable});return t},Bw=(t,e,r)=>(r=t!=null?kw(jw(t)):{},L0(e||!t||!t.__esModule?Ps(r,"default",{value:t,enumerable:!0}):r,t)),Uw=t=>L0(Ps({},"__esModule",{value:!0}),t),j0={};Hi(j0,{Address:()=>oi,StringUtils:()=>U0,constants:()=>Os});V0.exports=Uw(j0);var oi={};Hi(oi,{Address:()=>Qw,algorithms:()=>eu,collection:()=>X0,compare:()=>q0,constants:()=>Os,extract:()=>H0,is:()=>be,mirror:()=>ou,nesting:()=>D0,normalize:()=>I0,substrate:()=>Z0,validate:()=>zt});var Os={};Hi(Os,{COLLECTION_ADDRESS_PREFIX:()=>$f,NESTING_PREFIX:()=>_f,STATIC_ADDRESSES:()=>Rw});var Rw={contractHelpers:"0x842899ECF380553E8a4de75bF534cdf6fBF64049",collectionHelpers:"0x6C4E9fE1AE37a41E93CEE429e8E1881aBdcbb54F"},_f="0xf8238ccfff8ed887463fd5e0",$f="0x17c4e6453cc49aaaaeaca894e6d9683e",eu={};Hi(eu,{base58:()=>ru,base64:()=>Xw,basex:()=>tu.default,blake2b:()=>B0.blake2b,keccak_256:()=>S0.keccak_256});var tu=Bw(a0()),S0=P0(),B0=T0(),Fw="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",Cw="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",ru=(0,tu.default)(Fw),Xw=(0,tu.default)(Cw),U0={};Hi(U0,{DWORDHexString:()=>hr,HexString:()=>lr.HexString,Utf16:()=>lr.Utf16,Utf8:()=>lr.Utf8});var lr=k0(),hr={_checkU32:t=>{if(typeof t!="number")throw new Error(`Passed number is not a number: ${typeof t}, ${t}`);if(isNaN(t))throw new Error(`Passed number is NaN: ${t}`);if(t<0)throw new Error(`Passed number is less than 0: ${t}`);if(t>4294967295)throw new Error(`Passed number is more than 2**32: ${t}`);if(t!==Math.floor(t))throw new Error(`Passed number is not an integer number: ${t}`);return t},fromNumber:t=>hr._checkU32(t).toString(16).padStart(8,"0"),toNumber:t=>{let e=parseInt(t,16);if(isNaN(e))throw new Error(`Passed string is not hexadecimal: ${t}`);return hr._checkU32(e)}},nu=t=>{let e=t.toLowerCase().replace(/^0x/i,""),r=lr.HexString.fromU8a((0,S0.keccak_256)(e)).replace(/^0x/i,""),n="0x";for(let i=0;i<e.length;i++)n+=parseInt(r[i],16)>7?e[i].toUpperCase():e[i];return n},Di=t=>(zt.ethereumAddress(t),nu(t)),Dw=(t,e)=>{let r=typeof t=="string"?t:t.Ethereum||t.ethereum,n=typeof e=="string"?e:e.Ethereum||e.ethereum;return!r||!n||!be.ethereumAddress(r)||!be.ethereumAddress(n)?!1:r.toLowerCase()===n.toLowerCase()},Hw=t=>(zt.collectionId(t),nu($f+hr.fromNumber(t))),Iw=t=>(zt.collectionAddress(t),hr.toNumber(t.slice(-8))),qw=(t,e)=>(zt.collectionId(t),zt.tokenId(e),nu(_f+hr.fromNumber(t)+hr.fromNumber(e))),Zw=t=>(zt.nestingAddress(t),{collectionId:hr.toNumber(t.slice(-16,-8)),tokenId:hr.toNumber(t.slice(-8))}),R0=(t,e=32)=>(0,B0.blake2b)(t,{dkLen:e}),As=t=>{let e=0,r=0;for(let i=0;i<t.length;i++)r+=t[i].length;let n=new Uint8Array(r);for(let i=0;i<t.length;i++)n.set(t[i],e),e+=t[i].length;return n},Vw=new Uint8Array([83,83,53,56,80,82,69]),F0=t=>R0(As([Vw,t]),64),Gw=(t,e=!1)=>{let r=t[0]&64?2:1,n=r===1?t[0]:(t[0]&63)<<2|t[1]>>6|(t[1]&63)<<8,i=[34+r,35+r].includes(t.length),o=t.length-(i?2:1),s=!1;if(!e){let c=F0(t.subarray(0,o));s=(t[0]&128)===0&&![46,47].includes(t[0])&&(i?t[t.length-2]===c[0]&&t[t.length-1]===c[1]:t[t.length-1]===c[0])}return[s,o,r,n]},xs=(t,e=42)=>iu(dn(t).u8a,e);function iu(t,e=42){let r=typeof t=="string"?lr.HexString.toU8a(t):typeof t=="bigint"?lr.HexString.toU8a(t.toString(16)):t;if(e<0||e>16383||[46,47].includes(e))throw new Error(`ss58Format is not valid, received ${typeof e} "${e}"`);let n=[1,2,4,8,32,33];if(!n.includes(r.length))throw new Error(`key length is not valid, received ${r.length}, valid values are ${n.join(", ")}`);let i=e<64?new Uint8Array([e]):new Uint8Array([(e&252)>>2|64,e>>8|(e&3)<<6]),o=As([i,r]);return ru.encode(As([o,F0(o).subarray(0,[32,33].includes(r.length)?2:1)]))}function dn(t,e,r=-1){let n=null;try{let i=ru.decode(t),o=[3,4,6,10,35,36,37,38];if(!o.includes(i.length))throw n=new Error(`key length is not valid, decoded key length is ${i.length}, valid values are ${o.join(", ")}`),n;let[s,c,d,m]=Gw(i,e);if(!e&&!s)throw n=new Error("Invalid decoded address checksum"),n;if(![-1,m].includes(r))throw n=new Error(`Expected ss58Format ${r}, received ${m}`),n;let y=i.slice(d,c),A=lr.HexString.fromU8a(y);return{u8a:y,hex:A,bigint:BigInt(A),ss58Prefix:m}}catch(i){throw n||new Error(`Decoding ${t}: ${i.message}`)}}var C0=(t,e)=>{let r=typeof t=="string"?t:t.Substrate||t.substrate,n=typeof e=="string"?e:e.Substrate||e.substrate;if(!r||!n)return!1;try{let i=dn(r),o=dn(n);return i.bigint===o.bigint}catch{return!1}},Yw=(t,e)=>{let r=dn(t,e).u8a.subarray(0,20);return Di(lr.HexString.fromU8a(r))},Ww=new Uint8Array([101,118,109,58]),Jw=(t,e=42)=>{zt.ethereumAddress(t);let r=As([Ww,lr.HexString.toU8a(t)]);return iu(R0(r),e)},hn=(t,e=!1)=>{let r=t;if(typeof r=="object"){if(r.hasOwnProperty("Substrate"))return zt.substrateAddress(r.Substrate),{Substrate:e?xs(r.Substrate):r.Substrate};if(r.hasOwnProperty("substrate"))return zt.substrateAddress(r.substrate),{Substrate:e?xs(r.substrate):r.substrate};if(r.hasOwnProperty("Ethereum"))return zt.ethereumAddress(r.Ethereum),{Ethereum:e?Di(r.Ethereum):r.Ethereum};if(r.hasOwnProperty("ethereum"))return zt.ethereumAddress(r.ethereum),{Ethereum:e?Di(r.ethereum):r.ethereum};throw new Error(`Address ${r} is not a valid crossAccountId object (should contain "Substrate"/"substrate" or "Ethereum"/"ethereum" field)`)}if(typeof r=="string"){if(be.substrateAddress(r))return{Substrate:e?xs(r):r};if(be.ethereumAddress(r))return{Ethereum:e?Di(r):r};throw new Error(`Address ${r} is not a valid Substrate or Ethereum address`)}throw new Error(`Address ${r} is not a string or object: ${typeof r}`)},Xi=(t,e=!1)=>{try{return hn(t,e)}catch{return null}},ws=(t,e=!1)=>{let r=hn(t,e);return r.Substrate?r.Substrate:ou.ethereumToSubstrate(r.Ethereum)},z0=(t,e=42)=>{let r=oi.extract.crossAccountId(t);if(r.Ethereum){let n=oi.normalize.ethereumAddress(r.Ethereum);return{...r,address:n,addressSS58:n,isEthereum:!0,isSubstrate:!1,type:"Ethereum"}}else return{...r,address:oi.normalize.substrateAddress(r.Substrate),addressSS58:oi.normalize.substrateAddress(r.Substrate,e),isEthereum:!1,isSubstrate:!0,type:"Substrate"}},Kw=/^0x[a-fA-F0-9]{40}$/,zt={substrateAddress:t=>(dn(t),!0),ethereumAddress:t=>{if(!be.ethereumAddress(t))throw new Error(`address "${t}" is not valid ethereum address`);return!0},collectionAddress:t=>{if(!be.collectionAddress(t))throw new Error(`address ${t} is not a collection address`);return!0},nestingAddress:t=>{if(!be.nestingAddress(t))throw new Error(`address ${t} is not a nesting address`);return!0},collectionId:t=>{if(!be.collectionId(t))throw new Error("collectionId should be a number between 0 and 0xffffffff");return!0},tokenId:t=>{if(!be.tokenId(t))throw new Error("collectionId should be a number between 0 and 0xffffffff");return!0}},be={substrateAddress:t=>{try{return dn(t),!0}catch{return!1}},ethereumAddress:t=>typeof t=="string"&&t.length===42&&!!t.match(Kw),collectionAddress:t=>be.ethereumAddress(t)&&t.toLowerCase().startsWith($f),nestingAddress:t=>be.ethereumAddress(t)&&t.toLowerCase().startsWith(_f),collectionId:t=>!(typeof t!="number"||isNaN(t)||t<0||t>4294967295),tokenId:t=>!(typeof t!="number"||isNaN(t)||t<0||t>4294967295),crossAccountId(t){return be.substrateAddressObject(t)||be.ethereumAddressObject(t)},crossAccountIdUncapitalized(t){return be.substrateAddressObjectUncapitalized(t)||be.ethereumAddressObjectUncapitalized(t)},substrateAddressObject(t){return typeof t=="object"&&typeof t?.Substrate=="string"&&be.substrateAddress(t.Substrate)},ethereumAddressObject(t){return typeof t=="object"&&typeof t?.Ethereum=="string"&&be.ethereumAddress(t.Ethereum)},substrateAddressObjectUncapitalized(t){return typeof t=="object"&&typeof t?.substrate=="string"&&be.substrateAddress(t.substrate)},ethereumAddressObjectUncapitalized(t){return typeof t=="object"&&typeof t?.ethereum=="string"&&be.ethereumAddress(t.ethereum)},substrateAddressInAnyForm(t){return typeof t=="string"?be.substrateAddress(t):typeof t=="object"&&!!t&&(be.substrateAddressObject(t)||be.substrateAddressObjectUncapitalized(t))},ethereumAddressInAnyForm(t){return typeof t=="string"?be.ethereumAddress(t):typeof t=="object"&&!!t&&(be.ethereumAddressObject(t)||be.ethereumAddressObjectUncapitalized(t))},validAddressInAnyForm(t){return be.ethereumAddressInAnyForm(t)||be.substrateAddressInAnyForm(t)}},X0={idToAddress:Hw,addressToId:Iw},D0={idsToAddress:qw,addressToIds:Zw},H0={address:t=>{let e=hn(t);return e.Substrate||e.Ethereum},addressSafe:t=>{let e=Xi(t);return e?e.Substrate||e.Ethereum:null},addressNormalized:t=>{let e=hn(t,!0);return e.Substrate||e.Ethereum},addressNormalizedSafe:t=>{let e=Xi(t,!0);return e?e.Substrate||e.Ethereum:null},addressForScan:t=>{let e=hn(t,!0);return e.Substrate||e.Ethereum.toLowerCase()},addressForScanSafe:t=>{let e=Xi(t,!0);return e?e.Substrate||e.Ethereum.toLowerCase():null},crossAccountId:t=>hn(t),crossAccountIdSafe:t=>Xi(t),crossAccountIdNormalized:t=>hn(t,!0),crossAccountIdNormalizedSafe:t=>Xi(t,!0),substrateOrMirrorIfEthereum:t=>ws(t),substrateOrMirrorIfEthereumSafe:t=>{try{return ws(t)}catch{return null}},substrateOrMirrorIfEthereumNormalized:t=>ws(t,!0),substrateOrMirrorIfEthereumNormalizedSafe:t=>{try{return ws(t,!0)}catch{return null}},enhancedCrossAccountId:(t,e=42)=>z0(t,e),enhancedCrossAccountIdSafe:(t,e=42)=>{try{return z0(t,e)}catch{return null}}},ou={substrateToEthereum:Yw,ethereumToSubstrate:Jw},I0={substrateAddress:xs,ethereumAddress:Di},q0={substrateAddresses:C0,ethereumAddresses:Dw},Z0={encode:iu,decode:dn,compare:C0},Qw={constants:Os,algorithms:eu,is:be,validate:zt,collection:X0,nesting:D0,extract:H0,mirror:ou,normalize:I0,compare:q0,substrate:Z0}});var np=B((S6,su)=>{"use strict";var si=typeof Reflect=="object"?Reflect:null,Y0=si&&typeof si.apply=="function"?si.apply:function(e,r,n){return Function.prototype.apply.call(e,r,n)},Es;si&&typeof si.ownKeys=="function"?Es=si.ownKeys:Object.getOwnPropertySymbols?Es=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Es=function(e){return Object.getOwnPropertyNames(e)};function _w(t){console&&console.warn&&console.warn(t)}var J0=Number.isNaN||function(e){return e!==e};function we(){we.init.call(this)}su.exports=we;su.exports.once=r2;we.EventEmitter=we;we.prototype._events=void 0;we.prototype._eventsCount=0;we.prototype._maxListeners=void 0;var W0=10;function Ts(t){if(typeof t!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}Object.defineProperty(we,"defaultMaxListeners",{enumerable:!0,get:function(){return W0},set:function(t){if(typeof t!="number"||t<0||J0(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");W0=t}});we.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};we.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||J0(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function K0(t){return t._maxListeners===void 0?we.defaultMaxListeners:t._maxListeners}we.prototype.getMaxListeners=function(){return K0(this)};we.prototype.emit=function(e){for(var r=[],n=1;n<arguments.length;n++)r.push(arguments[n]);var i=e==="error",o=this._events;if(o!==void 0)i=i&&o.error===void 0;else if(!i)return!1;if(i){var s;if(r.length>0&&(s=r[0]),s instanceof Error)throw s;var c=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw c.context=s,c}var d=o[e];if(d===void 0)return!1;if(typeof d=="function")Y0(d,this,r);else for(var m=d.length,y=tp(d,m),n=0;n<m;++n)Y0(y[n],this,r);return!0};function Q0(t,e,r,n){var i,o,s;if(Ts(r),o=t._events,o===void 0?(o=t._events=Object.create(null),t._eventsCount=0):(o.newListener!==void 0&&(t.emit("newListener",e,r.listener?r.listener:r),o=t._events),s=o[e]),s===void 0)s=o[e]=r,++t._eventsCount;else if(typeof s=="function"?s=o[e]=n?[r,s]:[s,r]:n?s.unshift(r):s.push(r),i=K0(t),i>0&&s.length>i&&!s.warned){s.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=t,c.type=e,c.count=s.length,_w(c)}return t}we.prototype.addListener=function(e,r){return Q0(this,e,r,!1)};we.prototype.on=we.prototype.addListener;we.prototype.prependListener=function(e,r){return Q0(this,e,r,!0)};function $w(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function _0(t,e,r){var n={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},i=$w.bind(n);return i.listener=r,n.wrapFn=i,i}we.prototype.once=function(e,r){return Ts(r),this.on(e,_0(this,e,r)),this};we.prototype.prependOnceListener=function(e,r){return Ts(r),this.prependListener(e,_0(this,e,r)),this};we.prototype.removeListener=function(e,r){var n,i,o,s,c;if(Ts(r),i=this._events,i===void 0)return this;if(n=i[e],n===void 0)return this;if(n===r||n.listener===r)--this._eventsCount===0?this._events=Object.create(null):(delete i[e],i.removeListener&&this.emit("removeListener",e,n.listener||r));else if(typeof n!="function"){for(o=-1,s=n.length-1;s>=0;s--)if(n[s]===r||n[s].listener===r){c=n[s].listener,o=s;break}if(o<0)return this;o===0?n.shift():e2(n,o),n.length===1&&(i[e]=n[0]),i.removeListener!==void 0&&this.emit("removeListener",e,c||r)}return this};we.prototype.off=we.prototype.removeListener;we.prototype.removeAllListeners=function(e){var r,n,i;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var o=Object.keys(n),s;for(i=0;i<o.length;++i)s=o[i],s!=="removeListener"&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(r=n[e],typeof r=="function")this.removeListener(e,r);else if(r!==void 0)for(i=r.length-1;i>=0;i--)this.removeListener(e,r[i]);return this};function $0(t,e,r){var n=t._events;if(n===void 0)return[];var i=n[e];return i===void 0?[]:typeof i=="function"?r?[i.listener||i]:[i]:r?t2(i):tp(i,i.length)}we.prototype.listeners=function(e){return $0(this,e,!0)};we.prototype.rawListeners=function(e){return $0(this,e,!1)};we.listenerCount=function(t,e){return typeof t.listenerCount=="function"?t.listenerCount(e):ep.call(t,e)};we.prototype.listenerCount=ep;function ep(t){var e=this._events;if(e!==void 0){var r=e[t];if(typeof r=="function")return 1;if(r!==void 0)return r.length}return 0}we.prototype.eventNames=function(){return this._eventsCount>0?Es(this._events):[]};function tp(t,e){for(var r=new Array(e),n=0;n<e;++n)r[n]=t[n];return r}function e2(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}function t2(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}function r2(t,e){return new Promise(function(r,n){function i(s){t.removeListener(e,o),n(s)}function o(){typeof t.removeListener=="function"&&t.removeListener("error",i),r([].slice.call(arguments))}rp(t,e,o,{once:!0}),e!=="error"&&n2(t,i,{once:!0})})}function n2(t,e,r){typeof t.on=="function"&&rp(t,"error",e,r)}function rp(t,e,r,n){if(typeof t.on=="function")n.once?t.once(e,r):t.on(e,r);else if(typeof t.addEventListener=="function")t.addEventListener(e,function i(o){n.once&&t.removeEventListener(e,i),r(o)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t)}});var yp=B((J6,mp)=>{var p2="";mp.exports={bytes:p2,lenIn:171005,lenOut:339466}});var Vd=vn(Gc(),1),Gd=vn(ld(),1),ss=vn(dd(),1);var qt=Object.create(null);qt.open="0";qt.close="1";qt.ping="2";qt.pong="3";qt.message="4";qt.upgrade="5";qt.noop="6";var Oi=Object.create(null);Object.keys(qt).forEach(t=>{Oi[qt[t]]=t});var pd={type:"error",data:"parser error"};var Ib=typeof Blob=="function"||typeof Blob<"u"&&Object.prototype.toString.call(Blob)==="[object BlobConstructor]",qb=typeof ArrayBuffer=="function",Zb=t=>typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(t):t&&t.buffer instanceof ArrayBuffer,Vb=({type:t,data:e},r,n)=>Ib&&e instanceof Blob?r?n(e):md(e,n):qb&&(e instanceof ArrayBuffer||Zb(e))?r?n(e):md(new Blob([e]),n):n(qt[t]+(e||"")),md=(t,e)=>{let r=new FileReader;return r.onload=function(){let n=r.result.split(",")[1];e("b"+(n||""))},r.readAsDataURL(t)},Jo=Vb;var yd="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Ei=typeof Uint8Array>"u"?[]:new Uint8Array(256);for(let t=0;t<yd.length;t++)Ei[yd.charCodeAt(t)]=t;var vd=t=>{let e=t.length*.75,r=t.length,n,i=0,o,s,c,d;t[t.length-1]==="="&&(e--,t[t.length-2]==="="&&e--);let m=new ArrayBuffer(e),y=new Uint8Array(m);for(n=0;n<r;n+=4)o=Ei[t.charCodeAt(n)],s=Ei[t.charCodeAt(n+1)],c=Ei[t.charCodeAt(n+2)],d=Ei[t.charCodeAt(n+3)],y[i++]=o<<2|s>>4,y[i++]=(s&15)<<4|c>>2,y[i++]=(c&3)<<6|d&63;return m};var Gb=typeof ArrayBuffer=="function",Yb=(t,e)=>{if(typeof t!="string")return{type:"message",data:bd(t,e)};let r=t.charAt(0);return r==="b"?{type:"message",data:Wb(t.substring(1),e)}:Oi[r]?t.length>1?{type:Oi[r],data:t.substring(1)}:{type:Oi[r]}:pd},Wb=(t,e)=>{if(Gb){let r=vd(t);return bd(r,e)}else return{base64:!0,data:t}},bd=(t,e)=>{switch(e){case"blob":return t instanceof ArrayBuffer?new Blob([t]):t;case"arraybuffer":default:return t}},Ko=Yb;var gd=String.fromCharCode(30),wd=(t,e)=>{let r=t.length,n=new Array(r),i=0;t.forEach((o,s)=>{Jo(o,!1,c=>{n[s]=c,++i===r&&e(n.join(gd))})})},xd=(t,e)=>{let r=t.split(gd),n=[];for(let i=0;i<r.length;i++){let o=Ko(r[i],e);if(n.push(o),o.type==="error")break}return n},cf=4;function Ee(t){if(t)return Jb(t)}function Jb(t){for(var e in Ee.prototype)t[e]=Ee.prototype[e];return t}Ee.prototype.on=Ee.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(e),this};Ee.prototype.once=function(t,e){function r(){this.off(t,r),e.apply(this,arguments)}return r.fn=e,this.on(t,r),this};Ee.prototype.off=Ee.prototype.removeListener=Ee.prototype.removeAllListeners=Ee.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},arguments.length==0)return this._callbacks={},this;var r=this._callbacks["$"+t];if(!r)return this;if(arguments.length==1)return delete this._callbacks["$"+t],this;for(var n,i=0;i<r.length;i++)if(n=r[i],n===e||n.fn===e){r.splice(i,1);break}return r.length===0&&delete this._callbacks["$"+t],this};Ee.prototype.emit=function(t){this._callbacks=this._callbacks||{};for(var e=new Array(arguments.length-1),r=this._callbacks["$"+t],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(r){r=r.slice(0);for(var n=0,i=r.length;n<i;++n)r[n].apply(this,e)}return this};Ee.prototype.emitReserved=Ee.prototype.emit;Ee.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]};Ee.prototype.hasListeners=function(t){return!!this.listeners(t).length};var Rt=(()=>typeof self<"u"?self:typeof window<"u"?window:Function("return this")())();function Qo(t,...e){return e.reduce((r,n)=>(t.hasOwnProperty(n)&&(r[n]=t[n]),r),{})}var Kb=setTimeout,Qb=clearTimeout;function cr(t,e){e.useNativeTimers?(t.setTimeoutFn=Kb.bind(Rt),t.clearTimeoutFn=Qb.bind(Rt)):(t.setTimeoutFn=setTimeout.bind(Rt),t.clearTimeoutFn=clearTimeout.bind(Rt))}var _b=1.33;function Ad(t){return typeof t=="string"?$b(t):Math.ceil((t.byteLength||t.size)*_b)}function $b(t){let e=0,r=0;for(let n=0,i=t.length;n<i;n++)e=t.charCodeAt(n),e<128?r+=1:e<2048?r+=2:e<55296||e>=57344?r+=3:(n++,r+=4);return r}var lf=class extends Error{constructor(e,r,n){super(e),this.description=r,this.context=n,this.type="TransportError"}},an=class extends Ee{constructor(e){super(),this.writable=!1,cr(this,e),this.opts=e,this.query=e.query,this.readyState="",this.socket=e.socket}onError(e,r,n){return super.emitReserved("error",new lf(e,r,n)),this}open(){return(this.readyState==="closed"||this.readyState==="")&&(this.readyState="opening",this.doOpen()),this}close(){return(this.readyState==="opening"||this.readyState==="open")&&(this.doClose(),this.onClose()),this}send(e){this.readyState==="open"&&this.write(e)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){let r=Ko(e,this.socket.binaryType);this.onPacket(r)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}};var Td="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),hf=64,eg={},Pd=0,_o=0,Od;function Ed(t){let e="";do e=Td[t%hf]+e,t=Math.floor(t/hf);while(t>0);return e}function $o(){let t=Ed(+new Date);return t!==Od?(Pd=0,Od=t):t+"."+Ed(Pd++)}for(;_o<hf;_o++)eg[Td[_o]]=_o;function es(t){let e="";for(let r in t)t.hasOwnProperty(r)&&(e.length&&(e+="&"),e+=encodeURIComponent(r)+"="+encodeURIComponent(t[r]));return e}function Nd(t){let e={},r=t.split("&");for(let n=0,i=r.length;n<i;n++){let o=r[n].split("=");e[decodeURIComponent(o[0])]=decodeURIComponent(o[1])}return e}var Md=!1;try{Md=typeof XMLHttpRequest<"u"&&"withCredentials"in new XMLHttpRequest}catch{}var kd=Md;function df(t){let e=t.xdomain;try{if(typeof XMLHttpRequest<"u"&&(!e||kd))return new XMLHttpRequest}catch{}if(!e)try{return new Rt[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP")}catch{}}function tg(){}var rg=function(){return new df({xdomain:!1}).responseType!=null}(),ts=class extends an{constructor(e){if(super(e),this.polling=!1,typeof location<"u"){let n=location.protocol==="https:",i=location.port;i||(i=n?"443":"80"),this.xd=typeof location<"u"&&e.hostname!==location.hostname||i!==e.port,this.xs=e.secure!==n}let r=e&&e.forceBase64;this.supportsBinary=rg&&!r}get name(){return"polling"}doOpen(){this.poll()}pause(e){this.readyState="pausing";let r=()=>{this.readyState="paused",e()};if(this.polling||!this.writable){let n=0;this.polling&&(n++,this.once("pollComplete",function(){--n||r()})),this.writable||(n++,this.once("drain",function(){--n||r()}))}else r()}poll(){this.polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){let r=n=>{if(this.readyState==="opening"&&n.type==="open"&&this.onOpen(),n.type==="close")return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(n)};xd(e,this.socket.binaryType).forEach(r),this.readyState!=="closed"&&(this.polling=!1,this.emitReserved("pollComplete"),this.readyState==="open"&&this.poll())}doClose(){let e=()=>{this.write([{type:"close"}])};this.readyState==="open"?e():this.once("open",e)}write(e){this.writable=!1,wd(e,r=>{this.doWrite(r,()=>{this.writable=!0,this.emitReserved("drain")})})}uri(){let e=this.query||{},r=this.opts.secure?"https":"http",n="";this.opts.timestampRequests!==!1&&(e[this.opts.timestampParam]=$o()),!this.supportsBinary&&!e.sid&&(e.b64=1),this.opts.port&&(r==="https"&&Number(this.opts.port)!==443||r==="http"&&Number(this.opts.port)!==80)&&(n=":"+this.opts.port);let i=es(e),o=this.opts.hostname.indexOf(":")!==-1;return r+"://"+(o?"["+this.opts.hostname+"]":this.opts.hostname)+n+this.opts.path+(i.length?"?"+i:"")}request(e={}){return Object.assign(e,{xd:this.xd,xs:this.xs},this.opts),new Ft(this.uri(),e)}doWrite(e,r){let n=this.request({method:"POST",data:e});n.on("success",r),n.on("error",(i,o)=>{this.onError("xhr post error",i,o)})}doPoll(){let e=this.request();e.on("data",this.onData.bind(this)),e.on("error",(r,n)=>{this.onError("xhr poll error",r,n)}),this.pollXhr=e}},Ft=class extends Ee{constructor(e,r){super(),cr(this,r),this.opts=r,this.method=r.method||"GET",this.uri=e,this.async=r.async!==!1,this.data=r.data!==void 0?r.data:null,this.create()}create(){let e=Qo(this.opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");e.xdomain=!!this.opts.xd,e.xscheme=!!this.opts.xs;let r=this.xhr=new df(e);try{r.open(this.method,this.uri,this.async);try{if(this.opts.extraHeaders){r.setDisableHeaderCheck&&r.setDisableHeaderCheck(!0);for(let n in this.opts.extraHeaders)this.opts.extraHeaders.hasOwnProperty(n)&&r.setRequestHeader(n,this.opts.extraHeaders[n])}}catch{}if(this.method==="POST")try{r.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch{}try{r.setRequestHeader("Accept","*/*")}catch{}"withCredentials"in r&&(r.withCredentials=this.opts.withCredentials),this.opts.requestTimeout&&(r.timeout=this.opts.requestTimeout),r.onreadystatechange=()=>{r.readyState===4&&(r.status===200||r.status===1223?this.onLoad():this.setTimeoutFn(()=>{this.onError(typeof r.status=="number"?r.status:0)},0))},r.send(this.data)}catch(n){this.setTimeoutFn(()=>{this.onError(n)},0);return}typeof document<"u"&&(this.index=Ft.requestsCount++,Ft.requests[this.index]=this)}onError(e){this.emitReserved("error",e,this.xhr),this.cleanup(!0)}cleanup(e){if(!(typeof this.xhr>"u"||this.xhr===null)){if(this.xhr.onreadystatechange=tg,e)try{this.xhr.abort()}catch{}typeof document<"u"&&delete Ft.requests[this.index],this.xhr=null}}onLoad(){let e=this.xhr.responseText;e!==null&&(this.emitReserved("data",e),this.emitReserved("success"),this.cleanup())}abort(){this.cleanup()}};Ft.requestsCount=0;Ft.requests={};if(typeof document<"u"){if(typeof attachEvent=="function")attachEvent("onunload",zd);else if(typeof addEventListener=="function"){let t="onpagehide"in Rt?"pagehide":"unload";addEventListener(t,zd,!1)}}function zd(){for(let t in Ft.requests)Ft.requests.hasOwnProperty(t)&&Ft.requests[t].abort()}var Ti=(()=>typeof Promise=="function"&&typeof Promise.resolve=="function"?e=>Promise.resolve().then(e):(e,r)=>r(e,0))(),Ni=Rt.WebSocket||Rt.MozWebSocket,rs=!0,Ld="arraybuffer";var jd=typeof navigator<"u"&&typeof navigator.product=="string"&&navigator.product.toLowerCase()==="reactnative",ns=class extends an{constructor(e){super(e),this.supportsBinary=!e.forceBase64}get name(){return"websocket"}doOpen(){if(!this.check())return;let e=this.uri(),r=this.opts.protocols,n=jd?{}:Qo(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(n.headers=this.opts.extraHeaders);try{this.ws=rs&&!jd?r?new Ni(e,r):new Ni(e):new Ni(e,r,n)}catch(i){return this.emitReserved("error",i)}this.ws.binaryType=this.socket.binaryType||Ld,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let r=0;r<e.length;r++){let n=e[r],i=r===e.length-1;Jo(n,this.supportsBinary,o=>{let s={};rs||(n.options&&(s.compress=n.options.compress),this.opts.perMessageDeflate&&(typeof o=="string"?Buffer.byteLength(o):o.length)<this.opts.perMessageDeflate.threshold&&(s.compress=!1));try{rs?this.ws.send(o):this.ws.send(o,s)}catch{}i&&Ti(()=>{this.writable=!0,this.emitReserved("drain")},this.setTimeoutFn)})}}doClose(){typeof this.ws<"u"&&(this.ws.close(),this.ws=null)}uri(){let e=this.query||{},r=this.opts.secure?"wss":"ws",n="";this.opts.port&&(r==="wss"&&Number(this.opts.port)!==443||r==="ws"&&Number(this.opts.port)!==80)&&(n=":"+this.opts.port),this.opts.timestampRequests&&(e[this.opts.timestampParam]=$o()),this.supportsBinary||(e.b64=1);let i=es(e),o=this.opts.hostname.indexOf(":")!==-1;return r+"://"+(o?"["+this.opts.hostname+"]":this.opts.hostname)+n+this.opts.path+(i.length?"?"+i:"")}check(){return!!Ni}};var pf={websocket:ns,polling:ts};var ng=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,ig=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function Jn(t){let e=t,r=t.indexOf("["),n=t.indexOf("]");r!=-1&&n!=-1&&(t=t.substring(0,r)+t.substring(r,n).replace(/:/g,";")+t.substring(n,t.length));let i=ng.exec(t||""),o={},s=14;for(;s--;)o[ig[s]]=i[s]||"";return r!=-1&&n!=-1&&(o.source=e,o.host=o.host.substring(1,o.host.length-1).replace(/;/g,":"),o.authority=o.authority.replace("[","").replace("]","").replace(/;/g,":"),o.ipv6uri=!0),o.pathNames=og(o,o.path),o.queryKey=sg(o,o.query),o}function og(t,e){let r=/\/{2,9}/g,n=e.replace(r,"/").split("/");return(e.slice(0,1)=="/"||e.length===0)&&n.splice(0,1),e.slice(-1)=="/"&&n.splice(n.length-1,1),n}function sg(t,e){let r={};return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,function(n,i,o){i&&(r[i]=o)}),r}var Mt=class extends Ee{constructor(e,r={}){super(),e&&typeof e=="object"&&(r=e,e=null),e?(e=Jn(e),r.hostname=e.host,r.secure=e.protocol==="https"||e.protocol==="wss",r.port=e.port,e.query&&(r.query=e.query)):r.host&&(r.hostname=Jn(r.host).host),cr(this,r),this.secure=r.secure!=null?r.secure:typeof location<"u"&&location.protocol==="https:",r.hostname&&!r.port&&(r.port=this.secure?"443":"80"),this.hostname=r.hostname||(typeof location<"u"?location.hostname:"localhost"),this.port=r.port||(typeof location<"u"&&location.port?location.port:this.secure?"443":"80"),this.transports=r.transports||["polling","websocket"],this.readyState="",this.writeBuffer=[],this.prevBufferLen=0,this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!0},r),this.opts.path=this.opts.path.replace(/\/$/,"")+"/",typeof this.opts.query=="string"&&(this.opts.query=Nd(this.opts.query)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingTimeoutTimer=null,typeof addEventListener=="function"&&(this.opts.closeOnBeforeunload&&(this.beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this.beforeunloadEventListener,!1)),this.hostname!=="localhost"&&(this.offlineEventListener=()=>{this.onClose("transport close",{description:"network connection lost"})},addEventListener("offline",this.offlineEventListener,!1))),this.open()}createTransport(e){let r=Object.assign({},this.opts.query);r.EIO=cf,r.transport=e,this.id&&(r.sid=this.id);let n=Object.assign({},this.opts.transportOptions[e],this.opts,{query:r,socket:this,hostname:this.hostname,secure:this.secure,port:this.port});return new pf[e](n)}open(){let e;if(this.opts.rememberUpgrade&&Mt.priorWebsocketSuccess&&this.transports.indexOf("websocket")!==-1)e="websocket";else if(this.transports.length===0){this.setTimeoutFn(()=>{this.emitReserved("error","No transports available")},0);return}else e=this.transports[0];this.readyState="opening";try{e=this.createTransport(e)}catch{this.transports.shift(),this.open();return}e.open(),this.setTransport(e)}setTransport(e){this.transport&&this.transport.removeAllListeners(),this.transport=e,e.on("drain",this.onDrain.bind(this)).on("packet",this.onPacket.bind(this)).on("error",this.onError.bind(this)).on("close",r=>this.onClose("transport close",r))}probe(e){let r=this.createTransport(e),n=!1;Mt.priorWebsocketSuccess=!1;let i=()=>{n||(r.send([{type:"ping",data:"probe"}]),r.once("packet",A=>{if(!n)if(A.type==="pong"&&A.data==="probe"){if(this.upgrading=!0,this.emitReserved("upgrading",r),!r)return;Mt.priorWebsocketSuccess=r.name==="websocket",this.transport.pause(()=>{n||this.readyState!=="closed"&&(y(),this.setTransport(r),r.send([{type:"upgrade"}]),this.emitReserved("upgrade",r),r=null,this.upgrading=!1,this.flush())})}else{let M=new Error("probe error");M.transport=r.name,this.emitReserved("upgradeError",M)}}))};function o(){n||(n=!0,y(),r.close(),r=null)}let s=A=>{let M=new Error("probe error: "+A);M.transport=r.name,o(),this.emitReserved("upgradeError",M)};function c(){s("transport closed")}function d(){s("socket closed")}function m(A){r&&A.name!==r.name&&o()}let y=()=>{r.removeListener("open",i),r.removeListener("error",s),r.removeListener("close",c),this.off("close",d),this.off("upgrading",m)};r.once("open",i),r.once("error",s),r.once("close",c),this.once("close",d),this.once("upgrading",m),r.open()}onOpen(){if(this.readyState="open",Mt.priorWebsocketSuccess=this.transport.name==="websocket",this.emitReserved("open"),this.flush(),this.readyState==="open"&&this.opts.upgrade&&this.transport.pause){let e=0,r=this.upgrades.length;for(;e<r;e++)this.probe(this.upgrades[e])}}onPacket(e){if(this.readyState==="opening"||this.readyState==="open"||this.readyState==="closing")switch(this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this.resetPingTimeout(),this.sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong");break;case"error":let r=new Error("server error");r.code=e.data,this.onError(r);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data);break}}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.maxPayload=e.maxPayload,this.onOpen(),this.readyState!=="closed"&&this.resetPingTimeout()}resetPingTimeout(){this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn(()=>{this.onClose("ping timeout")},this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}onDrain(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,this.writeBuffer.length===0?this.emitReserved("drain"):this.flush()}flush(){if(this.readyState!=="closed"&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){let e=this.getWritablePackets();this.transport.send(e),this.prevBufferLen=e.length,this.emitReserved("flush")}}getWritablePackets(){if(!(this.maxPayload&&this.transport.name==="polling"&&this.writeBuffer.length>1))return this.writeBuffer;let r=1;for(let n=0;n<this.writeBuffer.length;n++){let i=this.writeBuffer[n].data;if(i&&(r+=Ad(i)),n>0&&r>this.maxPayload)return this.writeBuffer.slice(0,n);r+=2}return this.writeBuffer}write(e,r,n){return this.sendPacket("message",e,r,n),this}send(e,r,n){return this.sendPacket("message",e,r,n),this}sendPacket(e,r,n,i){if(typeof r=="function"&&(i=r,r=void 0),typeof n=="function"&&(i=n,n=null),this.readyState==="closing"||this.readyState==="closed")return;n=n||{},n.compress=n.compress!==!1;let o={type:e,data:r,options:n};this.emitReserved("packetCreate",o),this.writeBuffer.push(o),i&&this.once("flush",i),this.flush()}close(){let e=()=>{this.onClose("forced close"),this.transport.close()},r=()=>{this.off("upgrade",r),this.off("upgradeError",r),e()},n=()=>{this.once("upgrade",r),this.once("upgradeError",r)};return(this.readyState==="opening"||this.readyState==="open")&&(this.readyState="closing",this.writeBuffer.length?this.once("drain",()=>{this.upgrading?n():e()}):this.upgrading?n():e()),this}onError(e){Mt.priorWebsocketSuccess=!1,this.emitReserved("error",e),this.onClose("transport error",e)}onClose(e,r){(this.readyState==="opening"||this.readyState==="open"||this.readyState==="closing")&&(this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),typeof removeEventListener=="function"&&(removeEventListener("beforeunload",this.beforeunloadEventListener,!1),removeEventListener("offline",this.offlineEventListener,!1)),this.readyState="closed",this.id=null,this.emitReserved("close",e,r),this.writeBuffer=[],this.prevBufferLen=0)}filterUpgrades(e){let r=[],n=0,i=e.length;for(;n<i;n++)~this.transports.indexOf(e[n])&&r.push(e[n]);return r}};Mt.protocol=cf;var J8=Mt.protocol;function Sd(t,e="",r){let n=t;r=r||typeof location<"u"&&location,t==null&&(t=r.protocol+"//"+r.host),typeof t=="string"&&(t.charAt(0)==="/"&&(t.charAt(1)==="/"?t=r.protocol+t:t=r.host+t),/^(https?|wss?):\/\//.test(t)||(typeof r<"u"?t=r.protocol+"//"+t:t="https://"+t),n=Jn(t)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443")),n.path=n.path||"/";let o=n.host.indexOf(":")!==-1?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+o+":"+n.port+e,n.href=n.protocol+"://"+o+(r&&r.port===n.port?"":":"+n.port),n}var gf={};rm(gf,{Decoder:()=>zi,Encoder:()=>vf,PacketType:()=>ue,protocol:()=>Fd});var ag=typeof ArrayBuffer=="function",fg=t=>typeof ArrayBuffer.isView=="function"?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer,Bd=Object.prototype.toString,ug=typeof Blob=="function"||typeof Blob<"u"&&Bd.call(Blob)==="[object BlobConstructor]",cg=typeof File=="function"||typeof File<"u"&&Bd.call(File)==="[object FileConstructor]";function ki(t){return ag&&(t instanceof ArrayBuffer||fg(t))||ug&&t instanceof Blob||cg&&t instanceof File}function Mi(t,e){if(!t||typeof t!="object")return!1;if(Array.isArray(t)){for(let r=0,n=t.length;r<n;r++)if(Mi(t[r]))return!0;return!1}if(ki(t))return!0;if(t.toJSON&&typeof t.toJSON=="function"&&arguments.length===1)return Mi(t.toJSON(),!0);for(let r in t)if(Object.prototype.hasOwnProperty.call(t,r)&&Mi(t[r]))return!0;return!1}function Ud(t){let e=[],r=t.data,n=t;return n.data=mf(r,e),n.attachments=e.length,{packet:n,buffers:e}}function mf(t,e){if(!t)return t;if(ki(t)){let r={_placeholder:!0,num:e.length};return e.push(t),r}else if(Array.isArray(t)){let r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=mf(t[n],e);return r}else if(typeof t=="object"&&!(t instanceof Date)){let r={};for(let n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=mf(t[n],e));return r}return t}function Rd(t,e){return t.data=yf(t.data,e),delete t.attachments,t}function yf(t,e){if(!t)return t;if(t&&t._placeholder===!0){if(typeof t.num=="number"&&t.num>=0&&t.num<e.length)return e[t.num];throw new Error("illegal attachments")}else if(Array.isArray(t))for(let r=0;r<t.length;r++)t[r]=yf(t[r],e);else if(typeof t=="object")for(let r in t)Object.prototype.hasOwnProperty.call(t,r)&&(t[r]=yf(t[r],e));return t}var Fd=5,ue;(function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"})(ue||(ue={}));var vf=class{constructor(e){this.replacer=e}encode(e){return(e.type===ue.EVENT||e.type===ue.ACK)&&Mi(e)?this.encodeAsBinary({type:e.type===ue.EVENT?ue.BINARY_EVENT:ue.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id}):[this.encodeAsString(e)]}encodeAsString(e){let r=""+e.type;return(e.type===ue.BINARY_EVENT||e.type===ue.BINARY_ACK)&&(r+=e.attachments+"-"),e.nsp&&e.nsp!=="/"&&(r+=e.nsp+","),e.id!=null&&(r+=e.id),e.data!=null&&(r+=JSON.stringify(e.data,this.replacer)),r}encodeAsBinary(e){let r=Ud(e),n=this.encodeAsString(r.packet),i=r.buffers;return i.unshift(n),i}},zi=class extends Ee{constructor(e){super(),this.reviver=e}add(e){let r;if(typeof e=="string"){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");r=this.decodeString(e);let n=r.type===ue.BINARY_EVENT;n||r.type===ue.BINARY_ACK?(r.type=n?ue.EVENT:ue.ACK,this.reconstructor=new bf(r),r.attachments===0&&super.emitReserved("decoded",r)):super.emitReserved("decoded",r)}else if(ki(e)||e.base64)if(this.reconstructor)r=this.reconstructor.takeBinaryData(e),r&&(this.reconstructor=null,super.emitReserved("decoded",r));else throw new Error("got binary data when not reconstructing a packet");else throw new Error("Unknown type: "+e)}decodeString(e){let r=0,n={type:Number(e.charAt(0))};if(ue[n.type]===void 0)throw new Error("unknown packet type "+n.type);if(n.type===ue.BINARY_EVENT||n.type===ue.BINARY_ACK){let o=r+1;for(;e.charAt(++r)!=="-"&&r!=e.length;);let s=e.substring(o,r);if(s!=Number(s)||e.charAt(r)!=="-")throw new Error("Illegal attachments");n.attachments=Number(s)}if(e.charAt(r+1)==="/"){let o=r+1;for(;++r&&!(e.charAt(r)===","||r===e.length););n.nsp=e.substring(o,r)}else n.nsp="/";let i=e.charAt(r+1);if(i!==""&&Number(i)==i){let o=r+1;for(;++r;){let s=e.charAt(r);if(s==null||Number(s)!=s){--r;break}if(r===e.length)break}n.id=Number(e.substring(o,r+1))}if(e.charAt(++r)){let o=this.tryParse(e.substr(r));if(zi.isPayloadValid(n.type,o))n.data=o;else throw new Error("invalid payload")}return n}tryParse(e){try{return JSON.parse(e,this.reviver)}catch{return!1}}static isPayloadValid(e,r){switch(e){case ue.CONNECT:return typeof r=="object";case ue.DISCONNECT:return r===void 0;case ue.CONNECT_ERROR:return typeof r=="string"||typeof r=="object";case ue.EVENT:case ue.BINARY_EVENT:return Array.isArray(r)&&r.length>0;case ue.ACK:case ue.BINARY_ACK:return Array.isArray(r)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}},bf=class{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){let r=Rd(this.reconPack,this.buffers);return this.finishedReconstruction(),r}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}};function kt(t,e,r){return t.on(e,r),function(){t.off(e,r)}}var lg=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1}),Kn=class extends Ee{constructor(e,r,n){super(),this.connected=!1,this.receiveBuffer=[],this.sendBuffer=[],this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=r,n&&n.auth&&(this.auth=n.auth),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;let e=this.io;this.subs=[kt(e,"open",this.onopen.bind(this)),kt(e,"packet",this.onpacket.bind(this)),kt(e,"error",this.onerror.bind(this)),kt(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected?this:(this.subEvents(),this.io._reconnecting||this.io.open(),this.io._readyState==="open"&&this.onopen(),this)}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...r){if(lg.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');r.unshift(e);let n={type:ue.EVENT,data:r};if(n.options={},n.options.compress=this.flags.compress!==!1,typeof r[r.length-1]=="function"){let s=this.ids++,c=r.pop();this._registerAckCallback(s,c),n.id=s}let i=this.io.engine&&this.io.engine.transport&&this.io.engine.transport.writable;return this.flags.volatile&&(!i||!this.connected)||(this.connected?(this.notifyOutgoingListeners(n),this.packet(n)):this.sendBuffer.push(n)),this.flags={},this}_registerAckCallback(e,r){let n=this.flags.timeout;if(n===void 0){this.acks[e]=r;return}let i=this.io.setTimeoutFn(()=>{delete this.acks[e];for(let o=0;o<this.sendBuffer.length;o++)this.sendBuffer[o].id===e&&this.sendBuffer.splice(o,1);r.call(this,new Error("operation has timed out"))},n);this.acks[e]=(...o)=>{this.io.clearTimeoutFn(i),r.apply(this,[null,...o])}}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){typeof this.auth=="function"?this.auth(e=>{this.packet({type:ue.CONNECT,data:e})}):this.packet({type:ue.CONNECT,data:this.auth})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,r){this.connected=!1,delete this.id,this.emitReserved("disconnect",e,r)}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case ue.CONNECT:if(e.data&&e.data.sid){let i=e.data.sid;this.onconnect(i)}else this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case ue.EVENT:case ue.BINARY_EVENT:this.onevent(e);break;case ue.ACK:case ue.BINARY_ACK:this.onack(e);break;case ue.DISCONNECT:this.ondisconnect();break;case ue.CONNECT_ERROR:this.destroy();let n=new Error(e.data.message);n.data=e.data.data,this.emitReserved("connect_error",n);break}}onevent(e){let r=e.data||[];e.id!=null&&r.push(this.ack(e.id)),this.connected?this.emitEvent(r):this.receiveBuffer.push(Object.freeze(r))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){let r=this._anyListeners.slice();for(let n of r)n.apply(this,e)}super.emit.apply(this,e)}ack(e){let r=this,n=!1;return function(...i){n||(n=!0,r.packet({type:ue.ACK,id:e,data:i}))}}onack(e){let r=this.acks[e.id];typeof r=="function"&&(r.apply(this,e.data),delete this.acks[e.id])}onconnect(e){this.id=e,this.connected=!0,this.emitBuffered(),this.emitReserved("connect")}emitBuffered(){this.receiveBuffer.forEach(e=>this.emitEvent(e)),this.receiveBuffer=[],this.sendBuffer.forEach(e=>{this.notifyOutgoingListeners(e),this.packet(e)}),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach(e=>e()),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:ue.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){let r=this._anyListeners;for(let n=0;n<r.length;n++)if(e===r[n])return r.splice(n,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){let r=this._anyOutgoingListeners;for(let n=0;n<r.length;n++)if(e===r[n])return r.splice(n,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){let r=this._anyOutgoingListeners.slice();for(let n of r)n.apply(this,e.data)}}};function fn(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}fn.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),r=Math.floor(e*this.jitter*t);t=Math.floor(e*10)&1?t+r:t-r}return Math.min(t,this.max)|0};fn.prototype.reset=function(){this.attempts=0};fn.prototype.setMin=function(t){this.ms=t};fn.prototype.setMax=function(t){this.max=t};fn.prototype.setJitter=function(t){this.jitter=t};var Qn=class extends Ee{constructor(e,r){var n;super(),this.nsps={},this.subs=[],e&&typeof e=="object"&&(r=e,e=void 0),r=r||{},r.path=r.path||"/socket.io",this.opts=r,cr(this,r),this.reconnection(r.reconnection!==!1),this.reconnectionAttempts(r.reconnectionAttempts||1/0),this.reconnectionDelay(r.reconnectionDelay||1e3),this.reconnectionDelayMax(r.reconnectionDelayMax||5e3),this.randomizationFactor((n=r.randomizationFactor)!==null&&n!==void 0?n:.5),this.backoff=new fn({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(r.timeout==null?2e4:r.timeout),this._readyState="closed",this.uri=e;let i=r.parser||gf;this.encoder=new i.Encoder,this.decoder=new i.Decoder,this._autoConnect=r.autoConnect!==!1,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection}reconnectionAttempts(e){return e===void 0?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var r;return e===void 0?this._reconnectionDelay:(this._reconnectionDelay=e,(r=this.backoff)===null||r===void 0||r.setMin(e),this)}randomizationFactor(e){var r;return e===void 0?this._randomizationFactor:(this._randomizationFactor=e,(r=this.backoff)===null||r===void 0||r.setJitter(e),this)}reconnectionDelayMax(e){var r;return e===void 0?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,(r=this.backoff)===null||r===void 0||r.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&this.backoff.attempts===0&&this.reconnect()}open(e){if(~this._readyState.indexOf("open"))return this;this.engine=new Mt(this.uri,this.opts);let r=this.engine,n=this;this._readyState="opening",this.skipReconnect=!1;let i=kt(r,"open",function(){n.onopen(),e&&e()}),o=kt(r,"error",s=>{n.cleanup(),n._readyState="closed",this.emitReserved("error",s),e?e(s):n.maybeReconnectOnOpen()});if(this._timeout!==!1){let s=this._timeout;s===0&&i();let c=this.setTimeoutFn(()=>{i(),r.close(),r.emit("error",new Error("timeout"))},s);this.opts.autoUnref&&c.unref(),this.subs.push(function(){clearTimeout(c)})}return this.subs.push(i),this.subs.push(o),this}connect(e){return this.open(e)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");let e=this.engine;this.subs.push(kt(e,"ping",this.onping.bind(this)),kt(e,"data",this.ondata.bind(this)),kt(e,"error",this.onerror.bind(this)),kt(e,"close",this.onclose.bind(this)),kt(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(r){this.onclose("parse error",r)}}ondecoded(e){Ti(()=>{this.emitReserved("packet",e)},this.setTimeoutFn)}onerror(e){this.emitReserved("error",e)}socket(e,r){let n=this.nsps[e];return n||(n=new Kn(this,e,r),this.nsps[e]=n),n}_destroy(e){let r=Object.keys(this.nsps);for(let n of r)if(this.nsps[n].active)return;this._close()}_packet(e){let r=this.encoder.encode(e);for(let n=0;n<r.length;n++)this.engine.write(r[n],e.options)}cleanup(){this.subs.forEach(e=>e()),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close"),this.engine&&this.engine.close()}disconnect(){return this._close()}onclose(e,r){this.cleanup(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,r),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;let e=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{let r=this.backoff.duration();this._reconnecting=!0;let n=this.setTimeoutFn(()=>{e.skipReconnect||(this.emitReserved("reconnect_attempt",e.backoff.attempts),!e.skipReconnect&&e.open(i=>{i?(e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",i)):e.onreconnect()}))},r);this.opts.autoUnref&&n.unref(),this.subs.push(function(){clearTimeout(n)})}}onreconnect(){let e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}};var Li={};function ji(t,e){typeof t=="object"&&(e=t,t=void 0),e=e||{};let r=Sd(t,e.path||"/socket.io"),n=r.source,i=r.id,o=r.path,s=Li[i]&&o in Li[i].nsps,c=e.forceNew||e["force new connection"]||e.multiplex===!1||s,d;return c?d=new Qn(n,e):(Li[i]||(Li[i]=new Qn(n,e)),d=Li[i]),r.query&&!e.query&&(e.query=r.queryKey),d.socket(r.path,e)}Object.assign(ji,{Manager:Qn,Socket:Kn,io:ji,connect:ji});var J=(t=>(t.GET="GET",t.POST="POST",t.DELETE="DELETE",t.PATCH="PATCH",t.PUT="PUT",t))(J||{}),xt=class{constructor(e){this.client=e,this.client.options.baseUrl=this.client.options.baseUrl.replace(/\/$/,"")}async query(e,r){return(await this.client.instance({method:J.GET,baseURL:this.baseUrl,url:e,params:r})).data}async postRequest(e,r,n){return(await this.client.instance({method:J.POST,baseURL:this.baseUrl,url:e,data:r,params:n})).data}},Yd=t=>typeof t=="object"&&!!t&&"signerPayloadJSON"in t,Cd=t=>Yd(t)&&!!t&&"signature"in t;function Wd(t){return new Promise(e=>{setTimeout(e,t)})}var hg=Object.defineProperty,dg=Object.defineProperties,pg=Object.getOwnPropertyDescriptors,Xd=Object.getOwnPropertySymbols,mg=Object.prototype.hasOwnProperty,yg=Object.prototype.propertyIsEnumerable,Dd=(t,e,r)=>e in t?hg(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,is=(t,e)=>{for(var r in e||(e={}))mg.call(e,r)&&Dd(t,r,e[r]);if(Xd)for(var r of Xd(e))yg.call(e,r)&&Dd(t,r,e[r]);return t},os=(t,e)=>dg(t,pg(e)),ie=class{constructor(e,r,n){this.client=e,this.method=r,this.path=n,this.url=`${this.client.options.baseUrl}/${this.path}`}async buildBatch(e,r){return(await this.client.instance({method:this.method,url:this.url,params:os(is({},r),{use:"BuildBatch"}),data:e})).data}async build(e,r){return(await this.client.instance({method:this.method,url:this.url,params:os(is({},r),{use:"Build"}),data:e})).data}async getFee(e){let r=await this.client.instance({method:this.method,url:this.url,params:{use:"GetFee"},data:e});return r?.data}async sign(e,r){let n=Yd(e)?e:await this.build(e,r),{signerPayloadJSON:i}=n,{signature:o}=await this.client.extrinsics.sign(n,r?.signer);return{signature:o,signerPayloadJSON:i}}async submit(e,r){let n=Cd(e)?e:await this.sign(e,r);return(await this.client.instance({method:this.method,url:this.url,params:os(is({},r),{use:"Submit"}),data:n})).data}async submitWatch(e,r){let n=Cd(e)?e:await this.sign(e,r);return(await this.client.instance({method:this.method,url:this.url,params:os(is({},r),{use:"SubmitWatch"}),data:n})).data}async submitWaitResult(e,r){let{hash:n}=await this.submitWatch(e,r),i,o=0;for(;(!i||!i?.isCompleted)&&o<=this.client.params.maximumNumberOfStatusRequests;){if(o+=1,i=await this.client.extrinsics.status({hash:n}),i.isCompleted||i.error)return i;await Wd(this.client.params.waitBetweenStatusRequestsInMs)}throw new Error}},wf=class extends xt{constructor(){super(...arguments),this.path="balance",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.transfer=new ie(this.client,J.POST,`${this.path}/transfer`),this.get=e=>this.query("",e)}},xf=class extends xt{constructor(){super(...arguments),this.path="chain",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.properties=()=>this.query("properties")}},Af=class extends xt{constructor(){super(...arguments),this.path="collections",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.setProperties=new ie(this.client,J.POST,`${this.path}/properties`),this.deleteProperties=new ie(this.client,J.DELETE,`${this.path}/properties`),this.setPropertyPermissions=new ie(this.client,J.POST,`${this.path}/property-permissions`),this.properties=e=>this.query("properties",e),this.tokens=e=>this.query("tokens",e),this.propertyPermissions=e=>this.query("property-permissions",e),this.creation=new ie(this.client,J.POST,this.path),this.getLimits=e=>this.query("limits",e),this.setLimits=new ie(this.client,J.POST,`${this.path}/set-limits`),this.get=e=>this.query("",e),this.transfer=new ie(this.client,J.PATCH,`${this.path}/transfer`),this.destroy=new ie(this.client,J.DELETE,this.path),this.stats=()=>this.query("stats"),this.setTransfersEnabled=new ie(this.client,J.POST,`${this.path}/transfers-enabled`),this.setPermissions=new ie(this.client,J.POST,`${this.path}/permissions`),this.nextSponsored=e=>this.query("next-sponsored",e),this.lastTokenId=e=>this.query("last-token-id",e),this.allowList=e=>this.query("allow-list",e),this.allowed=e=>this.query("allowed",e),this.addToAllowList=new ie(this.client,J.POST,`${this.path}/add-allow-list`),this.removeFromAllowList=new ie(this.client,J.POST,`${this.path}/remove-from-allow-list`),this.admins=e=>this.query("admins",e),this.addAdmin=new ie(this.client,J.POST,`${this.path}/admins`),this.removeAdmin=new ie(this.client,J.DELETE,`${this.path}/admins`),this.setSponsorship=new ie(this.client,J.POST,`${this.path}/sponsorship`),this.confirmSponsorship=new ie(this.client,J.POST,`${this.path}/sponsorship/confirm`),this.removeSponsorship=new ie(this.client,J.DELETE,`${this.path}/sponsorship`),this.totalSupply=({collectionId:e})=>this.query("total-supply",{collectionId:e})}},Pf=class extends xt{constructor(){super(...arguments),this.path="erc721",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.createCollection=new ie(this.client,J.POST,`${this.path}/collection`),this.createToken=new ie(this.client,J.POST,`${this.path}/token`)}},vg=(t,e)=>{let r=new Gd.Coder(e),n=[],i=[];return t.filter(o=>o.section==="evm"&&o.method==="Log").forEach(o=>{let s=o.data[0],{topics:c,data:d}=s;try{let m=r.decodeEvent(c,d);n.push({name:m.name,values:m.values})}catch{i.push({topics:c,data:d})}}),{parsedEvents:n,unknownEvents:i}},bg=Object.defineProperty,Hd=Object.getOwnPropertySymbols,gg=Object.prototype.hasOwnProperty,wg=Object.prototype.propertyIsEnumerable,Id=(t,e,r)=>e in t?bg(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,xg=(t,e)=>{for(var r in e||(e={}))gg.call(e,r)&&Id(t,r,e[r]);if(Hd)for(var r of Hd(e))wg.call(e,r)&&Id(t,r,e[r]);return t},Of=class extends ie{constructor(e,r,n,i){super(e,r,n),this.contract=i}async build(e){return super.build(xg({contractAddress:this.contract.contractAddress,abi:this.contract.abi},e))}async submitWaitResult(e){let r=await super.submitWaitResult(e),{parsedEvents:n,unknownEvents:i}=vg(r.events,this.contract.abi);return r.parsed.parsedEvents=n,r.parsed.unknownEvents=i,r}},Ag=Object.defineProperty,qd=Object.getOwnPropertySymbols,Pg=Object.prototype.hasOwnProperty,Og=Object.prototype.propertyIsEnumerable,Zd=(t,e,r)=>e in t?Ag(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,Eg=(t,e)=>{for(var r in e||(e={}))Pg.call(e,r)&&Zd(t,r,e[r]);if(qd)for(var r of qd(e))Og.call(e,r)&&Zd(t,r,e[r]);return t},Ef=class extends xt{constructor(e,r,n){super(e),this.contractAddress=r,this.abi=n,this.path="evm",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.send=new Of(this.client,J.POST,`${this.path}/send`,this)}async call(e){return(await this.client.instance({method:J.POST,baseURL:this.baseUrl,url:"call",data:Eg({contractAddress:this.contractAddress,abi:this.abi},e)})).data}},Tf=class extends xt{constructor(){super(...arguments),this.path="evm",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.send=new ie(this.client,J.POST,`${this.path}/send`),this.contractExists=e=>this.query("contract-exists",e),this.call=e=>this.postRequest("call",e)}async contractConnect(e,r){let{exists:n}=await this.contractExists({contractAddress:e});if(!n)throw new Error("Contract is not exists");return new Ef(this.client,e,r)}},Nf=class extends xt{constructor(){super(...arguments),this.path="extrinsic",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`}async build(e){return(await this.client.instance({method:J.POST,baseURL:this.baseUrl,url:"build",data:e})).data}async getFee(e){return(await this.client.instance({method:J.POST,baseURL:this.baseUrl,url:"calculate-fee",data:e})).data}async sign(e,r=this.client.options.signer){if(!r)throw new Error("No signer provided");return r.sign(e)}async submit(e){return(await this.client.instance({method:J.POST,baseURL:this.baseUrl,url:"submit",data:e})).data}async submitWatch(e,r=this.client.options.signer){let n=await this.client.extrinsics.build(e),i=await this.client.extrinsics.sign(n,r);return await this.client.extrinsics.submit({signerPayloadJSON:n.signerPayloadJSON,signature:i.signature})}async submitWaitResult(e,r=this.client.options.signer){let{hash:n}=await this.client.extrinsics.submitWatch(e,r),i,o=0;for(;(!i||!i?.isCompleted)&&o<=this.client.params.maximumNumberOfStatusRequests;){if(o+=1,i=await this.client.extrinsics.status({hash:n}),i.isCompleted||i.error)return i;await Wd(this.client.params.waitBetweenStatusRequestsInMs)}throw new Error}async status(e){return(await this.client.instance({method:J.GET,baseURL:this.baseUrl,url:"status",params:e})).data}async get(e){return(await this.client.instance({method:J.GET,baseURL:this.baseUrl,url:"",params:e})).data}},Mf=class extends xt{constructor(){super(...arguments),this.path="fungible",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.transfer=new ie(this.client,J.POST,`${this.path}/transfer`),this.getCollection=e=>this.query("collection",e),this.burn=new ie(this.client,J.DELETE,this.path),this.createCollection=new ie(this.client,J.POST,`${this.path}/collection`),this.getBalance=e=>this.query("balance",e),this.addTokens=new ie(this.client,J.POST,`${this.path}/tokens`),this.transferTokens=new ie(this.client,J.POST,`${this.path}/tokens/transfer`),this.approveTokens=new ie(this.client,J.POST,`${this.path}/tokens/approve`),this.allowanceTokens=e=>this.query("tokens/allowance",e),this.totalPieces=e=>this.query("total-pieces",e)}},kf=class extends xt{constructor(){super(...arguments),this.path="refungible",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.getCollection=e=>this.query("collection",e),this.burn=new ie(this.client,J.DELETE,this.path),this.getBalance=e=>this.query("tokens/balance",e),this.createCollection=new ie(this.client,J.POST,`${this.path}/collection`),this.createToken=new ie(this.client,J.POST,`${this.path}/tokens`),this.transferToken=new ie(this.client,J.POST,`${this.path}/tokens/transfer`),this.approveToken=new ie(this.client,J.POST,`${this.path}/tokens/approve`),this.allowanceToken=e=>this.query("tokens/allowance",e),this.repartitionToken=new ie(this.client,J.POST,`${this.path}/tokens/repartition`),this.totalPieces=e=>this.query("tokens/total-pieces",e),this.accountTokens=e=>this.query("tokens/account-tokens",e)}},Tg=t=>Object.hasOwnProperty.call(t,"content"),_n=class extends xt{constructor(){super(...arguments),this.path="ipfs",this.headers={"Content-Type":"multipart/form-data"},this.baseUrl=`${this.client.options.baseUrl}/${this.path}`}async uploadFile({file:e}){let r=new ss.default;return r.append("file",e,"file"),(await this.client.instance({method:J.POST,url:`${this.baseUrl}/upload-file`,data:r,headers:this.headers})).data}async uploadFiles({files:e}){let r=_n.filesToFormData(e);return(await this.client.instance({method:J.POST,url:`${this.baseUrl}/upload-files`,data:r,headers:this.headers})).data}async addFiles({cid:e,files:r}){let n=_n.filesToFormData(r);return n.append("cid",e),(await this.client.instance({method:J.PATCH,url:`${this.baseUrl}/add-files`,data:n,headers:this.headers})).data}async uploadZip({file:e}){let r=new ss.default;return r.append("file",e,"file"),(await this.client.instance({method:J.POST,url:`${this.baseUrl}/upload-zip`,data:r,headers:{"Content-Type":"multipart/form-data"}})).data}static filesToFormData(e){let r=new ss.default;return e.forEach(n=>{r.append("files",Tg(n)?n.content:n,n.name)}),r}},zf=class extends xt{constructor(){super(...arguments),this.path="tokens",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.setProperties=new ie(this.client,J.POST,`${this.path}/properties`),this.deleteProperties=new ie(this.client,J.DELETE,`${this.path}/properties`),this.properties=e=>this.query("properties",e),this.create=new ie(this.client,J.POST,this.path),this.createMultiple=new ie(this.client,J.POST,`${this.path}/create-multiple`),this.accountTokens=e=>this.query("account-tokens",e),this.get=e=>this.query("",e),this.exists=e=>this.query("exists",e),this.children=e=>this.query("children",e),this.parent=e=>this.query("parent",e),this.owner=e=>this.query("owner",e),this.topmostOwner=e=>this.query("topmost-owner",e),this.nest=new ie(this.client,J.POST,`${this.path}/nest`),this.unnest=new ie(this.client,J.POST,`${this.path}/unnest`),this.burn=new ie(this.client,J.DELETE,this.path),this.transfer=new ie(this.client,J.PATCH,`${this.path}/transfer`),this.approve=new ie(this.client,J.POST,`${this.path}/approve`),this.allowance=e=>this.query("allowance",e),this.isBundle=e=>this.query("is-bundle",e),this.getBundle=e=>this.query("get-bundle",e),this.balance=e=>this.query("balance",e)}},Lf=class extends Error{constructor(e){super(e.message),this.code=e.code,this.name=e.name,this.details=e.details}},Ng="0.2.5",jf=class extends xt{constructor(){super(...arguments),this.path="common",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`,this.chainProperties=()=>this.query("chain-properties"),this.getNonce=e=>this.query("nonce",e)}},Sf=class extends xt{constructor(){super(...arguments),this.path="query",this.baseUrl=`${this.client.options.baseUrl}/${this.path}`}async get(e){let{endpoint:r,module:n,method:i}=e,o=`${r}/${n}/${i}`;return(await this.client.instance({method:J.GET,baseURL:this.baseUrl,url:o})).data}async execute(e,r){let{endpoint:n,module:i,method:o}=e,s=`${n}/${i}/${o}`;return(await this.client.instance({method:J.POST,baseURL:this.baseUrl,url:s,data:r||{}})).data}},Bf=class{constructor(e){this.socket=e}on(e,r){this.socket.on(e,r)}subscribeHeaders(){return this.socket.emit("subscribe:headers"),this}subscribeBlocks(){return this.socket.emit("subscribe:blocks"),this}subscribeExtrinsics(e){return this.socket.emit("subscribe:extrinsics",e),this}subscribeEvents(e){return this.socket.emit("subscribe:events",e),this}},Uf=class{constructor(e){this.client=e}connect(e){let r={path:e?`/${e}/socket.io`:"/socket.io"},n=ji(this.client.options.baseUrl,r);return new Bf(n)}},Rf=class{constructor(e){this.options=e,this.chain=new xf(this),this.common=new jf(this),this.extrinsics=new Nf(this),this.balance=new wf(this),this.fungible=new Mf(this),this.refungible=new kf(this),this.collections=new Af(this),this.tokens=new zf(this),this.erc721=new Pf(this),this.ipfs=new _n(this),this.evm=new Tf(this),this.stateQuery=new Sf(this),this.subscriptions=new Uf(this),this.defaults={baseUrl:""},this.options.baseUrl=e.baseUrl.replace(/\/$/,""),this.params={maximumNumberOfStatusRequests:this.options.maximumNumberOfStatusRequests||5,waitBetweenStatusRequestsInMs:this.options.waitBetweenStatusRequestsInMs||5e3},this.instance=Vd.default.create({baseURL:this.options.baseUrl,maxContentLength:1/0,maxBodyLength:1/0}),this.instance.interceptors.response.use(r=>r,r=>{var n,i;let o=(i=(n=r.response)==null?void 0:n.data)==null?void 0:i.error;throw o&&typeof o=="object"?new Lf(o):r}),this.instance.defaults.headers.common["X-SDK-Version"]=Ng}},Jd=Rf;var Kd;(function(t){(function(e){var r=typeof global=="object"?global:typeof self=="object"?self:typeof this=="object"?this:Function("return this;")(),n=i(t);typeof r.Reflect>"u"?r.Reflect=t:n=i(r.Reflect,n),e(n);function i(o,s){return function(c,d){typeof o[c]!="function"&&Object.defineProperty(o,c,{configurable:!0,writable:!0,value:d}),s&&s(c,d)}}})(function(e){var r=Object.prototype.hasOwnProperty,n=typeof Symbol=="function",i=n&&typeof Symbol.toPrimitive<"u"?Symbol.toPrimitive:"@@toPrimitive",o=n&&typeof Symbol.iterator<"u"?Symbol.iterator:"@@iterator",s=typeof Object.create=="function",c={__proto__:[]}instanceof Array,d=!s&&!c,m={create:s?function(){return ve(Object.create(null))}:c?function(){return ve({__proto__:null})}:function(){return ve({})},has:d?function(O,k){return r.call(O,k)}:function(O,k){return k in O},get:d?function(O,k){return r.call(O,k)?O[k]:void 0}:function(O,k){return O[k]}},y=Object.getPrototypeOf(Function),A=typeof process=="object"&&process.env&&process.env.REFLECT_METADATA_USE_MAP_POLYFILL==="true",M=!A&&typeof Map=="function"&&typeof Map.prototype.entries=="function"?Map:Pe(),N=!A&&typeof Set=="function"&&typeof Set.prototype.entries=="function"?Set:Oe(),L=!A&&typeof WeakMap=="function"?WeakMap:nr(),S=new L;function H(O,k,z,U){if(v(z)){if(!G(O))throw new TypeError;if(!X(k))throw new TypeError;return nt(O,k)}else{if(!G(O))throw new TypeError;if(!F(k))throw new TypeError;if(!F(U)&&!v(U)&&!f(U))throw new TypeError;return f(U)&&(U=void 0),z=R(z),me(O,k,z,U)}}e("decorate",H);function K(O,k){function z(U,Y){if(!F(U))throw new TypeError;if(!v(Y)&&!Me(Y))throw new TypeError;p(O,k,U,Y)}return z}e("metadata",K);function Q(O,k,z,U){if(!F(z))throw new TypeError;return v(U)||(U=R(U)),p(O,k,z,U)}e("defineMetadata",Q);function _(O,k,z){if(!F(k))throw new TypeError;return v(z)||(z=R(z)),w(O,k,z)}e("hasMetadata",_);function re(O,k,z){if(!F(k))throw new TypeError;return v(z)||(z=R(z)),a(O,k,z)}e("hasOwnMetadata",re);function fe(O,k,z){if(!F(k))throw new TypeError;return v(z)||(z=R(z)),u(O,k,z)}e("getMetadata",fe);function $(O,k,z){if(!F(k))throw new TypeError;return v(z)||(z=R(z)),h(O,k,z)}e("getOwnMetadata",$);function pe(O,k){if(!F(O))throw new TypeError;return v(k)||(k=R(k)),b(O,k)}e("getMetadataKeys",pe);function Ne(O,k){if(!F(O))throw new TypeError;return v(k)||(k=R(k)),x(O,k)}e("getOwnMetadataKeys",Ne);function Ye(O,k,z){if(!F(k))throw new TypeError;v(z)||(z=R(z));var U=tt(k,z,!1);if(v(U)||!U.delete(O))return!1;if(U.size>0)return!0;var Y=S.get(k);return Y.delete(z),Y.size>0||S.delete(k),!0}e("deleteMetadata",Ye);function nt(O,k){for(var z=O.length-1;z>=0;--z){var U=O[z],Y=U(k);if(!v(Y)&&!f(Y)){if(!X(Y))throw new TypeError;k=Y}}return k}function me(O,k,z,U){for(var Y=O.length-1;Y>=0;--Y){var oe=O[Y],V=oe(k,z,U);if(!v(V)&&!f(V)){if(!F(V))throw new TypeError;U=V}}return U}function tt(O,k,z){var U=S.get(O);if(v(U)){if(!z)return;U=new M,S.set(O,U)}var Y=U.get(k);if(v(Y)){if(!z)return;Y=new M,U.set(k,Y)}return Y}function w(O,k,z){var U=a(O,k,z);if(U)return!0;var Y=Xt(k);return f(Y)?!1:w(O,Y,z)}function a(O,k,z){var U=tt(k,z,!1);return v(U)?!1:T(U.has(O))}function u(O,k,z){var U=a(O,k,z);if(U)return h(O,k,z);var Y=Xt(k);if(!f(Y))return u(O,Y,z)}function h(O,k,z){var U=tt(k,z,!1);if(!v(U))return U.get(O)}function p(O,k,z,U){var Y=tt(z,U,!0);Y.set(O,k)}function b(O,k){var z=x(O,k),U=Xt(O);if(U===null)return z;var Y=b(U,k);if(Y.length<=0)return z;if(z.length<=0)return Y;for(var oe=new N,V=[],te=0,D=z;te<D.length;te++){var W=D[te],se=oe.has(W);se||(oe.add(W),V.push(W))}for(var he=0,ge=Y;he<ge.length;he++){var W=ge[he],se=oe.has(W);se||(oe.add(W),V.push(W))}return V}function x(O,k){var z=[],U=tt(O,k,!1);if(v(U))return z;for(var Y=U.keys(),oe=ne(Y),V=0;;){var te=xe(oe);if(!te)return z.length=V,z;var D=rr(te);try{z[V]=D}catch(W){try{Ae(oe)}finally{throw W}}V++}}function P(O){if(O===null)return 1;switch(typeof O){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return O===null?1:6;default:return 6}}function v(O){return O===void 0}function f(O){return O===null}function g(O){return typeof O=="symbol"}function F(O){return typeof O=="object"?O!==null:typeof O=="function"}function l(O,k){switch(P(O)){case 0:return O;case 1:return O;case 2:return O;case 3:return O;case 4:return O;case 5:return O}var z=k===3?"string":k===5?"number":"default",U=Z(O,i);if(U!==void 0){var Y=U.call(O,z);if(F(Y))throw new TypeError;return Y}return E(O,z==="default"?"number":z)}function E(O,k){if(k==="string"){var z=O.toString;if(C(z)){var U=z.call(O);if(!F(U))return U}var Y=O.valueOf;if(C(Y)){var U=Y.call(O);if(!F(U))return U}}else{var Y=O.valueOf;if(C(Y)){var U=Y.call(O);if(!F(U))return U}var oe=O.toString;if(C(oe)){var U=oe.call(O);if(!F(U))return U}}throw new TypeError}function T(O){return!!O}function j(O){return""+O}function R(O){var k=l(O,3);return g(k)?k:j(k)}function G(O){return Array.isArray?Array.isArray(O):O instanceof Object?O instanceof Array:Object.prototype.toString.call(O)==="[object Array]"}function C(O){return typeof O=="function"}function X(O){return typeof O=="function"}function Me(O){switch(P(O)){case 3:return!0;case 4:return!0;default:return!1}}function Z(O,k){var z=O[k];if(z!=null){if(!C(z))throw new TypeError;return z}}function ne(O){var k=Z(O,o);if(!C(k))throw new TypeError;var z=k.call(O);if(!F(z))throw new TypeError;return z}function rr(O){return O.value}function xe(O){var k=O.next();return k.done?!1:k}function Ae(O){var k=O.return;k&&k.call(O)}function Xt(O){var k=Object.getPrototypeOf(O);if(typeof O!="function"||O===y||k!==y)return k;var z=O.prototype,U=z&&Object.getPrototypeOf(z);if(U==null||U===Object.prototype)return k;var Y=U.constructor;return typeof Y!="function"||Y===O?k:Y}function Pe(){var O={},k=[],z=function(){function V(te,D,W){this._index=0,this._keys=te,this._values=D,this._selector=W}return V.prototype["@@iterator"]=function(){return this},V.prototype[o]=function(){return this},V.prototype.next=function(){var te=this._index;if(te>=0&&te<this._keys.length){var D=this._selector(this._keys[te],this._values[te]);return te+1>=this._keys.length?(this._index=-1,this._keys=k,this._values=k):this._index++,{value:D,done:!1}}return{value:void 0,done:!0}},V.prototype.throw=function(te){throw this._index>=0&&(this._index=-1,this._keys=k,this._values=k),te},V.prototype.return=function(te){return this._index>=0&&(this._index=-1,this._keys=k,this._values=k),{value:te,done:!0}},V}();return function(){function V(){this._keys=[],this._values=[],this._cacheKey=O,this._cacheIndex=-2}return Object.defineProperty(V.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),V.prototype.has=function(te){return this._find(te,!1)>=0},V.prototype.get=function(te){var D=this._find(te,!1);return D>=0?this._values[D]:void 0},V.prototype.set=function(te,D){var W=this._find(te,!0);return this._values[W]=D,this},V.prototype.delete=function(te){var D=this._find(te,!1);if(D>=0){for(var W=this._keys.length,se=D+1;se<W;se++)this._keys[se-1]=this._keys[se],this._values[se-1]=this._values[se];return this._keys.length--,this._values.length--,te===this._cacheKey&&(this._cacheKey=O,this._cacheIndex=-2),!0}return!1},V.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=O,this._cacheIndex=-2},V.prototype.keys=function(){return new z(this._keys,this._values,U)},V.prototype.values=function(){return new z(this._keys,this._values,Y)},V.prototype.entries=function(){return new z(this._keys,this._values,oe)},V.prototype["@@iterator"]=function(){return this.entries()},V.prototype[o]=function(){return this.entries()},V.prototype._find=function(te,D){return this._cacheKey!==te&&(this._cacheIndex=this._keys.indexOf(this._cacheKey=te)),this._cacheIndex<0&&D&&(this._cacheIndex=this._keys.length,this._keys.push(te),this._values.push(void 0)),this._cacheIndex},V}();function U(V,te){return V}function Y(V,te){return te}function oe(V,te){return[V,te]}}function Oe(){return function(){function O(){this._map=new M}return Object.defineProperty(O.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),O.prototype.has=function(k){return this._map.has(k)},O.prototype.add=function(k){return this._map.set(k,k),this},O.prototype.delete=function(k){return this._map.delete(k)},O.prototype.clear=function(){this._map.clear()},O.prototype.keys=function(){return this._map.keys()},O.prototype.values=function(){return this._map.values()},O.prototype.entries=function(){return this._map.entries()},O.prototype["@@iterator"]=function(){return this.keys()},O.prototype[o]=function(){return this.keys()},O}()}function nr(){var O=16,k=m.create(),z=U();return function(){function D(){this._key=U()}return D.prototype.has=function(W){var se=Y(W,!1);return se!==void 0?m.has(se,this._key):!1},D.prototype.get=function(W){var se=Y(W,!1);return se!==void 0?m.get(se,this._key):void 0},D.prototype.set=function(W,se){var he=Y(W,!0);return he[this._key]=se,this},D.prototype.delete=function(W){var se=Y(W,!1);return se!==void 0?delete se[this._key]:!1},D.prototype.clear=function(){this._key=U()},D}();function U(){var D;do D="@@WeakMap@@"+te();while(m.has(k,D));return k[D]=!0,D}function Y(D,W){if(!r.call(D,z)){if(!W)return;Object.defineProperty(D,z,{value:m.create()})}return D[z]}function oe(D,W){for(var se=0;se<W;++se)D[se]=Math.random()*255|0;return D}function V(D){return typeof Uint8Array=="function"?typeof crypto<"u"?crypto.getRandomValues(new Uint8Array(D)):typeof msCrypto<"u"?msCrypto.getRandomValues(new Uint8Array(D)):oe(new Uint8Array(D),D):oe(new Array(D),D)}function te(){var D=V(O);D[6]=D[6]&79|64,D[8]=D[8]&191|128;for(var W="",se=0;se<O;++se){var he=D[se];(se===4||se===6||se===8)&&(W+="-"),he<16&&(W+="0"),W+=he.toString(16).toLowerCase()}return W}}function ve(O){return O.__=void 0,delete O.__,O}})})(Kd||(Kd={}));function Mg(t){return t("return this")}var Tt=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:Mg(Function);function as(t,e){return typeof Tt[t]>"u"?e:Tt[t]}var fs=class{constructor(e){}decode(e){let r="";for(let n=0;n<e.length;n++)r+=String.fromCharCode(e[n]);return r}};var Qd=as("TextDecoder",fs);var us=class{encode(e){let r=new Uint8Array(e.length);for(let n=0;n<e.length;n++)r[n]=e.charCodeAt(n);return r}};var _d=as("TextEncoder",us);function $d(t){return typeof t=="function"}var Ff=typeof Tt.BigInt=="function"&&typeof Tt.BigInt.asIntN=="function"?Tt.BigInt:()=>Number.NaN;var Cf="0123456789abcdef",cs=new Uint8Array(256),e0=new Uint8Array(256*256);for(let t=0;t<Cf.length;t++)cs[Cf[t].charCodeAt(0)|0]=t|0,t>9&&(cs[Cf[t].toUpperCase().charCodeAt(0)|0]=t|0);for(let t=0;t<256;t++){let e=t<<8;for(let r=0;r<256;r++)e0[e|r]=cs[t]<<4|cs[r]}function t0(t,e=-1){if(!t)return new Uint8Array;let r=t.startsWith("0x")?2:0,n=Math.ceil((t.length-r)/2),i=Math.ceil(e===-1?n:e/8),o=new Uint8Array(i),s=i>n?i-n:0;for(let c=s;c<i;c++,r+=2)o[c]=e0[t.charCodeAt(r)<<8|t.charCodeAt(r+1)];return o}var kg=/^0x[\da-fA-F]+$/;function Si(t,e=-1,r){return typeof t=="string"&&(t==="0x"||kg.test(t))&&(e===-1?r||t.length%2===0:t.length===2+Math.ceil(e/4))}var Xf=typeof Ff=="function"&&typeof Ff.asIntN=="function";var r0=typeof Tt.Buffer=="function"&&typeof Tt.Buffer.isBuffer=="function",G5=typeof Tt.process=="object";function n0(t){return r0&&$d(t&&t.readDoubleLE)&&Tt.Buffer.isBuffer(t)}function Bi(t){return(t&&t.constructor)===Uint8Array||t instanceof Uint8Array}var zg=new _d;function un(t){return t?zg.encode(t.toString()):new Uint8Array}function Zt(t){return Bi(t)?t:Si(t)?t0(t):n0(t)||Array.isArray(t)?new Uint8Array(t):un(t)}function $n(...t){let e=new Array(t.length),r=0;for(let n=0;n<t.length;n++)e[n]=Zt(t[n]),r+=e[n].length;return i0(e,r)}function i0(t,e=0){let r=0;if(!e)for(let i=0;i<t.length;i++)e+=t[i].length;let n=new Uint8Array(e);for(let i=0;i<t.length;i++)n.set(t[i],r),r+=t[i].length;return n}var ls=new Array(256),o0=new Array(256*256);for(let t=0;t<256;t++)ls[t]=t.toString(16).padStart(2,"0");for(let t=0;t<256;t++){let e=t<<8;for(let r=0;r<256;r++)o0[e|r]=ls[t]+ls[r]}function Df(t,e){let r=t.length%2|0,n=t.length-r|0;for(let i=0;i<n;i+=2)e+=o0[t[i]<<8|t[i+1]];return r&&(e+=ls[t[n]|0]),e}function Hf(t,e=-1,r=!0){let n=r?"0x":"";if(!t||!t.length)return n;if(e>0){let i=Math.ceil(e/8);if(t.length>i)return`${Df(t.subarray(0,i/2),n)}\u2026${Df(t.subarray(t.length-i/2),"")}`}return Df(t,n)}var Lg=new Qd("utf-8");function hs(t){return t?Lg.decode(t):""}var au=vn(G0(),1),ip=vn(np(),1);var op=function(t,e){return e==="ethereum"?au.Address.mirror.substrateToEthereum(t):typeof e=="number"?au.Address.normalize.substrateAddress(t,e):t},Ns=class{constructor(e){this.legacyInstance=e}get instance(){return this.legacyInstance}};var Ms=class extends ip.EventEmitter{async first(){let e=await this.getAccounts();return e.length?e[0]:void 0}};function sp(t){return Tt.crypto.getRandomValues(t)}var ks={getRandomValues:sp},i2={crypto:ks},zs=class{#e;constructor(e){this.#e=e}abort=()=>{throw new Error("abort")};__wbindgen_is_undefined=e=>this.#e.getObject(e)===void 0;__wbindgen_throw=(e,r)=>{throw new Error(this.#e.getString(e,r))};__wbg_self_1b7a39e3a92c949c=()=>this.#e.addObject(i2);__wbg_require_604837428532a733=(e,r)=>{throw new Error(`Unable to require ${this.#e.getString(e,r)}`)};__wbg_crypto_968f1772287e2df0=e=>this.#e.addObject(ks);__wbg_getRandomValues_a3d34b4fee3c2869=e=>this.#e.addObject(ks.getRandomValues);__wbg_getRandomValues_f5e14ab7ac8e995d=(e,r,n)=>{ks.getRandomValues(this.#e.getU8a(r,n))};__wbg_randomFillSync_d5bd2d655fdf256a=(e,r,n)=>{throw new Error("randomFillsync is not available")};__wbindgen_object_drop_ref=e=>{this.#e.takeObject(e)}};var Ls=class{#e;#i;#f;#r;#n;#t;#s;#o;#u;#a;constructor(e){this.#f=e,this.#e=null,this.#i=null,this.#r=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.#n=this.#r.length,this.#a="none",this.#t=null,this.#s=null,this.#o=null,this.#u={...new zs(this)}}get error(){return this.#s}get type(){return this.#a}get wasm(){return this.#t}async init(e){(!this.#o||e)&&(this.#o=(e||this.#f)(this.#u));let{error:r,type:n,wasm:i}=await this.#o;return this.#a=n,this.#t=i,this.#s=r,this.#t}getObject(e){return this.#r[e]}dropObject(e){e<36||(this.#r[e]=this.#n,this.#n=e)}takeObject(e){let r=this.getObject(e);return this.dropObject(e),r}addObject(e){this.#n===this.#r.length&&this.#r.push(this.#r.length+1);let r=this.#n;return this.#n=this.#r[r],this.#r[r]=e,r}getInt32(){return(this.#e===null||this.#e.buffer!==this.#t.memory.buffer)&&(this.#e=new Int32Array(this.#t.memory.buffer)),this.#e}getUint8(){return(this.#i===null||this.#i.buffer!==this.#t.memory.buffer)&&(this.#i=new Uint8Array(this.#t.memory.buffer)),this.#i}getU8a(e,r){return this.getUint8().subarray(e/1,e/1+r)}getString(e,r){return hs(this.getU8a(e,r))}allocU8a(e){let r=this.#t.__wbindgen_malloc(e.length*1);return this.getUint8().set(e,r/1),[r,e.length]}allocString(e){return this.allocU8a(un(e))}resultU8a(){let e=this.getInt32()[2],r=this.getInt32()[8/4+1],n=this.getU8a(e,r).slice();return this.#t.__wbindgen_free(e,r*1),n}resultString(){return hs(this.resultU8a())}};function ap(t,e,r){return async n=>{let i={error:null,type:"none",wasm:null};try{if(!e||!e.length)throw new Error("No WebAssembly provided for initialization");if(typeof WebAssembly!="object"||typeof WebAssembly.instantiate!="function")throw new Error("WebAssembly is not available in your environment");let o=await WebAssembly.instantiate(e,{wbg:n});i.wasm=o.instance.exports,i.type="wasm"}catch(o){typeof r=="function"?(i.wasm=r(n),i.type="asm"):(i.error=`FATAL: Unable to initialize @polkadot/wasm-${t}:: ${o.message}`,console.error(i.error))}return i}}var fp="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",up=new Array(256);for(let t=0;t<fp.length;t++)up[fp.charCodeAt(t)]=t;function fu(t,e){let r=e.length,n=0,i=0,o=-1;for(let s=0;o<r;s++)n=n<<6|up[t.charCodeAt(s)],(i+=6)>=8&&(e[++o]=n>>>(i-=8)&255);return e}var tr=Uint8Array,Sr=Uint16Array,lu=Uint32Array,o2=new tr([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),cp=new tr([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),lp=new tr([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),hp=(t,e)=>{let r=new Sr(31);for(let i=0;i<31;++i)r[i]=e+=1<<t[i-1];let n=new lu(r[30]);for(let i=1;i<30;++i)for(let o=r[i];o<r[i+1];++o)n[o]=o-r[i]<<5|i;return[r,n]},[dp,s2]=hp(cp,2);dp[28]=258,s2[258]=28;var[a2]=hp(lp,0),hu=new Sr(32768);for(let t=0;t<32768;++t){let e=(t&43690)>>>1|(t&21845)<<1;e=(e&52428)>>>2|(e&13107)<<2,e=(e&61680)>>>4|(e&3855)<<4,hu[t]=((e&65280)>>>8|(e&255)<<8)>>>1}var Ii=(t,e,r)=>{let n=t.length,i=0,o=new Sr(e);for(;i<n;++i)++o[t[i]-1];let s=new Sr(e);for(i=0;i<e;++i)s[i]=s[i-1]+o[i-1]<<1;let c;if(r){c=new Sr(1<<e);let d=15-e;for(i=0;i<n;++i)if(t[i]){let m=i<<4|t[i],y=e-t[i],A=s[t[i]-1]++<<y;for(let M=A|(1<<y)-1;A<=M;++A)c[hu[A]>>>d]=m}}else for(c=new Sr(n),i=0;i<n;++i)c[i]=hu[s[t[i]-1]++]>>>15-t[i];return c},qi=new tr(288);for(let t=0;t<144;++t)qi[t]=8;for(let t=144;t<256;++t)qi[t]=9;for(let t=256;t<280;++t)qi[t]=7;for(let t=280;t<288;++t)qi[t]=8;var pp=new tr(32);for(let t=0;t<32;++t)pp[t]=5;var f2=Ii(qi,9,1),u2=Ii(pp,5,1),Vt=(t,e,r)=>{let n=e>>>3;return(t[n]|t[n+1]<<8)>>>(e&7)&r},uu=(t,e)=>{let r=e>>>3;return(t[r]|t[r+1]<<8|t[r+2]<<16)>>>(e&7)},c2=t=>(t>>>3)+(t&7&&1),l2=(t,e,r)=>{(e==null||e<0)&&(e=0),(r==null||r>t.length)&&(r=t.length);let n=new(t instanceof Sr?Sr:t instanceof lu?lu:tr)(r-e);return n.set(t.subarray(e,r)),n},cu=t=>{let e=t[0];for(let r=1;r<t.length;++r)t[r]>e&&(e=t[r]);return e},h2=(t,e,r)=>{let n=!r||r.i;r||(r={});let i=t.length,o=!e||!n;e||(e=new tr(i*3));let s=S=>{let H=e.length;if(S>H){let K=new tr(Math.max(H<<1,S));K.set(e),e=K}},c=r.f||0,d=r.p||0,m=r.b||0,y=r.l,A=r.d,M=r.m,N=r.n;if(c&&!y)return e;let L=i<<3;do{if(!y){r.f=c=Vt(t,d,1);let Q=Vt(t,d+1,3);if(d+=3,Q)if(Q==1)y=f2,A=u2,M=9,N=5;else if(Q==2){let _=Vt(t,d,31)+257,re=Vt(t,d+10,15)+4,fe=_+Vt(t,d+5,31)+1;d+=14;let $=new tr(fe),pe=new tr(19);for(let w=0;w<re;++w)pe[o2[w]]=Vt(t,d+w*3,7);d+=re*3;let Ne=cu(pe),Ye=(1<<Ne)-1;if(!n&&d+fe*(Ne+7)>L)break;let nt=Ii(pe,Ne,1);for(let w=0;w<fe;){let a=nt[Vt(t,d,Ye)];d+=a&15;let u=a>>>4;if(u<16)$[w++]=u;else{let h=0,p=0;for(u==16?(p=3+Vt(t,d,3),d+=2,h=$[w-1]):u==17?(p=3+Vt(t,d,7),d+=3):u==18&&(p=11+Vt(t,d,127),d+=7);p--;)$[w++]=h}}let me=$.subarray(0,_),tt=$.subarray(_);M=cu(me),N=cu(tt),y=Ii(me,M,1),A=Ii(tt,N,1)}else throw"invalid block type";else{let _=c2(d)+4,re=t[_-4]|t[_-3]<<8,fe=_+re;if(fe>i){if(n)throw"unexpected EOF";break}o&&s(m+re),e.set(t.subarray(_,fe),m),r.b=m+=re,r.p=d=fe<<3;continue}if(d>L)throw"unexpected EOF"}o&&s(m+131072);let S=(1<<M)-1,H=(1<<N)-1,K=M+N+18;for(;n||d+K<L;){let Q=y[uu(t,d)&S],_=Q>>>4;if(d+=Q&15,d>L)throw"unexpected EOF";if(!Q)throw"invalid length/literal";if(_<256)e[m++]=_;else if(_==256){y=void 0;break}else{let re=_-254;if(_>264){let Ye=_-257,nt=cp[Ye];re=Vt(t,d,(1<<nt)-1)+dp[Ye],d+=nt}let fe=A[uu(t,d)&H],$=fe>>>4;if(!fe)throw"invalid distance";d+=fe&15;let pe=a2[$];if($>3){let Ye=lp[$];pe+=uu(t,d)&(1<<Ye)-1,d+=Ye}if(d>L)throw"unexpected EOF";o&&s(m+131072);let Ne=m+re;for(;m<Ne;m+=4)e[m]=e[m-pe],e[m+1]=e[m+1-pe],e[m+2]=e[m+2-pe],e[m+3]=e[m+3-pe];m=Ne}}r.l=y,r.p=d,r.b=m,y&&(c=1,r.m=M,r.d=A,r.n=N)}while(!c);return m==e.length?e:l2(e,0,m)},d2=t=>{if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function du(t,e){return h2((d2(t),t.subarray(2,-4)),e)}var ai=vn(yp(),1);var vp=du(fu(ai.bytes,new Uint8Array(ai.lenIn)),new Uint8Array(ai.lenOut));var bp=ap("crypto",vp,null);var pn=new Ls(bp);function m2(t){return(...e)=>{if(!pn.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return t(pn.wasm,...e)}}var gp=m2((t,e,r,n)=>(t.ext_blake2b(8,...pn.allocU8a(e),...pn.allocU8a(r),n),pn.resultU8a()));function wp(){return!!pn.wasm}function pu(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}function y2(t){if(typeof t!="boolean")throw new Error(`Expected boolean, not ${t}`)}function xp(t,...e){if(!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new TypeError(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}function v2(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");pu(t.outputLen),pu(t.blockLen)}function b2(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function g2(t,e){xp(t);let r=e.outputLen;if(t.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}var w2={number:pu,bool:y2,bytes:xp,hash:v2,exists:b2,output:g2},mn=w2;var x2={node:void 0,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0};var fi=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4));var A2=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!A2)throw new Error("Non little-endian hardware is not supported");var cA=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function P2(t){if(typeof t!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof t}`);return new TextEncoder().encode(t)}function yn(t){if(typeof t=="string"&&(t=P2(t)),!(t instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof t})`);return t}var js=class{clone(){return this._cloneInto()}};function Ap(t){let e=(n,i)=>t(i).update(yn(n)).digest(),r=t({});return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=n=>t(n),e}var Ss=BigInt(4294967295),mu=BigInt(32);function Pp(t,e=!1){return e?{h:Number(t&Ss),l:Number(t>>mu&Ss)}:{h:Number(t>>mu&Ss)|0,l:Number(t&Ss)|0}}function O2(t,e=!1){let r=new Uint32Array(t.length),n=new Uint32Array(t.length);for(let i=0;i<t.length;i++){let{h:o,l:s}=Pp(t[i],e);[r[i],n[i]]=[o,s]}return[r,n]}var E2=(t,e)=>BigInt(t>>>0)<<mu|BigInt(e>>>0),T2=(t,e,r)=>t>>>r,N2=(t,e,r)=>t<<32-r|e>>>r,M2=(t,e,r)=>t>>>r|e<<32-r,k2=(t,e,r)=>t<<32-r|e>>>r,z2=(t,e,r)=>t<<64-r|e>>>r-32,L2=(t,e,r)=>t>>>r-32|e<<64-r,j2=(t,e)=>e,S2=(t,e)=>t,B2=(t,e,r)=>t<<r|e>>>32-r,U2=(t,e,r)=>e<<r|t>>>32-r,R2=(t,e,r)=>e<<r-32|t>>>64-r,F2=(t,e,r)=>t<<r-32|e>>>64-r;function C2(t,e,r,n){let i=(e>>>0)+(n>>>0);return{h:t+r+(i/2**32|0)|0,l:i|0}}var X2=(t,e,r)=>(t>>>0)+(e>>>0)+(r>>>0),D2=(t,e,r,n)=>e+r+n+(t/2**32|0)|0,H2=(t,e,r,n)=>(t>>>0)+(e>>>0)+(r>>>0)+(n>>>0),I2=(t,e,r,n,i)=>e+r+n+i+(t/2**32|0)|0,q2=(t,e,r,n,i)=>(t>>>0)+(e>>>0)+(r>>>0)+(n>>>0)+(i>>>0),Z2=(t,e,r,n,i,o)=>e+r+n+i+o+(t/2**32|0)|0,V2={fromBig:Pp,split:O2,toBig:E2,shrSH:T2,shrSL:N2,rotrSH:M2,rotrSL:k2,rotrBH:z2,rotrBL:L2,rotr32H:j2,rotr32L:S2,rotlSH:B2,rotlSL:U2,rotlBH:R2,rotlBL:F2,add:C2,add3L:X2,add3H:D2,add4L:H2,add4H:I2,add5H:Z2,add5L:q2},bt=V2;function ui(t){if(!Number.isSafeInteger(t))throw new Error(`Wrong integer: ${t}`)}function dr(...t){let e=(i,o)=>s=>i(o(s)),r=Array.from(t).reverse().reduce((i,o)=>i?e(i,o.encode):o.encode,void 0),n=t.reduce((i,o)=>i?e(i,o.decode):o.decode,void 0);return{encode:r,decode:n}}function pr(t){return{encode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return e.map(r=>{if(ui(r),r<0||r>=t.length)throw new Error(`Digit index outside alphabet: ${r} (alphabet: ${t.length})`);return t[r]})},decode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="string")throw new Error("alphabet.decode input should be array of strings");return e.map(r=>{if(typeof r!="string")throw new Error(`alphabet.decode: not string element=${r}`);let n=t.indexOf(r);if(n===-1)throw new Error(`Unknown letter: "${r}". Allowed: ${t}`);return n})}}}function mr(t=""){if(typeof t!="string")throw new Error("join separator should be string");return{encode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="string")throw new Error("join.encode input should be array of strings");for(let r of e)if(typeof r!="string")throw new Error(`join.encode: non-string input=${r}`);return e.join(t)},decode:e=>{if(typeof e!="string")throw new Error("join.decode input should be string");return e.split(t)}}}function Us(t,e="="){if(ui(t),typeof e!="string")throw new Error("padding chr should be string");return{encode(r){if(!Array.isArray(r)||r.length&&typeof r[0]!="string")throw new Error("padding.encode input should be array of strings");for(let n of r)if(typeof n!="string")throw new Error(`padding.encode: non-string input=${n}`);for(;r.length*t%8;)r.push(e);return r},decode(r){if(!Array.isArray(r)||r.length&&typeof r[0]!="string")throw new Error("padding.encode input should be array of strings");for(let i of r)if(typeof i!="string")throw new Error(`padding.decode: non-string input=${i}`);let n=r.length;if(n*t%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&r[n-1]===e;n--)if(!((n-1)*t%8))throw new Error("Invalid padding: string has too much padding");return r.slice(0,n)}}}function kp(t){if(typeof t!="function")throw new Error("normalize fn should be function");return{encode:e=>e,decode:e=>t(e)}}function Op(t,e,r){if(e<2)throw new Error(`convertRadix: wrong from=${e}, base cannot be less than 2`);if(r<2)throw new Error(`convertRadix: wrong to=${r}, base cannot be less than 2`);if(!Array.isArray(t))throw new Error("convertRadix: data should be array");if(!t.length)return[];let n=0,i=[],o=Array.from(t);for(o.forEach(s=>{if(ui(s),s<0||s>=e)throw new Error(`Wrong integer: ${s}`)});;){let s=0,c=!0;for(let d=n;d<o.length;d++){let m=o[d],y=e*s+m;if(!Number.isSafeInteger(y)||e*s/e!==s||y-m!==e*s)throw new Error("convertRadix: carry overflow");if(s=y%r,o[d]=Math.floor(y/r),!Number.isSafeInteger(o[d])||o[d]*r+s!==y)throw new Error("convertRadix: carry overflow");if(c)o[d]?c=!1:n=d;else continue}if(i.push(s),c)break}for(let s=0;s<t.length-1&&t[s]===0;s++)i.push(0);return i.reverse()}var zp=(t,e)=>e?zp(e,t%e):t,Bs=(t,e)=>t+(e-zp(t,e));function yu(t,e,r,n){if(!Array.isArray(t))throw new Error("convertRadix2: data should be array");if(e<=0||e>32)throw new Error(`convertRadix2: wrong from=${e}`);if(r<=0||r>32)throw new Error(`convertRadix2: wrong to=${r}`);if(Bs(e,r)>32)throw new Error(`convertRadix2: carry overflow from=${e} to=${r} carryBits=${Bs(e,r)}`);let i=0,o=0,s=2**r-1,c=[];for(let d of t){if(ui(d),d>=2**e)throw new Error(`convertRadix2: invalid data word=${d} from=${e}`);if(i=i<<e|d,o+e>32)throw new Error(`convertRadix2: carry overflow pos=${o} from=${e}`);for(o+=e;o>=r;o-=r)c.push((i>>o-r&s)>>>0);i&=2**o-1}if(i=i<<r-o&s,!n&&o>=e)throw new Error("Excess padding");if(!n&&i)throw new Error(`Non-zero padding: ${i}`);return n&&o>0&&c.push(i>>>0),c}function G2(t){return ui(t),{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return Op(Array.from(e),2**8,t)},decode:e=>{if(!Array.isArray(e)||e.length&&typeof e[0]!="number")throw new Error("radix.decode input should be array of strings");return Uint8Array.from(Op(e,t,2**8))}}}function Br(t,e=!1){if(ui(t),t<=0||t>32)throw new Error("radix2: bits should be in (0..32]");if(Bs(8,t)>32||Bs(t,8)>32)throw new Error("radix2: carry overflow");return{encode:r=>{if(!(r instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return yu(Array.from(r),8,t,!e)},decode:r=>{if(!Array.isArray(r)||r.length&&typeof r[0]!="number")throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(yu(r,t,8,e))}}}function Ep(t){if(typeof t!="function")throw new Error("unsafeWrapper fn should be function");return function(...e){try{return t.apply(null,e)}catch{}}}var Y2=dr(Br(4),pr("0123456789ABCDEF"),mr("")),W2=dr(Br(5),pr("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),Us(5),mr("")),dA=dr(Br(5),pr("0123456789ABCDEFGHIJKLMNOPQRSTUV"),Us(5),mr("")),pA=dr(Br(5),pr("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),mr(""),kp(t=>t.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1"))),J2=dr(Br(6),pr("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),Us(6),mr("")),K2=dr(Br(6),pr("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),Us(6),mr("")),bu=t=>dr(G2(58),pr(t),mr("")),Vi=bu("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),mA=bu("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),yA=bu("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),Tp=[0,2,3,5,6,7,9,10,11],Q2={encode(t){let e="";for(let r=0;r<t.length;r+=8){let n=t.subarray(r,r+8);e+=Vi.encode(n).padStart(Tp[n.length],"1")}return e},decode(t){let e=[];for(let r=0;r<t.length;r+=11){let n=t.slice(r,r+11),i=Tp.indexOf(n.length),o=Vi.decode(n);for(let s=0;s<o.length-i;s++)if(o[s]!==0)throw new Error("base58xmr: wrong padding");e=e.concat(Array.from(o.slice(o.length-i)))}return Uint8Array.from(e)}};var vu=dr(pr("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),mr("")),Np=[996825010,642813549,513874426,1027748829,705979059];function Zi(t){let e=t>>25,r=(t&33554431)<<5;for(let n=0;n<Np.length;n++)(e>>n&1)===1&&(r^=Np[n]);return r}function Mp(t,e,r=1){let n=t.length,i=1;for(let o=0;o<n;o++){let s=t.charCodeAt(o);if(s<33||s>126)throw new Error(`Invalid prefix (${t})`);i=Zi(i)^s>>5}i=Zi(i);for(let o=0;o<n;o++)i=Zi(i)^t.charCodeAt(o)&31;for(let o of e)i=Zi(i)^o;for(let o=0;o<6;o++)i=Zi(i);return i^=r,vu.encode(yu([i%2**30],30,5,!1))}function Lp(t){let e=t==="bech32"?1:734539939,r=Br(5),n=r.decode,i=r.encode,o=Ep(n);function s(y,A,M=90){if(typeof y!="string")throw new Error(`bech32.encode prefix should be string, not ${typeof y}`);if(!Array.isArray(A)||A.length&&typeof A[0]!="number")throw new Error(`bech32.encode words should be array of numbers, not ${typeof A}`);let N=y.length+7+A.length;if(M!==!1&&N>M)throw new TypeError(`Length ${N} exceeds limit ${M}`);return y=y.toLowerCase(),`${y}1${vu.encode(A)}${Mp(y,A,e)}`}function c(y,A=90){if(typeof y!="string")throw new Error(`bech32.decode input should be string, not ${typeof y}`);if(y.length<8||A!==!1&&y.length>A)throw new TypeError(`Wrong string length: ${y.length} (${y}). Expected (8..${A})`);let M=y.toLowerCase();if(y!==M&&y!==y.toUpperCase())throw new Error("String must be lowercase or uppercase");y=M;let N=y.lastIndexOf("1");if(N===0||N===-1)throw new Error('Letter "1" must be present between prefix and data only');let L=y.slice(0,N),S=y.slice(N+1);if(S.length<6)throw new Error("Data must be at least 6 characters long");let H=vu.decode(S).slice(0,-6),K=Mp(L,H,e);if(!S.endsWith(K))throw new Error(`Invalid checksum in ${y}: expected "${K}"`);return{prefix:L,words:H}}let d=Ep(c);function m(y){let{prefix:A,words:M}=c(y,!1);return{prefix:A,words:M,bytes:n(M)}}return{encode:s,decode:c,decodeToBytes:m,decodeUnsafe:d,fromWords:n,fromWordsUnsafe:o,toWords:i}}var vA=Lp("bech32"),bA=Lp("bech32m"),_2={encode:t=>new TextDecoder().decode(t),decode:t=>new TextEncoder().encode(t)},$2=dr(Br(4),pr("0123456789abcdef"),mr(""),kp(t=>{if(typeof t!="string"||t.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof t} with length ${t.length}`);return t.toLowerCase()})),e3={utf8:_2,hex:$2,base16:Y2,base32:W2,base64:J2,base64url:K2,base58:Vi,base58xmr:Q2},gA=`Invalid encoding type. Available types: ${Object.keys(e3).join(", ")}`;function jp({coder:t,ipfs:e},r){return(n,i)=>(r(n,i),t.decode(e&&i?n.substring(1):n))}function Sp({coder:t,ipfs:e}){return(r,n)=>{let i=t.encode(Zt(r));return e&&n?`${e}${i}`:i}}function Bp({chars:t,ipfs:e,type:r}){return(n,i)=>{if(!n||typeof n!="string")throw new Error(`Expected non-null, non-empty ${r} string input`);if(e&&i&&n[0]!==e)throw new Error(`Expected ipfs-compatible ${r} to start with '${e}'`);for(let o=i?1:0;o<n.length;o++)if(!(t.includes(n[o])||n[o]==="="&&(o===n.length-1||!t.includes(n[o+1]))))throw new Error(`Invalid ${r} character "${n[o]}" (0x${n.charCodeAt(o).toString(16)}) at index ${o}`);return!0}}var gu={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:Vi,ipfs:"z",type:"base58"},Up=Bp(gu),wu=jp(gu,Up),xu=Sp(gu);var Rp=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]),Rs=class extends js{constructor(e,r,n={},i,o,s){if(super(),this.blockLen=e,this.outputLen=r,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,mn.number(e),mn.number(r),mn.number(i),r<0||r>i)throw new Error("Blake2: outputLen bigger than keyLen");if(n.key!==void 0&&(n.key.length<1||n.key.length>i))throw new Error(`Key should be up 1..${i} byte long or undefined`);if(n.salt!==void 0&&n.salt.length!==o)throw new Error(`Salt should be ${o} byte long or undefined`);if(n.personalization!==void 0&&n.personalization.length!==s)throw new Error(`Personalization should be ${s} byte long or undefined`);this.buffer32=fi(this.buffer=new Uint8Array(e))}update(e){mn.exists(this);let{blockLen:r,buffer:n,buffer32:i}=this;e=yn(e);let o=e.length;for(let s=0;s<o;){this.pos===r&&(this.compress(i,0,!1),this.pos=0);let c=Math.min(r-this.pos,o-s),d=e.byteOffset+s;if(c===r&&!(d%4)&&s+c<o){let m=new Uint32Array(e.buffer,d,Math.floor((o-s)/4));for(let y=0;s+r<o;y+=i.length,s+=r)this.length+=r,this.compress(m,y,!1);continue}n.set(e.subarray(s,s+c),this.pos),this.pos+=c,this.length+=c,s+=c}return this}digestInto(e){mn.exists(this),mn.output(e,this);let{pos:r,buffer32:n}=this;this.finished=!0,this.buffer.subarray(r).fill(0),this.compress(n,0,!0);let i=fi(e);this.get().forEach((o,s)=>i[s]=o)}digest(){let{buffer:e,outputLen:r}=this;this.digestInto(e);let n=e.slice(0,r);return this.destroy(),n}_cloneInto(e){let{buffer:r,length:n,finished:i,destroyed:o,outputLen:s,pos:c}=this;return e||(e=new this.constructor({dkLen:s})),e.set(...this.get()),e.length=n,e.finished=i,e.destroyed=o,e.outputLen=s,e.buffer.set(r),e.pos=c,e}};var st=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),q=new Uint32Array(32);function Ur(t,e,r,n,i,o){let s=i[o],c=i[o+1],d=q[2*t],m=q[2*t+1],y=q[2*e],A=q[2*e+1],M=q[2*r],N=q[2*r+1],L=q[2*n],S=q[2*n+1],H=bt.add3L(d,y,s);m=bt.add3H(H,m,A,c),d=H|0,{Dh:S,Dl:L}={Dh:S^m,Dl:L^d},{Dh:S,Dl:L}={Dh:bt.rotr32H(S,L),Dl:bt.rotr32L(S,L)},{h:N,l:M}=bt.add(N,M,S,L),{Bh:A,Bl:y}={Bh:A^N,Bl:y^M},{Bh:A,Bl:y}={Bh:bt.rotrSH(A,y,24),Bl:bt.rotrSL(A,y,24)},q[2*t]=d,q[2*t+1]=m,q[2*e]=y,q[2*e+1]=A,q[2*r]=M,q[2*r+1]=N,q[2*n]=L,q[2*n+1]=S}function Rr(t,e,r,n,i,o){let s=i[o],c=i[o+1],d=q[2*t],m=q[2*t+1],y=q[2*e],A=q[2*e+1],M=q[2*r],N=q[2*r+1],L=q[2*n],S=q[2*n+1],H=bt.add3L(d,y,s);m=bt.add3H(H,m,A,c),d=H|0,{Dh:S,Dl:L}={Dh:S^m,Dl:L^d},{Dh:S,Dl:L}={Dh:bt.rotrSH(S,L,16),Dl:bt.rotrSL(S,L,16)},{h:N,l:M}=bt.add(N,M,S,L),{Bh:A,Bl:y}={Bh:A^N,Bl:y^M},{Bh:A,Bl:y}={Bh:bt.rotrBH(A,y,63),Bl:bt.rotrBL(A,y,63)},q[2*t]=d,q[2*t+1]=m,q[2*e]=y,q[2*e+1]=A,q[2*r]=M,q[2*r+1]=N,q[2*n]=L,q[2*n+1]=S}var Au=class extends Rs{constructor(e={}){super(128,e.dkLen===void 0?64:e.dkLen,e,64,16,16),this.v0l=st[0]|0,this.v0h=st[1]|0,this.v1l=st[2]|0,this.v1h=st[3]|0,this.v2l=st[4]|0,this.v2h=st[5]|0,this.v3l=st[6]|0,this.v3h=st[7]|0,this.v4l=st[8]|0,this.v4h=st[9]|0,this.v5l=st[10]|0,this.v5h=st[11]|0,this.v6l=st[12]|0,this.v6h=st[13]|0,this.v7l=st[14]|0,this.v7h=st[15]|0;let r=e.key?e.key.length:0;if(this.v0l^=this.outputLen|r<<8|1<<16|1<<24,e.salt){let n=fi(yn(e.salt));this.v4l^=n[0],this.v4h^=n[1],this.v5l^=n[2],this.v5h^=n[3]}if(e.personalization){let n=fi(yn(e.personalization));this.v6l^=n[0],this.v6h^=n[1],this.v7l^=n[2],this.v7h^=n[3]}if(e.key){let n=new Uint8Array(this.blockLen);n.set(yn(e.key)),this.update(n)}}get(){let{v0l:e,v0h:r,v1l:n,v1h:i,v2l:o,v2h:s,v3l:c,v3h:d,v4l:m,v4h:y,v5l:A,v5h:M,v6l:N,v6h:L,v7l:S,v7h:H}=this;return[e,r,n,i,o,s,c,d,m,y,A,M,N,L,S,H]}set(e,r,n,i,o,s,c,d,m,y,A,M,N,L,S,H){this.v0l=e|0,this.v0h=r|0,this.v1l=n|0,this.v1h=i|0,this.v2l=o|0,this.v2h=s|0,this.v3l=c|0,this.v3h=d|0,this.v4l=m|0,this.v4h=y|0,this.v5l=A|0,this.v5h=M|0,this.v6l=N|0,this.v6h=L|0,this.v7l=S|0,this.v7h=H|0}compress(e,r,n){this.get().forEach((d,m)=>q[m]=d),q.set(st,16);let{h:i,l:o}=bt.fromBig(BigInt(this.length));q[24]=st[8]^o,q[25]=st[9]^i,n&&(q[28]=~q[28],q[29]=~q[29]);let s=0,c=Rp;for(let d=0;d<12;d++)Ur(0,4,8,12,e,r+2*c[s++]),Rr(0,4,8,12,e,r+2*c[s++]),Ur(1,5,9,13,e,r+2*c[s++]),Rr(1,5,9,13,e,r+2*c[s++]),Ur(2,6,10,14,e,r+2*c[s++]),Rr(2,6,10,14,e,r+2*c[s++]),Ur(3,7,11,15,e,r+2*c[s++]),Rr(3,7,11,15,e,r+2*c[s++]),Ur(0,5,10,15,e,r+2*c[s++]),Rr(0,5,10,15,e,r+2*c[s++]),Ur(1,6,11,12,e,r+2*c[s++]),Rr(1,6,11,12,e,r+2*c[s++]),Ur(2,7,8,13,e,r+2*c[s++]),Rr(2,7,8,13,e,r+2*c[s++]),Ur(3,4,9,14,e,r+2*c[s++]),Rr(3,4,9,14,e,r+2*c[s++]);this.v0l^=q[0]^q[16],this.v0h^=q[1]^q[17],this.v1l^=q[2]^q[18],this.v1h^=q[3]^q[19],this.v2l^=q[4]^q[20],this.v2h^=q[5]^q[21],this.v3l^=q[6]^q[22],this.v3h^=q[7]^q[23],this.v4l^=q[8]^q[24],this.v4h^=q[9]^q[25],this.v5l^=q[10]^q[26],this.v5h^=q[11]^q[27],this.v6l^=q[12]^q[28],this.v6h^=q[13]^q[29],this.v7l^=q[14]^q[30],this.v7h^=q[15]^q[31],q.fill(0)}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}},Fp=Ap(t=>new Au(t));function Cp(t){return(...e)=>Hf(t(...e))}function Pu(t,e=256,r,n){let i=Math.ceil(e/8),o=Zt(t);return!Xf||!n&&wp()?gp(o,Zt(r),i):Fp(o,{dkLen:i,key:r||void 0})}var qA=Cp(Pu);var t3=un("SS58PRE");function Fs(t){return Pu($n(t3,t),512)}function Xp(t){let e=t[0]&64?2:1,r=e===1?t[0]:(t[0]&63)<<2|t[1]>>6|(t[1]&63)<<8,n=[34+e,35+e].includes(t.length),i=t.length-(n?2:1),o=Fs(t.subarray(0,i));return[(t[0]&128)===0&&![46,47].includes(t[0])&&(n?t[t.length-2]===o[0]&&t[t.length-1]===o[1]:t[t.length-1]===o[0]),i,e,r]}var Dp=[{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara-network.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2208,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:4006,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.webb.tools/"},{prefix:4450,network:"g1",displayName:"\u011E1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"}];var Ou={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]};var Eu={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"};var Tu={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,nodle:1003,origintrail:354,parallel:354,phala:354,polkadex:799,polkadot:354,polymesh:595,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:354,vtb:694,xxnetwork:1955};var Nu={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0};var Hp=[0,2,42],r3=["testnet"];function n3(t){let e=t.network||"",r=e.replace(/_/g,"-").split("-"),n=t;return n.slip44=Tu[e],n.hasLedgerSupport=!!n.slip44,n.genesisHash=Ou[e]||[],n.icon=Eu[e]||"substrate",n.isTestnet=!!Nu[e]||r3.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(t.standardAccount&&t.decimals&&t.decimals.length&&t.symbols&&t.symbols.length)&&t.prefix!==42,n}function i3({genesisHash:t,prefix:e}){return!!t.length||e===42}function o3(t){return!t.isIgnored&&!!t.network}function s3(t,e){let r=Hp.includes(t.prefix),n=Hp.includes(e.prefix);return r===n?r?0:t.displayName.localeCompare(e.displayName):r?-1:1}var Ip=Dp.map(n3),Cs=Ip.filter(o3).sort(s3),a3=Cs.filter(i3);var ci={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:Cs.map(({prefix:t})=>t),prefix:42};function Gi(t,e,r=-1){if(!t)throw new Error("Invalid empty address passed");if(Bi(t)||Si(t))return Zt(t);try{let n=wu(t);if(!ci.allowedEncodedLengths.includes(n.length))throw new Error("Invalid decoded address length");let[i,o,s,c]=Xp(n);if(!i&&!e)throw new Error("Invalid decoded address checksum");if(r!==-1&&r!==c)throw new Error(`Expected ss58Format ${r}, received ${c}`);return n.slice(s,o)}catch(n){throw new Error(`Decoding ${t}: ${n.message}`)}}function Mu(t,e=ci.prefix){let r=Gi(t);if(e<0||e>16383||[46,47].includes(e))throw new Error("Out of range ss58Format specified");if(!ci.allowedDecodedLengths.includes(r.length))throw new Error(`Expected a valid key to convert, with length ${ci.allowedDecodedLengths.join(", ")}`);let n=$n(e<64?[e]:[(e&252)>>2|64,e>>8|(e&3)<<6],r);return xu($n(n,Fs(n).subarray(0,[32,33].includes(r.length)?2:1)))}function qp(t){return new Promise(e=>{document.readyState==="complete"?e(t()):window.addEventListener("load",()=>e(t()))})}var Xs=window;Xs.injectedWeb3=Xs.injectedWeb3||{};function Zp(){return Object.keys(Xs.injectedWeb3).length!==0}function ku(t){throw new Error(`${t}: web3Enable(originName) needs to be called before ${t}`)}function Vp(t,e,r){return e.map(({address:n,genesisHash:i,name:o,type:s})=>({address:n.length===42?n:Mu(Gi(n),r),meta:{genesisHash:i,name:o,source:t},type:s}))}var zu=Zp(),Fr=null;function f3(t){return Promise.all(Object.entries(Xs.injectedWeb3).map(([e,{enable:r,version:n}])=>Promise.all([Promise.resolve({name:e,version:n}),r(t).catch(i=>{console.error(`Error initializing ${e}: ${i.message}`)})])))}function Gp(t,e=[]){if(!t)throw new Error("You must pass a name for your app to the web3Enable function");let r=e.length?Promise.all(e.map(n=>n().catch(()=>!1))):Promise.resolve([!0]);return Fr=qp(()=>r.then(()=>f3(t).then(n=>n.filter(i=>!!i[1]).map(([i,o])=>(o.accounts.subscribe||(o.accounts.subscribe=s=>(o.accounts.get().then(s).catch(console.error),()=>{})),{...i,...o}))).catch(()=>[]).then(n=>{let i=n.map(({name:o,version:s})=>`${o}/${s}`);return zu=Zp(),console.log(`web3Enable: Enabled ${n.length} extension${n.length!==1?"s":""}: ${i.join(", ")}`),n}))),Fr}async function Yp({accountType:t,extensions:e,ss58Format:r}={}){if(!Fr)return ku("web3Accounts");let n=[],i=await Fr;(await Promise.all(i.filter(({name:c})=>!e||e.includes(c)).map(async({accounts:c,name:d})=>{try{let m=await c.get();return Vp(d,m.filter(({type:y})=>y&&t?t.includes(y):!0),r)}catch{return[]}}))).forEach(c=>{n.push(...c)});let s=n.map(({address:c})=>c);return console.log(`web3Accounts: Found ${n.length} address${n.length!==1?"es":""}: ${s.join(", ")}`),n}async function Wp(t,{extensions:e,ss58Format:r}={}){if(!Fr)return ku("web3AccountsSubscribe");let n={},i=()=>t(Object.entries(n).reduce((s,[c,d])=>(s.push(...Vp(c,d,r)),s),[])),o=(await Fr).filter(({name:s})=>!e||e.includes(s)).map(({accounts:{subscribe:s},name:c})=>s(d=>{n[c]=d;try{var m;(m=i())===null||m===void 0||m.catch(console.error)}catch(y){console.error(y)}}));return()=>{o.forEach(s=>{s()})}}async function Jp(t){if(!Fr)return ku("web3FromSource");let e=await Fr,r=t&&e.find(({name:n})=>n===t);if(!r)throw new Error(`web3FromSource: Unable to find an injected ${t}`);return r}var Lu=class extends Ns{constructor(e,r){super(e),this.injectedAccount=e,this.injector=r}getAddress(e){return op(this.injectedAccount.address,e)}async sign(e){var r,n;let i=(n=(r=this.injector)==null?void 0:r.signer)==null?void 0:n.signPayload;if(!i)throw new Error("Failed to sign message; signPayload() method is missing");let{signature:o}=await i(e.signerPayloadJSON);return{signature:o,signatureType:this.injectedAccount.type}}getSigner(){return this}};async function Kp(t){let e=await Jp(t.meta.source);return new Lu(t,e)}var Ds=class extends Ms{constructor(e={}){super(),this.options=e}async init(){return!(await Gp("@unique-nft/accounts")).length||!zu||await Wp(async r=>{let n=await Promise.all(r.map(Kp));this.emit("accountsChanged",n)}),Promise.resolve()}async getAccounts(){let e=await Yp(this.options);return Promise.all(e.map(Kp))}forgetAccount(e){throw new Error("Can't forget an account from polkadot provider")}};var u3="https://rest.quartz.uniquenetwork.dev/v1";async function c3(t,e,r){let{decimals:n}=await t.common.chainProperties(),i=r.toString().split("."),o=i[0]!=="0"?i[0]:"";return i[1]?o+=i[1]+Array(n-i[1].length).fill("0").join(""):o+=Array(n).fill("0").join(""),t.extrinsics.submitWaitResult({address:e,section:"appPromotion",method:"stake",args:[o]})}var l3=async t=>{let e=new Ds;await e.init();let n=(await e.getAccounts())[3],i={baseUrl:u3,signer:n},o=new Jd(i),s=await o.balance.get({address:n.instance.address});console.log(s);let c=await c3(o,n.instance.address,t);if(console.log(c),c.error)throw new Error(c.error);let d=await o.stateQuery.execute({endpoint:"rpc",module:"appPromotion",method:"totalStaked"},{args:[{Substrate:n.instance.address}]});console.log(d)},h3=async()=>{document.querySelector("form").addEventListener("submit",async e=>{e.preventDefault();let r=document.querySelector("#amount")&&document.querySelector("#amount").value;document.querySelector("#response").innerText="wait...";try{await l3(r),document.querySelector("#response").innerText=`Output:
staked`}catch(n){console.log(JSON.stringify(n)),document.querySelector("#response").innerText="Error"}})};h3();})();
/*! Bundled license information:

js-sha3/src/sha3.js:
  (**
   * [js-sha3]{@link https://github.com/emn178/js-sha3}
   *
   * @version 0.8.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2015-2018
   * @license MIT
   *)

@noble/hashes/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

reflect-metadata/Reflect.js:
  (*! *****************************************************************************
  Copyright (C) Microsoft. All rights reserved.
  Licensed under the Apache License, Version 2.0 (the "License"); you may not use
  this file except in compliance with the License. You may obtain a copy of the
  License at http://www.apache.org/licenses/LICENSE-2.0
  
  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
  MERCHANTABLITY OR NON-INFRINGEMENT.
  
  See the Apache Version 2.0 License for specific language governing permissions
  and limitations under the License.
  ***************************************************************************** *)

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@scure/base/lib/esm/index.js:
  (*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
